{"ok": 1, "data": [{"featured_section_series_id": 450}, {"featured_section_series": "Haikyu!!"}, {"featured_section_title": "Featured: Haikyu!!"}, {"featured_chapter_offset_start": 1.0}, {"featured_chapter_offset_end": 10.0}, {"manga": {"id": 24089, "manga_common_id": 24089, "device_id": 4, "published": true, "publication_date": "2023-12-26T00:08:23.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/protectmeshugomaru/PSU01.zip", "description": "Sanagi is ready for a fresh start at a new school, but her status as a famous heiress makes her idyllic school life hard to achieve. Assassins are after Sanagi and her family, and Sanagi is assigned an unlikely bodyguard\u2014a ten-year-old named Shugomaru. Not only does Shugomaru\u2019s constant presence make it hard for Sanagi to be a regular student, but he\u2019s also a danger to himself and anyone in his path! Can he learn to be an effective bodyguard, or is Sanagi doubly doomed?", "thumb": "manga/thumbs/thumb-96325-ProtectMeShugomaru_DigitalGN01_C1_Web-4-mXvRrv_2Y5bGqNPUfWv4jw.jpg", "featured": false, "created_at": "2022-02-17T23:01:29.000-08:00", "updated_at": "2023-11-09T16:19:31.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 25694, "new": true, "manga_series_common_id": 812, "title": "Protect Me, Shugomaru!, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 193, "author": "Daiki Ihara", "issue_date": 0, "isbn13": "978-1-9747-3607-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Protect Me, Shugomaru!", "series_vanityurl": "protect-me-shugomaru", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1703578103, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.protectmeshugomaru01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-96325-ProtectMeShugomaru_DigitalGN01_C1_Web-4-mXvRrv_2Y5bGqNPUfWv4jw.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1703578103, "epoch_exp_date": null, "series_title_sort": "protect me, shugomaru!", "new_pokemon": false}}, {"manga": {"id": 25559, "manga_common_id": 25559, "device_id": 4, "published": true, "publication_date": "2023-05-02T00:10:00.000-07:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/onepunchman/OPM25.zip", "description": "In an underground labyrinth, Puri-Puri Prisoner encounters Garo, who is now stronger than ever! Meanwhile, Saitama teams up with the hero Flash while both are lost underground. On the surface, Nyaan toys with Class-A heroes until Drive Knight appears!", "thumb": "manga/thumbs/thumb-102205-OnePunchMan_GN25_C1_Website-4-P2khxYD97evrhIt04xfuFQ.jpg", "featured": true, "created_at": "2022-09-26T23:12:04.000-07:00", "updated_at": "2023-04-19T13:55:26.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 26268, "new": false, "manga_series_common_id": 249, "title": "One-Punch Man, Vol. 25", "volume": 25, "chapter": null, "parent_manga_common_id": null, "numpages": 192, "author": "Story by ONE, Art by Yusuke Murata", "issue_date": 0, "isbn13": "978-1-9747-3923-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "One-Punch Man", "series_vanityurl": "one-punch-man", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1683221233, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.onepunchman25", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-102205-OnePunchMan_GN25_C1_Website-4-P2khxYD97evrhIt04xfuFQ.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1683011400, "epoch_exp_date": null, "series_title_sort": "one-punch man", "new_pokemon": false}}, {"manga": {"id": 25694, "manga_common_id": 25694, "device_id": 4, "published": true, "publication_date": "2023-12-26T00:08:33.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/protectmeshugomaru/PSU02.zip", "description": "Shugomaru has fended off Mushroom Oikaze, one of the assassins out for Sanagi\u2019s life. But the next killer wastes no time showing up to finish the job, and this villain\u2019s magic tricks have Shugomaru in a bind! Can he really protect Sanagi this time?!", "thumb": "manga/thumbs/thumb-102745-ProtectMeShugomaru_DigitalGN02_C1_Web-4-cJ6JjRjpRYP57eASidqOAQ.jpg", "featured": false, "created_at": "2022-10-05T00:47:10.000-07:00", "updated_at": "2023-11-09T16:19:50.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 25695, "new": true, "manga_series_common_id": 812, "title": "Protect Me, Shugomaru!, Vol. 2", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 185, "author": "Daiki Ihara", "issue_date": 0, "isbn13": "978-1-9747-4031-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Protect Me, Shugomaru!", "series_vanityurl": "protect-me-shugomaru", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1703578114, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.protectmeshugomaru02", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-102745-ProtectMeShugomaru_DigitalGN02_C1_Web-4-cJ6JjRjpRYP57eASidqOAQ.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1703578113, "epoch_exp_date": null, "series_title_sort": "protect me, shugomaru!", "new_pokemon": false}}, {"manga": {"id": 25695, "manga_common_id": 25695, "device_id": 4, "published": true, "publication_date": "2023-12-26T00:08:41.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/protectmeshugomaru/PSU03.zip", "description": "Three more bodyguards are hired to watch over Sanagi and beef up security against the threat of Skull. They trained at the same school as Shugomaru, but what are they really capable of? Will Skull finally be unmasked? Find out how Sanagi\u2019s tale ends in this final volume!", "thumb": "manga/thumbs/thumb-102749-ProtectMeShugomaru_DigitalGN03_C1_Website-4-9NKev7Wr400Fxl57VL_7_g.jpg", "featured": false, "created_at": "2022-10-05T00:47:12.000-07:00", "updated_at": "2023-11-09T16:20:39.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": true, "manga_series_common_id": 812, "title": "Protect Me, Shugomaru!, Vol. 3", "volume": 3, "chapter": null, "parent_manga_common_id": null, "numpages": 185, "author": "Daiki Ihara", "issue_date": 0, "isbn13": "978-1-9747-4032-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Protect Me, Shugomaru!", "series_vanityurl": "protect-me-shugomaru", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1703578121, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.protectmeshugomaru03", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-102749-ProtectMeShugomaru_DigitalGN03_C1_Website-4-9NKev7Wr400Fxl57VL_7_g.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1703578121, "epoch_exp_date": null, "series_title_sort": "protect me, shugomaru!", "new_pokemon": false}}, {"manga": {"id": 26343, "manga_common_id": 26343, "device_id": 4, "published": true, "publication_date": "2023-12-26T00:08:27.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/spyxfamilynovels/SFP01.zip", "description": "In this book of Spy x Family original prose stories, Anya attempts to make friends with her target Damian during an Eden Academy camping trip, Yuri spends his day off babysitting his niece, and Franky seeks Loid\u2019s help in winning the heart of a blind opera singer. Then, when the family sits for a portrait painting, Yor is terrified that her secret identity will be blown. And in the final story, the family is scrutinized by a pair of unseen observers\u2026 There\u2019s never been a family quite like this one!", "thumb": "manga/thumbs/thumb-105341-SPYXFAMILY_FamilyPortrait_C1_Web-4-J3NyoIAabeOcg054cEytpg.jpg", "featured": false, "created_at": "2023-02-06T01:04:07.000-08:00", "updated_at": "2023-11-09T16:18:41.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": true, "manga_series_common_id": 871, "title": "Spy x Family: Family Portrait", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 173, "author": "Original Concept by Tatsuya Endo, Written by Aya Yajima", "issue_date": 0, "isbn13": "978-1-9747-4269-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 17, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Spy x Family Novels", "series_vanityurl": "spy-family-novels", "subscription_type": null, "rating": "a", "show_chapter": false, "show_volume": false, "rtl": false, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1703578107, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.spyxfamilynovels01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105341-SPYXFAMILY_FamilyPortrait_C1_Web-4-J3NyoIAabeOcg054cEytpg.jpg", "entitled": null, "new_following": null, "preview_pages": 17, "epoch_pub_date": 1703578107, "epoch_exp_date": null, "series_title_sort": "spy x family novels", "new_pokemon": false}}, {"manga": {"id": 26349, "manga_common_id": 26349, "device_id": 4, "published": true, "publication_date": "2023-12-05T00:09:07.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/boruto/BOR18.zip", "description": "Boruto may have survived his dance with death thanks to some Ohtsutsuki meddling, but the trouble is just beginning. When Code and Eida show up in Konoha Village, even Naruto and Sasuke may be powerless to stop them.", "thumb": "manga/thumbs/thumb-105365-Boruto_GN18_C1_Web-4-FlSAx3vZ7YCsxWrZb_8chA.jpg", "featured": false, "created_at": "2023-02-06T01:12:02.000-08:00", "updated_at": "2023-11-09T15:52:09.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39502, "new": true, "manga_series_common_id": 461, "title": "Boruto: Naruto Next Generations, Vol. 18", "volume": 18, "chapter": null, "parent_manga_common_id": null, "numpages": 173, "author": "Creator/Supervisor: Masashi Kishimoto, Art by Mikio Ikemoto", "issue_date": 0, "isbn13": "978-1-9747-4250-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 17, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Boruto: Naruto Next Generations", "series_vanityurl": "boruto", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1701763747, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.boruto18", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105365-Boruto_GN18_C1_Web-4-FlSAx3vZ7YCsxWrZb_8chA.jpg", "entitled": null, "new_following": null, "preview_pages": 17, "epoch_pub_date": 1701763747, "epoch_exp_date": null, "series_title_sort": "boruto: naruto next generations", "new_pokemon": false}}, {"manga": {"id": 26361, "manga_common_id": 26361, "device_id": 4, "published": true, "publication_date": "2023-12-12T00:08:13.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/demonslayerkimetsuacademy/DSA01.zip", "description": "Zenitsu is late for class, and the only thing between him and Giyu\u2019s bamboo sword is one good excuse. Next, when Inosuke, Murata, and Zenitsu fail their midterm, they must endure the harshest math lesson of their lives. Then there\u2019s Uzui\u2019s explosive art class, Nezuko\u2019s first cavity, and Rengoku\u2019s forbidden pizza!", "thumb": "manga/thumbs/thumb-105413-DemonSlayerKimetsuAcademy_GN01_C1_Web-4-83GEtu5LcPGNm8ptTmipEg.jpg", "featured": false, "created_at": "2023-02-06T01:16:41.000-08:00", "updated_at": "2023-11-09T16:11:55.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39478, "new": true, "manga_series_common_id": 875, "title": "Demon Slayer: Kimetsu Academy, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Original Concept by Koyoharu Gotouge, Story and Art by Natsuki Hokami", "issue_date": 0, "isbn13": "978-1-9747-4256-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Demon Slayer: Kimetsu Academy", "series_vanityurl": "demon-slayer-kimetsu-academy", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1703613600, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.demonslayerkimetsuacademy01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105413-DemonSlayerKimetsuAcademy_GN01_C1_Web-4-83GEtu5LcPGNm8ptTmipEg.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1702368493, "epoch_exp_date": null, "series_title_sort": "demon slayer: kimetsu academy", "new_pokemon": false}}, {"manga": {"id": 26365, "manga_common_id": 26365, "device_id": 4, "published": true, "publication_date": "2023-12-12T00:08:21.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/akanebanashi/ABS03.zip", "description": "The student rakugo competition known as the Karaku Cup is about to begin. Akane immediately draws the attention of the crowd with her connection Kaisei Arakawa, rising star of the Arakawa School and apprentice to Issho Arakawa. With her ani-san Koguma\u2019s advice in her back pocket and her own amazing rakugo skills, she figures out the key to winning the competition with \u201cJugemu,\u201d a rakugo story famous for its long, repetitive tongue twister. But she\u2019ll have to deal with impressive rivals with unique styles of their own\u2026 Will she be able to overcome this battle of wills, wits, and dreams?", "thumb": "manga/thumbs/thumb-105429-AkaneBanashi_GN03_C1_Web-4---gAPOA7qwcdd_wNMewNmQ.jpg", "featured": false, "created_at": "2023-02-06T01:17:41.000-08:00", "updated_at": "2023-11-09T16:10:57.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39437, "new": true, "manga_series_common_id": 825, "title": "Akane-banashi, Vol. 3", "volume": 3, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Story by Yuki Suenaga, Art by Takamasa Moue", "issue_date": 0, "isbn13": "978-1-9747-4255-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Akane-banashi", "series_vanityurl": "akane-banashi", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1702368501, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.akanebanashi03", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105429-AkaneBanashi_GN03_C1_Web-4---gAPOA7qwcdd_wNMewNmQ.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1702368501, "epoch_exp_date": null, "series_title_sort": "akane-banashi", "new_pokemon": false}}, {"manga": {"id": 26380, "manga_common_id": 26380, "device_id": 4, "published": true, "publication_date": "2023-12-19T00:08:33.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/missionyozakura/MYF08.zip", "description": "Preparation for Mission: Yozakura Front Lines to capture Kawashita is underway, and the family is getting help from all its allies\u2014and even some old enemies.While the rest of the family is at work, Taiyo receives special training from Grandpa Ban to unlock the Yozakura family\u2019s secret power\u2014Blooming. Every family member, including those married into the family, has their own Blooming, and Taiyo must unlock his before the mission begins. Time is of the essence, and as the decisive battle waits on the horizon, Kyoichiro tasks Taiyo with a heartfelt secondary mission he has to keep secret, even from the other siblings\u2026", "thumb": "manga/thumbs/thumb-105489-MissionYozakuraFamily_GN08_C1_Web-4-ZoIsrCDU67ChmRTZi2iqbg.jpg", "featured": false, "created_at": "2023-02-06T01:19:31.000-08:00", "updated_at": "2023-11-09T16:18:02.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39410, "new": true, "manga_series_common_id": 627, "title": "Mission: Yozakura Family, Vol. 8", "volume": 8, "chapter": null, "parent_manga_common_id": null, "numpages": 197, "author": "Hitsuji Gondaira", "issue_date": 0, "isbn13": "978-1-9747-4268-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Mission: Yozakura Family", "series_vanityurl": "mission-yozakura-family", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1702973313, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.missionyozakurafam08", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105489-MissionYozakuraFamily_GN08_C1_Web-4-ZoIsrCDU67ChmRTZi2iqbg.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1702973313, "epoch_exp_date": null, "series_title_sort": "mission: yozakura family", "new_pokemon": false}}, {"manga": {"id": 26388, "manga_common_id": 26388, "device_id": 4, "published": true, "publication_date": "2023-12-12T00:08:52.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/mashlemagicandmuscles/MMM14.zip", "description": "Rayne is driven into a corner by Innocent Zero\u2019s fourth son, Delisaster. Finn tries to jump in to help, but Rayne stubbornly refuses his brother\u2019s aid. Meanwhile, Lance and Dot run into the third son, Epidem, but ignore him and start fighting each other instead. Elsewhere, a violent beast tamer and his cerberus catch up to the unconscious Mash, placing the fate of the world in Lemon\u2019s loving hands!", "thumb": "manga/thumbs/thumb-105521-MashleMagicAndMuscles_GN14_C1_Web-4-IHMuzyKK32WLNFPq-HfgHA.jpg", "featured": false, "created_at": "2023-02-06T01:21:06.000-08:00", "updated_at": "2023-11-09T16:12:45.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39500, "new": true, "manga_series_common_id": 694, "title": "Mashle: Magic and Muscles, Vol. 14", "volume": 14, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Hajime Komoto", "issue_date": 0, "isbn13": "978-1-9747-4258-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Mashle: Magic and Muscles", "series_vanityurl": "mashle", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704466740, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.mashle14", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105521-MashleMagicAndMuscles_GN14_C1_Web-4-IHMuzyKK32WLNFPq-HfgHA.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1702368532, "epoch_exp_date": null, "series_title_sort": "mashle: magic and muscles", "new_pokemon": false}}, {"manga": {"id": 26393, "manga_common_id": 26393, "device_id": 4, "published": true, "publication_date": "2023-12-05T00:09:15.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/kaguyasama/KLW27.zip", "description": "Will Kaguya get to the airport in time to say goodbye to Miyuki? First, she and an ally must make one last attempt to repair the rift between the Shinomiya and Shijo families. Then, Miyuki plots what to do with the leftover money from the bribe he received, Miko tries to bridge the distance between her and Yu when he goes abroad for summer break, and Chika leads everyone in one of her signature trauma-inducing games!\n\nWho knows when he\u2019ll be back again.", "thumb": "manga/thumbs/thumb-105541-KaguyaSamaLoveIsWar_GN27_C1_Web-4-Y35B0PfmWqbwWkJiGPx9iw.jpg", "featured": false, "created_at": "2023-02-06T01:22:27.000-08:00", "updated_at": "2023-11-09T15:58:46.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39506, "new": true, "manga_series_common_id": 530, "title": "Kaguya-sama: Love Is War, Vol. 27", "volume": 27, "chapter": null, "parent_manga_common_id": null, "numpages": 207, "author": "Aka Akasaka", "issue_date": 0, "isbn13": "978-1-9747-4252-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Kaguya-sama: Love Is War", "series_vanityurl": "kaguya-sama-love-is-war", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707724800, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.kaguyasama27", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105541-KaguyaSamaLoveIsWar_GN27_C1_Web-4-Y35B0PfmWqbwWkJiGPx9iw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1701763755, "epoch_exp_date": null, "series_title_sort": "kaguya-sama: love is war", "new_pokemon": false, "sale_start_time": 1707724800, "sale_stop_time": 1708329600, "web_list_price": "6.99", "web_sale_price": "4.99"}}, {"manga": {"id": 26394, "manga_common_id": 26394, "device_id": 4, "published": true, "publication_date": "2023-12-05T00:09:27.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/myheroacademia/MHA36.zip", "description": "The plan to engage the villains on the heroes\u2019 terms has mostly succeeded. Now in different locations around Japan, the heroes and U.A. students take on the villains in all-out battles! First, Todoroki squares off against Dabi with terrifying intensity. Elsewhere, Endeavor and Hawks hope to turn the tables on All For One, but the villain mastermind has one last trick up his sleeve. Finally, it\u2019s Tomura\u2019s new and improved body versus the crew at the airborne U.A., where the youngest heroes have critical roles to play!", "thumb": "manga/thumbs/thumb-105545-MyHeroAcademia_GN36_C1_Web-4-hCO120ZBVHbDysPGM4-qgQ.jpg", "featured": false, "created_at": "2023-02-06T01:23:04.000-08:00", "updated_at": "2023-11-09T16:00:43.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39509, "new": true, "manga_series_common_id": 399, "title": "My Hero Academia, Vol. 36", "volume": 36, "chapter": null, "parent_manga_common_id": null, "numpages": 199, "author": "Kohei Horikoshi", "issue_date": 0, "isbn13": "978-1-9747-4253-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "My Hero Academia", "series_vanityurl": "my-hero-academia", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1702926141, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.myheroacademia36", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105545-MyHeroAcademia_GN36_C1_Web-4-hCO120ZBVHbDysPGM4-qgQ.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1701763767, "epoch_exp_date": null, "series_title_sort": "my hero academia", "new_pokemon": false}}, {"manga": {"id": 26432, "manga_common_id": 26432, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:15.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/aliensarea/AAA01.zip", "description": "After losing his parents in a freak accident, high schooler Tatsumi Tatsunami is doing his best just to get by and provide for his younger siblings. But his life gets a whole lot more complicated when he\u2019s attacked by aliens! Saved by a mysterious man named Sharaku who belongs to the even more mysterious organization called Foreign Affairs 5, Tatsumi will have an important decision to make if he wants to figure out why these aliens are after his life!", "thumb": "manga/thumbs/thumb-105697-AliensArea_DigitalGN01_C1_Web-4-AznVmHTnLqerq7p-7O9YLA.jpg", "featured": false, "created_at": "2023-02-12T23:27:21.000-08:00", "updated_at": "2023-12-20T12:25:04.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39448, "new": true, "manga_series_common_id": 829, "title": "Aliens Area, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Story and Art by Fusai Naba", "issue_date": 0, "isbn13": "978-1-9747-3830-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Aliens Area", "series_vanityurl": "aliens-area", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997295, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.aliensarea01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105697-AliensArea_DigitalGN01_C1_Web-4-AznVmHTnLqerq7p-7O9YLA.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1705997295, "epoch_exp_date": null, "series_title_sort": "aliens area", "new_pokemon": false}}, {"manga": {"id": 39373, "manga_common_id": 39373, "device_id": 4, "published": true, "publication_date": "2024-01-02T00:08:51.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/kaijunoeight/KN809.zip", "description": "With the looming threat of a cataclysm induced by No. 9, the next generation of the Defense Force takes steps to prepare. Reno undergoes training and becomes the first compatible user of No. 6 in history. Kafka sharpens his skills by learning squadron-style combat techniques under Hoshina\u2019s tutelage. Meanwhile, Kikoru gets clearance from Narumi to inherit a powerful memento that once belonged to her mother.", "thumb": "manga/thumbs/thumb-157461-KaijuNo8_GN09_C1_Web-4-rmBpA3crcKnT8Pk_5dXJkw.jpg", "featured": false, "created_at": "2023-06-09T00:58:38.000-07:00", "updated_at": "2023-12-20T13:53:02.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40593, "new": true, "manga_series_common_id": 724, "title": "Kaiju No. 8, Vol. 9", "volume": 9, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Story and Art by Naoya Matsumoto", "issue_date": 0, "isbn13": "978-1-9747-4423-7", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Kaiju No. 8", "series_vanityurl": "kaiju-no-8", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706295883, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.kaijunoeight09", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157461-KaijuNo8_GN09_C1_Web-4-rmBpA3crcKnT8Pk_5dXJkw.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1704182931, "epoch_exp_date": null, "series_title_sort": "kaiju no. 8", "new_pokemon": false}}, {"manga": {"id": 39374, "manga_common_id": 39374, "device_id": 4, "published": true, "publication_date": "2024-01-02T00:08:32.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/kuboinvisible/KWI11.zip", "description": "Shiraishi is riding high after a successful school festival\u2014until he learns that Kubo has a crush on someone! Shiraishi is forced to confront his feelings for his first friend, but he isn\u2019t sure if he should act on them. Meanwhile, Kubo opens up to the girls about her crush on Shiraishi. After a long, slow burn, could a budding romance be on the horizon for the unlikely pair?", "thumb": "manga/thumbs/thumb-157465-KuboWontLetMeBeInvisible_GN11_C1_Web-4-_Ago1LUM0eQyhSqKZu302A.jpg", "featured": false, "created_at": "2023-06-09T00:59:23.000-07:00", "updated_at": "2023-12-20T13:53:40.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39493, "new": true, "manga_series_common_id": 795, "title": "Kubo Won\u2019t Let Me Be Invisible, Vol. 11", "volume": 11, "chapter": null, "parent_manga_common_id": null, "numpages": 183, "author": "Story and Art by Nene Yukimori", "issue_date": 0, "isbn13": "978-1-9747-4424-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Kubo Won\u2019t Let Me Be Invisible", "series_vanityurl": "kubo-wont-let-me-be-invisible", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704843369, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.kuboinvisible11", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157465-KuboWontLetMeBeInvisible_GN11_C1_Web-4-_Ago1LUM0eQyhSqKZu302A.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1704182912, "epoch_exp_date": null, "series_title_sort": "kubo won\u2019t let me be invisible", "new_pokemon": false}}, {"manga": {"id": 39375, "manga_common_id": 39375, "device_id": 4, "published": true, "publication_date": "2024-01-02T00:08:26.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/bluebox/BBX08.zip", "description": "After the the actor playing the prince in the class play is knocked out of commission, Taiki is asked to take on the role. As nervous as he is, he follows through with the performance\u2014until an accident befalls him and Hina! Can Taiki handle this shift in their already-precarious relationship?", "thumb": "manga/thumbs/thumb-157469-BlueBox_GN08_C1_Web-4-57M9YTCpoxbFaBQ4XFTXGQ.jpg", "featured": false, "created_at": "2023-06-09T01:00:16.000-07:00", "updated_at": "2023-12-20T13:52:19.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39488, "new": true, "manga_series_common_id": 757, "title": "Blue Box, Vol. 8", "volume": 8, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Story and Art by Kouji Miura", "issue_date": 0, "isbn13": "978-1-9747-4422-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Blue Box", "series_vanityurl": "blue-box", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704182906, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.bluebox08", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157469-BlueBox_GN08_C1_Web-4-57M9YTCpoxbFaBQ4XFTXGQ.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1704182906, "epoch_exp_date": null, "series_title_sort": "blue box", "new_pokemon": false}}, {"manga": {"id": 39378, "manga_common_id": 39378, "device_id": 4, "published": true, "publication_date": "2024-01-02T00:08:58.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/marriagetoxin/MTX01.zip", "description": "As a deadly assassin from the poison clan, Gero swears he\u2019ll never settle down\u2014that is, until the family orders his sister to produce the poison clan\u2019s next heir. Refusing to let his sister abandon her chance at true love with her girlfriend, Gero desperately turns to marriage swindler Mei Kinosaki for relationship advice. Can Kinosaki turn this trained killer into a charming husband-to-be?", "thumb": "manga/thumbs/thumb-157481-MarriageToxin_GN01_C1_Web-4-TI4C0dmj6_lbxfrdmpr-UQ.jpg", "featured": false, "created_at": "2023-06-09T01:01:29.000-07:00", "updated_at": "2023-12-20T13:54:53.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39469, "new": true, "manga_series_common_id": 895, "title": "Marriage Toxin, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 225, "author": "Story by Joumyaku, Art by Mizuki Yoda", "issue_date": 0, "isbn13": "978-1-9747-4426-8", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Marriage Toxin", "series_vanityurl": "marriage-toxin", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706637600, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.marriagetoxin01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157481-MarriageToxin_GN01_C1_Web-4-TI4C0dmj6_lbxfrdmpr-UQ.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1704182938, "epoch_exp_date": null, "series_title_sort": "marriage toxin", "new_pokemon": false}}, {"manga": {"id": 39380, "manga_common_id": 39380, "device_id": 4, "published": true, "publication_date": "2024-01-02T00:08:13.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/moriartythepatriot/MTP14.zip", "description": "When the queen herself hires Sherlock Holmes to arrest the Lord of Crime, Sherlock sets out to save William instead. Unfortunately, William fully intends to complete his purification of the British Empire\u2014at the cost of his own life. As the Moriarty Plan inches toward its inevitable conclusion and the Great Detective faces off against the Lord of Crime, both men will reveal the innermost depths of their hearts against a backdrop of London in flames.", "thumb": "manga/thumbs/thumb-157489-MoriartyThePatriot_GN14_C1_Web-4-H0fK7sNqUNYfEQIrfStoyw.jpg", "featured": false, "created_at": "2023-06-09T01:03:46.000-07:00", "updated_at": "2023-12-20T13:55:25.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39498, "new": true, "manga_series_common_id": 730, "title": "Moriarty the Patriot, Vol. 14", "volume": 14, "chapter": null, "parent_manga_common_id": null, "numpages": 222, "author": "Storyboards by Ryosuke Takeuchi, Art by Hikaru Miyoshi, Based on the works of Sir Arthur Conan Doyle", "issue_date": 0, "isbn13": "978-1-9747-4425-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Moriarty the Patriot", "series_vanityurl": "moriarty-the-patriot", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705428000, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.moriarty14", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157489-MoriartyThePatriot_GN14_C1_Web-4-H0fK7sNqUNYfEQIrfStoyw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1704182893, "epoch_exp_date": null, "series_title_sort": "moriarty the patriot", "new_pokemon": false}}, {"manga": {"id": 39415, "manga_common_id": 39415, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:09:09.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/onepunchman/OPM27.zip", "description": "Psychos intends to fuse with Orochi, the Monster King, which would give them immense power against Tornado. Superalloy confronts Garo and experiences fear of his opponent\u2019s strength\u2026 Meanwhile, Saitama gets caught up in a cave-in in the Monster Association\u2019s underground labyrinth!", "thumb": "manga/thumbs/thumb-157629-OnePunchMan_GN27_C1_Web-4-A7HEVAJhltUS96b8s-3agg.jpg", "featured": false, "created_at": "2023-06-12T00:19:22.000-07:00", "updated_at": "2023-12-20T12:16:47.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40603, "new": true, "manga_series_common_id": 249, "title": "One-Punch Man, Vol. 27", "volume": 27, "chapter": null, "parent_manga_common_id": null, "numpages": 192, "author": "Story by ONE, Art by Yusuke Murata", "issue_date": 0, "isbn13": "978-1-9747-4441-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "One-Punch Man", "series_vanityurl": "one-punch-man", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1705392550, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.onepunchman27", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157629-OnePunchMan_GN27_C1_Web-4-A7HEVAJhltUS96b8s-3agg.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1705392549, "epoch_exp_date": null, "series_title_sort": "one-punch man", "new_pokemon": false}}, {"manga": {"id": 39420, "manga_common_id": 39420, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:53.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/undeadunluck/UDU14.zip", "description": "Nico has betrayed the Union in order to resurrect his beloved wife. Andy squares off against his former comrade, but just as he gains the upper hand, UMA Ghost intervenes. With the ability to attack Andy\u2019s soul and render the affected body part immobile, UMA Ghost proves a difficult foe. Will Andy find a way to prevail and restore Fuuko\u2019s soul to her body before she\u2019s lost forever?", "thumb": "manga/thumbs/thumb-157649-UndeadUnluck_GN14_C1_Web-4-uhpZcfVDR67zyjdafeAjtQ.jpg", "featured": false, "created_at": "2023-06-12T00:26:50.000-07:00", "updated_at": "2023-12-20T12:18:53.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39497, "new": true, "manga_series_common_id": 693, "title": "Undead Unluck, Vol. 14", "volume": 14, "chapter": null, "parent_manga_common_id": null, "numpages": 197, "author": "Story and Art by Yoshifumi Tozuka", "issue_date": 0, "isbn13": "978-1-9747-4443-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Undead Unluck", "series_vanityurl": "undead-unluck", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705392533, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.undeadunluck14", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157649-UndeadUnluck_GN14_C1_Web-4-uhpZcfVDR67zyjdafeAjtQ.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705392533, "epoch_exp_date": null, "series_title_sort": "undead unluck", "new_pokemon": false}}, {"manga": {"id": 39424, "manga_common_id": 39424, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:09:07.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/elusivesamurai/TES10.zip", "description": "Tokiyuki and his loyal retainers, the Elusive Warriors, take on the members of the Kanto Hisashiban, Takauji Ashikaga\u2019s stewards in charge of the defense of Kamakura. The members of the Hisashiban possess almost superhuman skills and abilities, as well as\u2026unique personalities. Kojiro faces off against Shibukawa, the most formidable of the Hisashiban warriors, in a duel he must win\u2014for if he loses, Tokiyuki\u2019s head will be forfeit! Tokiyuki himself must face the mad warrior Imagawa in a desperate contest of horsemanship to raise the morale of his entire army!", "thumb": "manga/thumbs/thumb-157665-ElusiveSamurai_GN10_C1_Web-4-AB8mOu3LIft_rCYWyiHv2Q.jpg", "featured": false, "created_at": "2023-06-12T00:30:13.000-07:00", "updated_at": "2024-01-10T14:35:28.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40560, "new": true, "manga_series_common_id": 750, "title": "The Elusive Samurai, Vol. 10", "volume": 10, "chapter": null, "parent_manga_common_id": null, "numpages": 197, "author": "Yusei Matsui", "issue_date": 0, "isbn13": "978-1-9747-4460-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "The Elusive Samurai", "series_vanityurl": "the-elusive-samurai", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206947, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.elusivesamurai10", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157665-ElusiveSamurai_GN10_C1_Web-4-AB8mOu3LIft_rCYWyiHv2Q.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1707206947, "epoch_exp_date": null, "series_title_sort": "elusive samurai", "new_pokemon": false}}, {"manga": {"id": 39425, "manga_common_id": 39425, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:25.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizsig/jojospartsix/JSO02.zip", "description": "Jotaro arrives to break Jolyne out of jail, but they fall right into the enemy\u2019s trap, leaving father and daughter to fight for their lives inside a dream while their real bodies are being dissolved. Then, their unknown enemy steals Jotaro\u2019s Stand and memories, effectively putting him in a state that might as well be death. But there\u2019s hope! Ermes discovers that someone is storing memories and Stands in discs, and she and Jolyne volunteer for a search-and-rescue mission to find her father\u2019s discs!", "thumb": "manga/thumbs/thumb-157669-JoJosBizarreAdventurePart06_GN02_C1_Web-4-2zF0lX3CuPIVePqwFZ_FtQ.jpg", "featured": false, "created_at": "2023-06-12T00:30:18.000-07:00", "updated_at": "2023-12-20T12:20:05.000-08:00", "price": "16.99", "list_price": "16.99", "next_manga_common_id": 39463, "new": true, "manga_series_common_id": 814, "title": "JoJo\u2019s Bizarre Adventure: Part 6--Stone Ocean, Vol. 2", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 393, "author": "Story and Art by Hirohiko Araki", "issue_date": 0, "isbn13": "978-1-9747-4445-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "JoJo\u2019s Bizarre Adventure: Part 6--Stone Ocean", "series_vanityurl": "jojos-bizarre-adventure-part-6", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997305, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.jojospartsix02", "web_price": "16.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157669-JoJosBizarreAdventurePart06_GN02_C1_Web-4-2zF0lX3CuPIVePqwFZ_FtQ.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705997305, "epoch_exp_date": null, "series_title_sort": "jojo\u2019s bizarre adventure: part 6--stone ocean", "new_pokemon": false}}, {"manga": {"id": 39426, "manga_common_id": 39426, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:45.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/showhashoten/SHS04.zip", "description": "Azemichi and Taiyo are One-Way Ticket to the Top, the final performers of the Wara-1 Koshien prelims! Between Azemichi\u2019s carefully scripted comedy and Taiyo\u2019s flawless acting, they\u2019ve got the perfect routine to win over the crowd. But despite having started off with the biggest laughs of the day, Azemichi draws a blank halfway through their routine and forgets his next line! Unless Azemichi and Taiyo can save their performance, they may have just lost their only chance at making their comedy dreams come true\u2026", "thumb": "manga/thumbs/thumb-157673-ShowhaShoten_GN04_C1_Web-4-ZpDr8zkxJteIc0glKFpfsw.jpg", "featured": false, "created_at": "2023-06-12T00:30:29.000-07:00", "updated_at": "2023-12-20T12:18:26.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40562, "new": true, "manga_series_common_id": 809, "title": "Show-ha Shoten!, Vol. 4", "volume": 4, "chapter": null, "parent_manga_common_id": null, "numpages": 210, "author": "Story by Akinari Asakura, Art by Takeshi Obata", "issue_date": 0, "isbn13": "978-1-9747-4442-8", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Show-ha Shoten!", "series_vanityurl": "show-ha-shoten", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705392525, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.showhashoten04", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157673-ShowhaShoten_GN04_C1_Web-4-ZpDr8zkxJteIc0glKFpfsw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705392525, "epoch_exp_date": null, "series_title_sort": "show-ha shoten!", "new_pokemon": false}}, {"manga": {"id": 39435, "manga_common_id": 39435, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:36.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/darkgathering/DGT05.zip", "description": "Having captured the spirit of the H Castle Ruins, Keitaro, Eiko, and Yayoi next set their sights on Tokyo\u2019s infamous Old F Tunnel. But before they can brave their first Danger Rank S location, Yayoi takes them on a detour to collect another one of her Graduates\u2014the ghost of a soldier who, even in death, could not escape the pain of war.", "thumb": "manga/thumbs/thumb-157709-DarkGathering_GN05_C1_Web-4-s5glpz-Ov1BUFikHg4MDSw.jpg", "featured": false, "created_at": "2023-06-12T00:32:46.000-07:00", "updated_at": "2023-12-20T12:16:12.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39481, "new": true, "manga_series_common_id": 844, "title": "Dark Gathering, Vol. 5", "volume": 5, "chapter": null, "parent_manga_common_id": null, "numpages": 203, "author": "Story and Art by Kenichi Kondo", "issue_date": 0, "isbn13": "978-1-9747-4440-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Dark Gathering", "series_vanityurl": "dark-gathering", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706637600, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.darkgathering05", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157709-DarkGathering_GN05_C1_Web-4-s5glpz-Ov1BUFikHg4MDSw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705392516, "epoch_exp_date": null, "series_title_sort": "dark gathering", "new_pokemon": false}}, {"manga": {"id": 39443, "manga_common_id": 39443, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:08:47.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/chainsawman/CSM14.zip", "description": "Asa and Denji are going on a date to the aquarium! Asa just wants to seduce Denji to turn him into a weapon, but Denji might have other ideas. Will they ruin the date with their extreme social awkwardness, or will a surprise attack by a devil be the culprit?", "thumb": "manga/thumbs/thumb-157741-ChainsawMan_GN14_C1_Web-4-CP8EdpUSsw__QobUQjCwkw.jpg", "featured": false, "created_at": "2023-06-12T00:34:16.000-07:00", "updated_at": "2024-01-10T14:34:42.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40587, "new": true, "manga_series_common_id": 580, "title": "Chainsaw Man, Vol. 14", "volume": 14, "chapter": null, "parent_manga_common_id": null, "numpages": 185, "author": "Tatsuki Fujimoto", "issue_date": 0, "isbn13": "978-1-9747-4458-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Chainsaw Man", "series_vanityurl": "chainsaw-man", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206927, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.chainsawman14", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157741-ChainsawMan_GN14_C1_Web-4-CP8EdpUSsw__QobUQjCwkw.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1707206927, "epoch_exp_date": null, "series_title_sort": "chainsaw man", "new_pokemon": false}}, {"manga": {"id": 39444, "manga_common_id": 39444, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:08:58.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/dragonballsuper/DBS20.zip", "description": "Goku and Vegeta are both struggling to master their respective ultra forms, which they\u2019ll need to defeat Gas, now the strongest warrior in the universe. Can Granolah rejoin the battle and help turn things around? Later, back at home, a pair of superheroes are making headlines! Get ready for a new story arc set on Earth!", "thumb": "manga/thumbs/thumb-157745-DragonBallSuper_GN20_C1_Web-4-XSfhF8VMDO5VQHrj5rxLOw.jpg", "featured": false, "created_at": "2023-06-12T00:34:30.000-07:00", "updated_at": "2024-01-10T14:35:04.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40600, "new": true, "manga_series_common_id": 466, "title": "Dragon Ball Super, Vol. 20", "volume": 20, "chapter": null, "parent_manga_common_id": null, "numpages": 207, "author": "Story by Akira Toriyama, Art by Toyotarou", "issue_date": 0, "isbn13": "978-1-9747-4459-6", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Dragon Ball Super", "series_vanityurl": "dragon-ball-super", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206938, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.dragonballsuper20", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157745-DragonBallSuper_GN20_C1_Web-4-XSfhF8VMDO5VQHrj5rxLOw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1707206938, "epoch_exp_date": null, "series_title_sort": "dragon ball super", "new_pokemon": false}}, {"manga": {"id": 39448, "manga_common_id": 39448, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:42.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/aliensarea/AAA02.zip", "description": "Now that Tatsumi and Sharaku have defeated the assassin Maumoki, Tatsumi is finally ready to start training as a Foreign Affairs 5 recruit! His first mission? To brave a sweltering day in the sun while hunting for an extraterrestrial nest in a rice paddy. But when the mission takes an unexpected turn, Tatsumi might just learn that things aren\u2019t always what they seem\u2026", "thumb": "manga/thumbs/thumb-157761-AliensArea_DigitalGN02_C1_Web-4-lsRji_pB5-ER3SOPZ9LV9g.jpg", "featured": false, "created_at": "2023-06-12T00:35:58.000-07:00", "updated_at": "2023-12-20T12:25:26.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39450, "new": true, "manga_series_common_id": 829, "title": "Aliens Area, Vol. 2", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 175, "author": "Story and Art by Fusai Naba", "issue_date": 0, "isbn13": "978-1-9747-4450-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Aliens Area", "series_vanityurl": "aliens-area", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997322, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.aliensarea02", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157761-AliensArea_DigitalGN02_C1_Web-4-lsRji_pB5-ER3SOPZ9LV9g.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1705997322, "epoch_exp_date": null, "series_title_sort": "aliens area", "new_pokemon": false}}, {"manga": {"id": 39450, "manga_common_id": 39450, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:47.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/aliensarea/AAA03.zip", "description": "Sharaku organizes a meeting with the team leaders of Foreign Affairs 5 in order to take down the criminal organization A3. The meeting is fraught with red tape, but Tatsumi\u2019s memories may just hold the key they need to move forward. With an all-out war between Foreign Affairs 5 and A3 now looming, Foreign Affairs 5 will find themselves facing their most dangerous extraterrestrial threat yet in this epic conclusion!", "thumb": "manga/thumbs/thumb-157769-AliensArea_DigitalGN03_C1_Web-4-8o8aeV7R99Y0jTqwLWqPhQ.jpg", "featured": false, "created_at": "2023-06-12T00:36:04.000-07:00", "updated_at": "2023-12-20T12:25:46.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": true, "manga_series_common_id": 829, "title": "Aliens Area, Vol. 3", "volume": 3, "chapter": null, "parent_manga_common_id": null, "numpages": 175, "author": "Story and Art by Fusai Naba", "issue_date": 0, "isbn13": "978-1-9747-4451-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Aliens Area", "series_vanityurl": "aliens-area", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997327, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.aliensarea03", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157769-AliensArea_DigitalGN03_C1_Web-4-8o8aeV7R99Y0jTqwLWqPhQ.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1705997327, "epoch_exp_date": null, "series_title_sort": "aliens area", "new_pokemon": false}}, {"manga": {"id": 39452, "manga_common_id": 39452, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:53.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/pppppp/PPP05.zip", "description": "Lucky\u2019s trying to win against Mimin Otogami by gaining more experience, but when he arrives at the concert hall, he\u2019s surprised to see Sorachika! Meanwhile, Meloli wants to protect her world, but to do so, she must\u2026", "thumb": "manga/thumbs/thumb-157777-PPPPPP_DigitalGN05_C1_Web-4-hOyjeZbrG3ALIqV1MWDpXg.jpg", "featured": false, "created_at": "2023-06-12T00:36:11.000-07:00", "updated_at": "2023-12-20T12:24:09.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39513, "new": true, "manga_series_common_id": 798, "title": "PPPPPP, Vol. 5", "volume": 5, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Story and Art by Mapollo 3", "issue_date": 0, "isbn13": "978-1-9747-4449-7", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "PPPPPP", "series_vanityurl": "pppppp", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997333, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.pppppp05", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157777-PPPPPP_DigitalGN05_C1_Web-4-hOyjeZbrG3ALIqV1MWDpXg.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1705997333, "epoch_exp_date": null, "series_title_sort": "pppppp", "new_pokemon": false}}, {"manga": {"id": 39453, "manga_common_id": 39453, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:58.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/highschoolfamily/HSF08.zip", "description": "Feline high schooler Gomez strikes up an unlikely friendship with Kayama and Kina, two fiercely independent delinquents from infamously gang-infested Nastee High. Ichiro\u2019s attempt to set this cool cat back on the straight and narrow falls on deaf ears, but what will happen when rumors about Gomez spur Nastee High\u2019s Big Four to launch an all-out attack on Happee High?!", "thumb": "manga/thumbs/thumb-157781-HighSchoolFamily_DIgitalGN08_C1_Web-4-Y24rwtmWMiBBQ-lU0iVq9g.jpg", "featured": false, "created_at": "2023-06-12T00:36:15.000-07:00", "updated_at": "2023-12-20T12:21:34.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39514, "new": true, "manga_series_common_id": 733, "title": "High School Family: Kokosei Kazoku, Vol. 8", "volume": 8, "chapter": null, "parent_manga_common_id": null, "numpages": 183, "author": "Story and Art by Ryo Nakama", "issue_date": 0, "isbn13": "978-1-9747-4447-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "High School Family: Kokosei Kazoku", "series_vanityurl": "high-school-family", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997338, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.highschoolfam08", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157781-HighSchoolFamily_DIgitalGN08_C1_Web-4-Y24rwtmWMiBBQ-lU0iVq9g.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1705997338, "epoch_exp_date": null, "series_title_sort": "high school family: kokosei kazoku", "new_pokemon": false}}, {"manga": {"id": 39455, "manga_common_id": 39455, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:09:05.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/meandroboco/MRC10.zip", "description": "Motsuo faces his biggest challenge yet: thanking all the girls who gave him chocolate for Valentine\u2019s Day. Meanwhile, Roboco has her own battle to win\u2014getting more followers on social media. Sexy shots of her knees are sure to do the trick!", "thumb": "manga/thumbs/thumb-157789-MeAndRoboco_DigitalGN10_C1_Web-4-h7gh7MAcbk8jbbF4SaNe7Q.jpg", "featured": false, "created_at": "2023-06-12T00:36:24.000-07:00", "updated_at": "2023-12-20T12:23:08.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39515, "new": true, "manga_series_common_id": 721, "title": "Me & Roboco, Vol. 10", "volume": 10, "chapter": null, "parent_manga_common_id": null, "numpages": 181, "author": "Story and Art by Shuhei Miyazaki", "issue_date": 0, "isbn13": "978-1-9747-4448-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Me & Roboco", "series_vanityurl": "me-and-roboco", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997345, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.wsj.meandroboco10", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157789-MeAndRoboco_DigitalGN10_C1_Web-4-h7gh7MAcbk8jbbF4SaNe7Q.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1705997345, "epoch_exp_date": null, "series_title_sort": "me & roboco", "new_pokemon": false}}, {"manga": {"id": 41665, "manga_common_id": 41665, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/sakamotodays/sakadays154", "description": "", "thumb": "manga/thumbs/shonenjump/sakamotodays/sakadays154/_android-np4Norq333yU1EDXxZfM_w.jpg", "featured": false, "created_at": "2024-02-01T12:37:50.000-08:00", "updated_at": "2024-02-08T14:27:36.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 739, "title": "Chapter 154", "volume": null, "chapter": "154.0", "parent_manga_common_id": null, "numpages": 19, "author": "Yuto Suzuki", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Sakamoto Days", "series_vanityurl": "sakamoto-days", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/sakamotodays/sakadays154/_android-np4Norq333yU1EDXxZfM_w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "sakamoto days", "new_pokemon": false}}, {"manga": {"id": 41662, "manga_common_id": 41662, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/meandroboco/roboco172", "description": "", "thumb": "manga/thumbs/shonenjump/meandroboco/roboco172/_android-GhiRG7ae7vuXNxL9OBnhRQ.jpg", "featured": false, "created_at": "2024-02-01T12:35:23.000-08:00", "updated_at": "2024-02-08T13:57:04.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 721, "title": "Chapter 172", "volume": null, "chapter": "172.0", "parent_manga_common_id": null, "numpages": 15, "author": "Shuhei Miyazaki", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Me & Roboco", "series_vanityurl": "me-and-roboco", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/meandroboco/roboco172/_android-GhiRG7ae7vuXNxL9OBnhRQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "me & roboco", "new_pokemon": false}}, {"manga": {"id": 41663, "manga_common_id": 41663, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/missionyozakura/missionyozakurafam213", "description": "", "thumb": "manga/thumbs/shonenjump/missionyozakura/missionyozakurafam213/_android-OO9lqBqAK0zuLejhwmn41w.jpg", "featured": false, "created_at": "2024-02-01T12:35:49.000-08:00", "updated_at": "2024-02-08T13:58:26.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 627, "title": "Chapter 213", "volume": null, "chapter": "213.0", "parent_manga_common_id": null, "numpages": 19, "author": "Hitsuji Gondaira", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Mission: Yozakura Family", "series_vanityurl": "mission-yozakura-family", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/missionyozakura/missionyozakurafam213/_android-OO9lqBqAK0zuLejhwmn41w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "mission: yozakura family", "new_pokemon": false}}, {"manga": {"id": 41669, "manga_common_id": 41669, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/witchwatch/WitchWatch143", "description": "", "thumb": "manga/thumbs/shonenjump/witchwatch/WitchWatch143/_android-CuDLAZL-VmMPoiBm6vnH4A.jpg", "featured": false, "created_at": "2024-02-01T12:50:44.000-08:00", "updated_at": "2024-02-08T14:02:55.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 753, "title": "Chapter 143", "volume": null, "chapter": "143.0", "parent_manga_common_id": null, "numpages": 19, "author": "Kenta Shinohara", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "WITCH WATCH", "series_vanityurl": "witch-watch", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663610, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/witchwatch/WitchWatch143/_android-CuDLAZL-VmMPoiBm6vnH4A.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "witch watch", "new_pokemon": false}}, {"manga": {"id": 41657, "manga_common_id": 41657, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/jujutsukaisen/jujutsu250", "description": "", "thumb": "manga/thumbs/shonenjump/jujutsukaisen/jujutsu250/_android-RPmi8SdjrRZfp3l33l9A0Q.jpg", "featured": false, "created_at": "2024-02-01T12:23:05.000-08:00", "updated_at": "2024-02-08T11:25:14.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 540, "title": "Chapter 250", "volume": null, "chapter": "250.0", "parent_manga_common_id": null, "numpages": 19, "author": "Gege Akutami", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Jujutsu Kaisen", "series_vanityurl": "jujutsu-kaisen", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/jujutsukaisen/jujutsu250/_android-RPmi8SdjrRZfp3l33l9A0Q.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "jujutsu kaisen", "new_pokemon": false}}, {"manga": {"id": 41655, "manga_common_id": 41655, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/elusivesamurai/TES144", "description": "", "thumb": "manga/thumbs/shonenjump/elusivesamurai/TES144/_android-ZSJ-x9QGW3LiBdGq1Hl0kQ.jpg", "featured": false, "created_at": "2024-02-01T12:21:34.000-08:00", "updated_at": "2024-02-08T11:26:52.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 750, "title": "Chapter 144", "volume": null, "chapter": "144.0", "parent_manga_common_id": null, "numpages": 19, "author": "Yusei Matsui", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "The Elusive Samurai", "series_vanityurl": "the-elusive-samurai", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/elusivesamurai/TES144/_android-ZSJ-x9QGW3LiBdGq1Hl0kQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "elusive samurai", "new_pokemon": false}}, {"manga": {"id": 41654, "manga_common_id": 41654, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/bluebox/bluebox136", "description": "", "thumb": "manga/thumbs/shonenjump/bluebox/bluebox136/_android-Fxl1v0wIM7vm_BYUeynIqg.jpg", "featured": false, "created_at": "2024-02-01T12:21:00.000-08:00", "updated_at": "2024-02-08T11:23:37.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 757, "title": "Chapter 136", "volume": null, "chapter": "136.0", "parent_manga_common_id": null, "numpages": 21, "author": "Kouji Miura", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Blue Box", "series_vanityurl": "blue-box", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/bluebox/bluebox136/_android-Fxl1v0wIM7vm_BYUeynIqg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "blue box", "new_pokemon": false}}, {"manga": {"id": 41668, "manga_common_id": 41668, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/undeadunluck/undeadunluck194", "description": "", "thumb": "manga/thumbs/shonenjump/undeadunluck/undeadunluck194/_android-iksM7ULQ26GAzopbNQTZRA.jpg", "featured": false, "created_at": "2024-02-01T12:43:09.000-08:00", "updated_at": "2024-02-08T14:01:41.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 693, "title": "Chapter 194", "volume": null, "chapter": "194.0", "parent_manga_common_id": null, "numpages": 21, "author": "Yoshifumi Tozuka", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Undead Unluck", "series_vanityurl": "undead-unluck", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663610, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/undeadunluck/undeadunluck194/_android-iksM7ULQ26GAzopbNQTZRA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "undead unluck", "new_pokemon": false}}, {"manga": {"id": 41525, "manga_common_id": 41525, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 1710075600, "free": true, "url": "manga/new/chapter/JiangshiX33", "description": "", "thumb": "manga/thumbs/new/chapter/JiangshiX33/_android-IY2XuKo5DEj8rjziruRWxw.jpg", "featured": false, "created_at": "2024-01-18T09:50:36.000-08:00", "updated_at": "2024-02-08T14:04:28.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 861, "title": "Chapter 33", "volume": null, "chapter": "33.0", "parent_manga_common_id": null, "numpages": 30, "author": "Norihiko Kurazono", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Jiangshi X", "series_vanityurl": "jiangshi-x", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707794510, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/JiangshiX33/_android-IY2XuKo5DEj8rjziruRWxw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": 1710075600, "series_title_sort": "jiangshi x", "new_pokemon": false}}, {"manga": {"id": 41659, "manga_common_id": 41659, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/killblue40", "description": "", "thumb": "manga/thumbs/new/chapter/killblue40/_android-J1OnUiYk7oqw-MM1dJsSNg.jpg", "featured": false, "created_at": "2024-02-01T12:31:59.000-08:00", "updated_at": "2024-02-08T11:27:10.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 888, "title": "Chapter 40", "volume": null, "chapter": "40.0", "parent_manga_common_id": null, "numpages": 19, "author": "Tadatoshi Fujimaki", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Kill Blue", "series_vanityurl": "kill-blue", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/killblue40/_android-J1OnUiYk7oqw-MM1dJsSNg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "kill blue", "new_pokemon": false}}, {"manga": {"id": 41653, "manga_common_id": 41653, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/akanebanashi/akane97", "description": "", "thumb": "manga/thumbs/shonenjump/akanebanashi/akane97/_android-SxJOOxVtMXHSk7zwPALUHw.jpg", "featured": false, "created_at": "2024-02-01T12:20:31.000-08:00", "updated_at": "2024-02-08T13:52:03.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 825, "title": "Chapter 97", "volume": null, "chapter": "97.0", "parent_manga_common_id": null, "numpages": 19, "author": "Story by Yuki Suenaga, Art by Takamasa Moue", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Akane-banashi", "series_vanityurl": "akane-banashi", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/akanebanashi/akane97/_android-SxJOOxVtMXHSk7zwPALUHw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "akane-banashi", "new_pokemon": false}}, {"manga": {"id": 41661, "manga_common_id": 41661, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 1709477940, "free": true, "url": "manga/new/chapter/martialmasterasumi32", "description": "", "thumb": "manga/thumbs/new/chapter/martialmasterasumi32/_android-WAAoBN04YWk48V0HhE56KA.jpg", "featured": false, "created_at": "2024-02-01T12:34:54.000-08:00", "updated_at": "2024-02-08T13:55:31.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 911, "title": "Chapter 32", "volume": null, "chapter": "32.0", "parent_manga_common_id": null, "numpages": 19, "author": "Kawada", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Martial Master Asumi", "series_vanityurl": "martial-master-asumi", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/martialmasterasumi32/_android-WAAoBN04YWk48V0HhE56KA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": 1709477940, "series_title_sort": "martial master asumi", "new_pokemon": false}}, {"manga": {"id": 41660, "manga_common_id": 41660, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/mamayuyu21", "description": "", "thumb": "manga/thumbs/new/chapter/mamayuyu21/_android-LnuDxu-TdMFTzSHS6Z3L8Q.jpg", "featured": false, "created_at": "2024-02-01T12:33:15.000-08:00", "updated_at": "2024-02-08T13:53:37.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 923, "title": "Chapter 21", "volume": null, "chapter": "21.0", "parent_manga_common_id": null, "numpages": 21, "author": "Yoshihiko Hayashi", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "MamaYuyu", "series_vanityurl": "mamayuyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/mamayuyu21/_android-LnuDxu-TdMFTzSHS6Z3L8Q.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "mamayuyu", "new_pokemon": false}}, {"manga": {"id": 41658, "manga_common_id": 41658, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/kagurabachi20", "description": "", "thumb": "manga/thumbs/new/chapter/kagurabachi20/_android-rrbvp9VcnfBrdAZ2Jx0yqw.jpg", "featured": false, "created_at": "2024-02-01T12:23:44.000-08:00", "updated_at": "2024-02-08T11:25:33.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 924, "title": "Chapter 20", "volume": null, "chapter": "20.0", "parent_manga_common_id": null, "numpages": 19, "author": "Takeru Hokazono", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Kagurabachi", "series_vanityurl": "kagurabachi", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/kagurabachi20/_android-rrbvp9VcnfBrdAZ2Jx0yqw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "kagurabachi", "new_pokemon": false}}, {"manga": {"id": 41667, "manga_common_id": 41667, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/twoonice19", "description": "", "thumb": "manga/thumbs/new/chapter/twoonice19/_android-lmLLDCNzzmhdlmHWtgI2AQ.jpg", "featured": false, "created_at": "2024-02-01T12:42:01.000-08:00", "updated_at": "2024-02-08T14:01:17.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 925, "title": "Chapter 19", "volume": null, "chapter": "19.0", "parent_manga_common_id": null, "numpages": 19, "author": "Elck Itsumo", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Two on Ice", "series_vanityurl": "two-on-ice", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663610, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/twoonice19/_android-lmLLDCNzzmhdlmHWtgI2AQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "two on ice", "new_pokemon": false}}, {"manga": {"id": 41656, "manga_common_id": 41656, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/greengreengreens10", "description": "", "thumb": "manga/thumbs/new/chapter/greengreengreens10/_android-65lFSnGp2iVKjJt0-8nymQ.jpg", "featured": false, "created_at": "2024-02-01T12:22:15.000-08:00", "updated_at": "2024-02-08T11:24:04.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 939, "title": "Chapter 10", "volume": null, "chapter": "10.0", "parent_manga_common_id": null, "numpages": 19, "author": "Kento Terasaka", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Green Green Greens", "series_vanityurl": "green-green-greens", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/greengreengreens10/_android-65lFSnGp2iVKjJt0-8nymQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "green green greens", "new_pokemon": false}}, {"manga": {"id": 41666, "manga_common_id": 41666, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/shadoweliminators9", "description": "", "thumb": "manga/thumbs/new/chapter/shadoweliminators9/_android-ItDYcEHN7UtPxc6IY4lacA.jpg", "featured": false, "created_at": "2024-02-01T12:38:52.000-08:00", "updated_at": "2024-02-08T14:00:03.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 940, "title": "Chapter 9", "volume": null, "chapter": "9.0", "parent_manga_common_id": null, "numpages": 19, "author": "Kento Amemiya", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Shadow Eliminators", "series_vanityurl": "shadow-eliminators", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663610, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/shadoweliminators9/_android-ItDYcEHN7UtPxc6IY4lacA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "shadow eliminators", "new_pokemon": false}}, {"manga": {"id": 41664, "manga_common_id": 41664, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/nuesexorcist37", "description": "", "thumb": "manga/thumbs/new/chapter/nuesexorcist37/_android-BEn3Gs2noh68fBhcgVAXeQ.jpg", "featured": false, "created_at": "2024-02-01T12:37:21.000-08:00", "updated_at": "2024-02-08T13:59:37.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 890, "title": "Chapter 37", "volume": null, "chapter": "37.0", "parent_manga_common_id": null, "numpages": 19, "author": "Kota Kawae", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Nue\u2019s Exorcist", "series_vanityurl": "nues-exorcist", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/nuesexorcist37/_android-BEn3Gs2noh68fBhcgVAXeQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "nue\u2019s exorcist", "new_pokemon": false}}, {"manga": {"id": 41759, "manga_common_id": 41759, "device_id": 4, "published": true, "publication_date": "2024-02-11T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/SuperPsychicPolicemanChojo1-revlm", "description": "", "thumb": "manga/thumbs/new/chapter/SuperPsychicPolicemanChojo1-revlm/_android-x6LjFGtvk-eNxrY0-AGlBw.jpg", "featured": false, "created_at": "2024-02-08T10:05:02.000-08:00", "updated_at": "2024-02-08T11:43:20.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 953, "title": "Chapter 1", "volume": null, "chapter": "1.0", "parent_manga_common_id": null, "numpages": 51, "author": "Shun Numa", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Super Psychic Policeman Chojo", "series_vanityurl": "super-psychic-policeman-chojo", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663610, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/SuperPsychicPolicemanChojo1-revlm/_android-x6LjFGtvk-eNxrY0-AGlBw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707663540, "epoch_exp_date": null, "series_title_sort": "super psychic policeman chojo", "new_pokemon": false}}, {"manga": {"id": 41524, "manga_common_id": 41524, "device_id": 4, "published": true, "publication_date": "2024-02-09T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/beatandmotion25.1-revsl", "description": "", "thumb": "manga/thumbs/new/chapter/beatandmotion25.1-revsl/_android-G6qxA9JiU76iCL3eOhqf5w.jpg", "featured": false, "created_at": "2024-01-18T09:49:58.000-08:00", "updated_at": "2024-02-07T13:17:15.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 878, "title": "Chapter 25.1", "volume": null, "chapter": "25.1", "parent_manga_common_id": null, "numpages": 1, "author": "Naoki Fujita", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Beat & Motion", "series_vanityurl": "beat-and-motion", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707490808, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/beatandmotion25.1-revsl/_android-G6qxA9JiU76iCL3eOhqf5w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707490740, "epoch_exp_date": null, "series_title_sort": "beat & motion", "new_pokemon": false}}, {"manga": {"id": 41586, "manga_common_id": 41586, "device_id": 4, "published": true, "publication_date": "2024-02-09T06:59:00.000-08:00", "expiration_date": 1709305140, "free": true, "url": "manga/new/chapter/shojonull16-1", "description": "", "thumb": "manga/thumbs/new/chapter/shojonull16-1/_android-SLapVRMYpJ1ygrUmFi4ByA.jpg", "featured": false, "created_at": "2024-01-22T11:34:41.000-08:00", "updated_at": "2024-02-07T13:17:33.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 921, "title": "Chapter 16.1", "volume": null, "chapter": "16.1", "parent_manga_common_id": null, "numpages": 2, "author": "Story by Kanae Nakanishi, Art by Akima", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Shojo Null", "series_vanityurl": "shojo-null", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707794336, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/shojonull16-1/_android-SLapVRMYpJ1ygrUmFi4ByA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707490740, "epoch_exp_date": 1709305140, "series_title_sort": "shojo null", "new_pokemon": false}}, {"manga": {"id": 41639, "manga_common_id": 41639, "device_id": 4, "published": true, "publication_date": "2024-02-09T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/astrobaby2_R", "description": "", "thumb": "manga/thumbs/new/chapter/astrobaby2_R/_android-irI26Db_hDq7_jtIeVAcKA.jpg", "featured": false, "created_at": "2024-01-31T22:00:35.000-08:00", "updated_at": "2024-02-06T15:51:49.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 943, "title": "Chapter 2", "volume": null, "chapter": "2.0", "parent_manga_common_id": null, "numpages": 34, "author": "Shiro Moriya", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Astro Baby", "series_vanityurl": "astro-baby", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707490808, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/astrobaby2_R/_android-irI26Db_hDq7_jtIeVAcKA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707490740, "epoch_exp_date": null, "series_title_sort": "astro baby", "new_pokemon": false}}, {"manga": {"id": 41523, "manga_common_id": 41523, "device_id": 4, "published": true, "publication_date": "2024-02-08T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/WildStawberry15", "description": "", "thumb": "manga/thumbs/new/chapter/WildStawberry15/_android-bCjMlzJs15-dEq_ATT9sJA.jpg", "featured": false, "created_at": "2024-01-18T09:49:22.000-08:00", "updated_at": "2024-02-02T16:08:25.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 913, "title": "Chapter 15", "volume": null, "chapter": "15.0", "parent_manga_common_id": null, "numpages": 27, "author": "Ire Yonemoto", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Wild Strawberry", "series_vanityurl": "wild-strawberry", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707404408, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/WildStawberry15/_android-bCjMlzJs15-dEq_ATT9sJA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707404340, "epoch_exp_date": null, "series_title_sort": "wild strawberry", "new_pokemon": false}}, {"manga": {"id": 41522, "manga_common_id": 41522, "device_id": 4, "published": true, "publication_date": "2024-02-08T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/KaijuBside4", "description": "", "thumb": "manga/thumbs/new/chapter/KaijuBside4/_android-vMzcOPFtEiRzY5NrOq1YbQ.jpg", "featured": false, "created_at": "2024-01-18T09:48:59.000-08:00", "updated_at": "2024-02-06T14:26:40.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 941, "title": "Chapter 4", "volume": null, "chapter": "4.0", "parent_manga_common_id": null, "numpages": 35, "author": "Story by Naoya Matsumoto and Keiji Ando, Art by Kentaro Hidano", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Kaiju No. 8: B-Side", "series_vanityurl": "kaiju-no-8-b-side", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707404408, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/KaijuBside4/_android-vMzcOPFtEiRzY5NrOq1YbQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707404340, "epoch_exp_date": null, "series_title_sort": "kaiju no. 8: b-side", "new_pokemon": false}}, {"manga": {"id": 41521, "manga_common_id": 41521, "device_id": 4, "published": true, "publication_date": "2024-02-06T09:59:00.000-08:00", "expiration_date": 1709056740, "free": true, "url": "manga/vizsig/jojospartsix/JoJoSO114", "description": "", "thumb": "manga/thumbs/vizsig/jojospartsix/JoJoSO114/_android-3__MvlcyRQK1JbaGTu2O3w.jpg", "featured": false, "created_at": "2024-01-18T09:48:21.000-08:00", "updated_at": "2024-02-01T13:58:20.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 814, "title": "Chapter 114", "volume": null, "chapter": "114.0", "parent_manga_common_id": null, "numpages": 19, "author": "Hirohiko Araki", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "JoJo\u2019s Bizarre Adventure: Part 6--Stone Ocean", "series_vanityurl": "jojos-bizarre-adventure-part-6", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707764811, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizsig/jojospartsix/JoJoSO114/_android-3__MvlcyRQK1JbaGTu2O3w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707242340, "epoch_exp_date": 1709056740, "series_title_sort": "jojo\u2019s bizarre adventure: part 6--stone ocean", "new_pokemon": false}}, {"manga": {"id": 41670, "manga_common_id": 41670, "device_id": 4, "published": true, "publication_date": "2024-02-05T18:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/vizsig/choujinx/CHJX_48_3R", "description": "", "thumb": "manga/thumbs/vizsig/choujinx/CHJX_48_3R/_android-H8nnWd8e2FaQdaguJWawSg.jpg", "featured": false, "created_at": "2024-02-02T12:59:29.000-08:00", "updated_at": "2024-02-05T16:51:10.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 763, "title": "Chapter 48.3", "volume": null, "chapter": "48.3", "parent_manga_common_id": null, "numpages": 20, "author": "Sui Ishida", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Choujin X", "series_vanityurl": "choujin-x", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707188409, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizsig/choujinx/CHJX_48_3R/_android-H8nnWd8e2FaQdaguJWawSg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707188340, "epoch_exp_date": null, "series_title_sort": "choujin x", "new_pokemon": false}}, {"manga": {"id": 41624, "manga_common_id": 41624, "device_id": 4, "published": true, "publication_date": "2024-02-04T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/onepiece/onepiece1106", "description": "", "thumb": "manga/thumbs/shonenjump/onepiece/onepiece1106/_android-el-SCKKDbsvuqQKC50j9Gw.jpg", "featured": false, "created_at": "2024-01-27T05:00:52.000-08:00", "updated_at": "2024-02-01T11:30:34.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 5, "title": "Ch 1106", "volume": null, "chapter": "1106.0", "parent_manga_common_id": null, "numpages": 17, "author": "Eiichiro Oda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "One Piece", "series_vanityurl": "one-piece", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707058810, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/onepiece/onepiece1106/_android-el-SCKKDbsvuqQKC50j9Gw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707058740, "epoch_exp_date": null, "series_title_sort": "one piece", "new_pokemon": false}}, {"manga": {"id": 41625, "manga_common_id": 41625, "device_id": 4, "published": true, "publication_date": "2024-02-04T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/sakamotodays/sakadays153", "description": "", "thumb": "manga/thumbs/shonenjump/sakamotodays/sakadays153/_android-h_XpXCmKkVHqCrZFypx4Kg.jpg", "featured": false, "created_at": "2024-01-27T05:01:45.000-08:00", "updated_at": "2024-02-01T11:32:02.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41665, "new": false, "manga_series_common_id": 739, "title": "Ch 153", "volume": null, "chapter": "153.0", "parent_manga_common_id": null, "numpages": 19, "author": "Yuto Suzuki", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Sakamoto Days", "series_vanityurl": "sakamoto-days", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663629, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/sakamotodays/sakadays153/_android-h_XpXCmKkVHqCrZFypx4Kg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707058740, "epoch_exp_date": null, "series_title_sort": "sakamoto days", "new_pokemon": false}}, {"manga": {"id": 41621, "manga_common_id": 41621, "device_id": 4, "published": true, "publication_date": "2024-02-04T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/meandroboco/roboco171", "description": "", "thumb": "manga/thumbs/shonenjump/meandroboco/roboco171/_android-zeZZwktBlYpNl8wnH61gDA.jpg", "featured": false, "created_at": "2024-01-27T04:55:20.000-08:00", "updated_at": "2024-02-01T11:29:10.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41662, "new": false, "manga_series_common_id": 721, "title": "Ch 171", "volume": null, "chapter": "171.0", "parent_manga_common_id": null, "numpages": 15, "author": "Shuhei Miyazaki", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Me & Roboco", "series_vanityurl": "me-and-roboco", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663626, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/meandroboco/roboco171/_android-zeZZwktBlYpNl8wnH61gDA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707058740, "epoch_exp_date": null, "series_title_sort": "me & roboco", "new_pokemon": false}}, {"manga": {"id": 41622, "manga_common_id": 41622, "device_id": 4, "published": true, "publication_date": "2024-02-04T06:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/missionyozakura/MissionYozakuraFamily212", "description": "", "thumb": "manga/thumbs/shonenjump/missionyozakura/MissionYozakuraFamily212/_android-aSdOHzERtLPf-fWmHxWB7w.jpg", "featured": false, "created_at": "2024-01-27T04:56:30.000-08:00", "updated_at": "2024-02-01T11:30:58.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41663, "new": false, "manga_series_common_id": 627, "title": "Ch 212", "volume": null, "chapter": "212.0", "parent_manga_common_id": null, "numpages": 19, "author": "Hitsuji Gondaira", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Mission: Yozakura Family", "series_vanityurl": "mission-yozakura-family", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707663619, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/missionyozakura/MissionYozakuraFamily212/_android-aSdOHzERtLPf-fWmHxWB7w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707058740, "epoch_exp_date": null, "series_title_sort": "mission: yozakura family", "new_pokemon": false}}, {"manga": {"id": 4118, "manga_common_id": 4118, "device_id": 4, "published": null, "publication_date": "2016-06-22T14:00:00.000-07:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU01_1.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_1_android.jpg", "featured": false, "created_at": "2016-05-26T17:17:24.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4119, "new": false, "manga_series_common_id": 450, "title": "Chapter 1: Endings and Beginnings", "volume": null, "chapter": "1.0", "parent_manga_common_id": 4014, "numpages": 56, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 6, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_1_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1466629200, "epoch_exp_date": null, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga": {"id": 4119, "manga_common_id": 4119, "device_id": 4, "published": null, "publication_date": "2016-06-29T10:00:00.000-07:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU01_2.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_2_android.jpg", "featured": false, "created_at": "2016-05-26T17:18:35.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4120, "new": false, "manga_series_common_id": 450, "title": "Chapter 2: Karasuno High School Volleyball Club", "volume": null, "chapter": "2.0", "parent_manga_common_id": 4014, "numpages": 26, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 3, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_2_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1467219600, "epoch_exp_date": null, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga": {"id": 4120, "manga_common_id": 4120, "device_id": 4, "published": null, "publication_date": "2016-06-30T00:00:00.000-07:00", "expiration_date": 0, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU01_3.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_3_android.jpg", "featured": false, "created_at": "2016-05-26T17:19:41.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4121, "new": false, "manga_series_common_id": 450, "title": "Chapter 3: Single-Celled Organisms", "volume": null, "chapter": "3.0", "parent_manga_common_id": 4014, "numpages": 24, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 3, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_3_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1467270000, "epoch_exp_date": null, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga": {"id": 4121, "manga_common_id": 4121, "device_id": 4, "published": null, "publication_date": "2016-07-01T09:00:00.000-07:00", "expiration_date": 1602871200, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU01_4.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_4_android.jpg", "featured": false, "created_at": "2016-05-26T17:20:35.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4122, "new": false, "manga_series_common_id": 450, "title": "Chapter 4: The Greatest Teammate", "volume": null, "chapter": "4.0", "parent_manga_common_id": 4014, "numpages": 20, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 2, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_4_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1467388800, "epoch_exp_date": 1602871200, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga": {"id": 4122, "manga_common_id": 4122, "device_id": 4, "published": null, "publication_date": "2016-07-02T00:00:04.000-07:00", "expiration_date": 1602871200, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU01_5.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_5_android.jpg", "featured": false, "created_at": "2016-05-26T17:21:30.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4123, "new": false, "manga_series_common_id": 450, "title": "Chapter 5: The King of the Court", "volume": null, "chapter": "5.0", "parent_manga_common_id": 4014, "numpages": 20, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 2, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_5_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1467442804, "epoch_exp_date": 1602871200, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga": {"id": 4123, "manga_common_id": 4123, "device_id": 4, "published": null, "publication_date": "2016-07-03T00:00:04.000-07:00", "expiration_date": 1602871200, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU01_6.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_6_android.jpg", "featured": false, "created_at": "2016-05-26T17:22:25.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4124, "new": false, "manga_series_common_id": 450, "title": "Chapter 6: Middle School Story", "volume": null, "chapter": "6.0", "parent_manga_common_id": 4014, "numpages": 20, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 2, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_6_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1467529204, "epoch_exp_date": 1602871200, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga": {"id": 4124, "manga_common_id": 4124, "device_id": 4, "published": null, "publication_date": "2016-07-04T00:00:04.000-07:00", "expiration_date": 1602871200, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU01_7.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_7_android.jpg", "featured": false, "created_at": "2016-05-26T17:23:19.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4281, "new": false, "manga_series_common_id": 450, "title": "Chapter 7: Words from the Have-Nots", "volume": null, "chapter": "7.0", "parent_manga_common_id": 4014, "numpages": 20, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 2, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4014_HKU01_7_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1467615604, "epoch_exp_date": 1602871200, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga": {"id": 4281, "manga_common_id": 4281, "device_id": 4, "published": null, "publication_date": "2016-07-05T00:00:14.000-07:00", "expiration_date": 1470121200, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU02_8.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4082_HKU02_8_android.jpg", "featured": false, "created_at": "2016-06-28T19:10:28.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4282, "new": false, "manga_series_common_id": 450, "title": "Chapter 8: The View from the Top", "volume": null, "chapter": "8.0", "parent_manga_common_id": 4082, "numpages": 20, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4082_HKU02_8_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1467702014, "epoch_exp_date": 1470121200, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga": {"id": 4282, "manga_common_id": 4282, "device_id": 4, "published": null, "publication_date": "2016-07-06T13:00:04.000-07:00", "expiration_date": 1470121200, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU02_9.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4082_HKU02_9_android.jpg", "featured": false, "created_at": "2016-06-28T19:12:52.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4283, "new": false, "manga_series_common_id": 450, "title": "Chapter 9: Birth of a Combo", "volume": null, "chapter": "9.0", "parent_manga_common_id": 4082, "numpages": 22, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4082_HKU02_9_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1467835204, "epoch_exp_date": 1470121200, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga": {"id": 4283, "manga_common_id": 4283, "device_id": 4, "published": null, "publication_date": "2016-07-07T00:00:07.000-07:00", "expiration_date": 1470121200, "free": true, "url": "manga/shonenjump/haikyu/chapters/HKU02_10.zip", "description": "", "thumb": "manga/thumbs/shonenjump/haikyu/thumb_4082_HKU02_10_android.jpg", "featured": false, "created_at": "2016-06-28T19:15:57.000-07:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 4284, "new": false, "manga_series_common_id": 450, "title": "Chapter 10: Rookie Nerves", "volume": null, "chapter": "10.0", "parent_manga_common_id": 4082, "numpages": 24, "author": "Haruichi Furudate", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Haikyu!!", "series_vanityurl": "haikyu", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707441390, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonenjump/haikyu/thumb_4082_HKU02_10_android.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1467874807, "epoch_exp_date": 1470121200, "series_title_sort": "haikyu!!", "new_pokemon": false}}, {"manga_series": {"id": 122, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 122, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": "com.vizmedia.android.wsja_yearly", "list_price": "25.99", "pb_property_id": null, "manga_imprint_id": 1, "title": "Weekly Shonen Jump", "synopsis": "Weekly Shonen Jump is a weekly digital manga magazine, available only on the VIZ Manga platform. Every week get new chapters of the world\u2019s most popular manga simultaneously with their publication in Japan! \r\n\r\nYou can try out the current issue or become a Weekly SJ Annual Member! Then read your issues at vizmanga.com or on the VIZ Manga iOS apps!", "tagline": "", "rating": "tp", "vanityurl": "weekly-shonen-jump", "copyright": "ALL YOU NEED IS KILL \u00a9 2014 by Hiroshi Sakurazaka, Ryosuke Takeuchi, yoshitoshi ABe, Takeshi Obata/SHUEISHA Inc; BAKUMAN. \u00a9 2008 by Tsugumi Ohba, Takeshi Obata/SHUEISHA Inc.; BENCH \u00a9 2010 by Masashi Kishimoto/SHUEISHA Inc.; BLACK CLOVER \u00a9 2015 by Yuki Tabata/SHUEISHA Inc.; BLEACH \u00a9 2001 by Tite Kubo/SHUEISHA Inc.; BOKU NO HERO ACADEMIA \u00a9 2014 by Kohei Horikoshi/SHUEISHA Inc.; AO NO EXORCIST \u00a9 2009 by Kazue Kato/SHUEISHA Inc.; BORUTO: NARUTO NEXT GENERATIONS \u00a9 2016 by Masashi Kishimoto, Mikio Ikemoto, Ukyo Kodachi/SHUEISHA Inc.;  CROSS MANAGE \u00a9 2012 by KAITO/SHUEISHA Inc.; DRAGON BALL \u00a9 1984 by BIRD STUDIO/SHUEISHA Inc.; E-ROBOT \u00a9 2014 by Ryohei Yamamoto/SHUEISHA Inc.; ELDLIVE \u00a9 2013 by Akira Amano/SHUEISHA Inc.; GAKKYU HOTEI \u00a9 2014 by Nobuaki Enoki, Takeshi Obata/SHUEISHA Inc.; JACO THE GALACTIC PATROLMAN \u00a9 2013 by BIRD STUDIO/SHUEISHA Inc.; HANA-NOCHI HARE \u00a9 2015 by Yoko Kamio \u2022 Leaf Production/SHUEISHA Inc.; HI-FI CLUSTER \u00a9 2014 by Ippei Goto/SHUEISHA Inc.; JUDOS \u00a9 2014 by Shinsuke Kondo/SHUEISHA Inc.; KAGAMIGAMI \u00a9 2015 by Toshiaki Iwashiro/SHUEISHA Inc.; KAIZONINGEN ROGGY \u00a9 2015 by Yu Miki/SHUEISHA Inc.; KINTOKI \u00a9 2010 by BIRD STUDIO/SHUEISHA Inc.; MARIO \u00a9 2013 by Masashi Kishimoto/SHUEISHA Inc.; NANI MADE KOROSERU \u00a9 2014 by NISIO ISIN, Akihisa Ikeda/SHUEISHA Inc.; NARUTO \u00a9 1999 by Masashi Kishimoto/SHUEISHA Inc.; NARUTO GAIDEN \u00a9 2015 by Masashi Kishimoto/SHUEISHA Inc.; NISEKOI \u00a9 2011 by Naoshi Komi/SHUEISHA Inc.; ONE PIECE \u00a9 1997 by Eiichiro Oda/SHUEISHA Inc.; ONE-PUNCH MAN \u00a9 2012 by ONE, Yusuke Murata/SHUEISHA Inc.; RKD-EK9 \u00a9 2014 by NISIO ISIN, Takeshi Obata/SHUEISHA Inc.; RUROUNI KENSHIN \u00a9 1994 by Nobuhiro Watsuki/SHUEISHA Inc.; SACHIE-CHAN GU \u00a9 2008 by Akira Toriyama, Masakazu Katsura/SHUEISHA Inc.;  SAKURAN (KARI) \u00a9 2013 by Toshiaki Iwashiro/SHUEISHA Inc.; SHIKIGAMI TWILIGHT DAYS \u00a9 2014 by Toshiaki Iwashiro/SHUEISHA Inc.; OWARI NO SERAPH \u00a9 2012 by Takaya Kagami, Yamato Yamamoto, Daisuke Furuya/SHUEISHA Inc.; SPORTING SALT \u00a9 2014 by Yuto Kubota/SHUEISHA Inc.; STEALTH SYMPHONY \u00a9 2014 by Ryohgo Narita, Yoichi Amano/SHUEISHA Inc.; TIME KILLERS KAZUE KATO TANPENSHU \u00a9 2011 by Kazue Kato/SHUEISHA Inc.; TOKYO GHOUL \u00a9 2011 by Sui Ishida/SHUEISHA Inc.; TORIKO \u00a9 2008 by Mitsutoshi Shimabukuro/SHUEISHA Inc.; ULTRA BATTLE SATELLITE \u00a9 2015 by Yusuke Utsumi/SHUEISHA Inc.; YU-GI-OH! ZEXAL \u00a9 2010 by Kazuki Takahashi, Shin Yoshida, Naohito Miyoshi/SHUEISHA Inc. Based on Animation TV series YU-GI-OH! ZEXAL \u00a9 1996 Kazuki Takahashi \u00a9 2011 NAS \u2022 TV TOKYO; WORLD TRIGGER \u00a9 2013 by Daisuke Ashihara/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": true, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/122-th-WSJ_400x320.png", "subscription_type": null, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707798883, "has_gns": true, "num_gns": 0, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6644-image003.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/122-th-WSJ_400x320.png", "label": null, "latest_author": "Kazue Kato, Yuki Tabata, Kohei Horikoshi, Taishi Tsutsui, Tatsuki Fujimoto, Riichiro Inagaki, Boichi, Tomohide Hirao, Mizuki Yoda, Eiichiro Oda, Takaya Kagami, Yamato Yamamoto, Daisuke Furuya, Yuto Tsukuda, Shun Saeki, Daisuke Ashihara, Kaiu Shirai, Posuka Demizu", "title_sort": "weekly shonen jump", "product_id_month": "com.viz.wsj.android.monthly", "product_id_year": "com.viz.wsj_yearly.discontinued", "price_month": 2.99, "price_month_web": 2.99, "price_year": "null", "price_year_web": "null"}}, {"manga_series": {"id": 421, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 421, "device_id": 4, "keyart": "img/manga_series_header/421-SeriesHeaders_NarutoNovels_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": 1, "title": "Naruto Novels", "synopsis": "A new series of prose novels, straight from the worldwide Naruto franchise. Naruto\u2019s allies and enemies take center stage in these fast-paced adventures, with each volume focusing on a particular clanmate, ally, team\u2026or villain.", "tagline": "A new series of prose novels, straight from the worldwide Naruto franchise.", "rating": "t", "vanityurl": "naruto-novels", "copyright": "NARUTO KAKASHI-HIDEN HYOTEN NO IKAZUCHI \u00a9 2015 by Masashi Kishimoto, Akira Higashiyama/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/421-SeriesHeaders_NarutoNovels_2000x800.jpg", "link_img": "img/manga_series_link_img/1412-SeriesThumbnailsManga_NarutoNovels_400x320.jpg", "subscription_type": null, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706810341, "has_gns": true, "num_gns": 12, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/421-SeriesHeaders_NarutoNovels_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1412-SeriesThumbnailsManga_NarutoNovels_400x320.jpg", "label": null, "recommended_series_ids": "461,922,496,648,938,10,80,299,446,466,566,399,520,571,591,611,748,868,599", "latest_author": "By Shin Towada, Original Concept by Masashi Kishimoto", "title_sort": "naruto novels"}}, {"manga_series": {"id": 468, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 468, "device_id": 4, "keyart": "img/manga_series_header/468-SeriesHeaders_TokyoGhoulNovel_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1918, "manga_imprint_id": 4, "title": "Tokyo Ghoul Novels", "synopsis": "Ghouls live among us, the same as normal people in every way\u2014except their craving for human flesh.\r\n\r\nKen Kaneki is an ordinary college student until a violent encounter turns him into the first half-human half-ghoul hybrid. Trapped between two worlds, he must survive Ghoul turf wars, learn more about Ghoul society and master his new powers.", "tagline": "Explore the world of Tokyo Ghoul with these prose fiction spin-offs!", "rating": "t", "vanityurl": "tokyo-ghoul-novels", "copyright": "TOKYO GHOUL-HIBI- \u00a9 2013 by Sui Ishida, Shin Towada/SHUEISHA Inc.,TOKYO GHOUL-KUHAKU- \u00a9 2014 by Sui Ishida, Shin Towada/SHUEISHA Inc.,TOKYO GHOUL-SEKIJITSU- \u00a9 2014 by Sui Ishida, Shin Towada/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/468-SeriesHeaders_TokyoGhoulNovel_2000x800.jpg", "link_img": "img/manga_series_link_img/1580-SeriesThumbnailsManga_TKGNovels_400x320.jpg", "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1668629534, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/468-SeriesHeaders_TokyoGhoulNovel_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1580-SeriesThumbnailsManga_TKGNovels_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,763,85,79,483,537,579", "latest_author": "Novel by Shin Towada, Original Concept by Sui Ishida", "title_sort": "tokyo ghoul novels"}}, {"manga_series": {"id": 500, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 500, "device_id": 4, "keyart": "img/manga_series_keyart/1713-MITAP_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2216, "manga_imprint_id": 1, "title": "Manga in Theory and Practice", "synopsis": "Hirohiko Araki is the author of one of the longest-running and most beloved manga of all time, the epic fan favorite JoJo\u2019s Bizarre Adventure. According to him, manga is the ultimate synthesis of all forms of art, and in this book he reveals the secrets behind how to make the magic happen using concrete examples from his own work. Read all about his \u201cgolden ratio\u201d for drawing, the character histories he draws up for each of the characters he creates, his methodology for storytelling inspired by the great Ernest Hemingway, and many more aspects of manga creation in this how-to guide penned by an industry legend.", "tagline": "Learn how to create manga from a master of the medium!", "rating": "t", "vanityurl": "manga-in-theory-and-practice", "copyright": "ARAKI HIROHIKO NO MANGAJYUTSU \u00a92015 LUCKY LAND COMMUNICATIONS/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1626329269, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1713-MITAP_SeriesBrick_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1487-SeriesThumbnailsManga_MangaInTheory_400x320.jpg", "label": null, "recommended_series_ids": "22,10,80,299,446,466,566,138,452,323,339,376,469,596,768,814,820", "latest_author": "Hirohiko Araki", "title_sort": "manga in theory and practice"}}, {"manga_series": {"id": 434, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 434, "device_id": 4, "keyart": "img/manga_series_header/434-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 551, "manga_imprint_id": null, "title": "Boys Over Flowers Season 2", "synopsis": "A sequel to Boy's Over Flowers? It's true! Twelve years after the conclusion of the original smash-hit rom-com series, Yoko Kamio brings us Boys Over Flowers Season 2! Set two years after the members of the legendary \"F4\" clique have graduated from Eitoku Academy, a new group called the \"Correct 5\" is around to rule the school. It's just too bad for student Oto Edogawa that she doesn't fit into their mold... And what's better than the continuation of one of the most beloved manga series ever? The serialized chapters now in graphic novel form! ", "tagline": "Yoko Kamio's sequel to the hit series Boys Over Flowers.  ", "rating": "t", "vanityurl": "boys-over-flowers-season-2-manga", "copyright": "HANA-NOCHI HARE \u00a9 2015 by Yoko Kamio \u2022 Leaf Production/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/434-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1464-SeriesThumbnailsManga_BoF02_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 15, "has_chapters": true, "num_chapters": 112, "num_chapters_free": 3, "chapter_latest_pub_date": 1576969110, "chapter_latest_num": 111.0, "chapter_last_num": 111.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/434-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1464-SeriesThumbnailsManga_BoF02_400x320.jpg", "label": null, "recommended_series_ids": "546,815,818,862,875,304,168,169,180,217,183,157,492", "latest_author": "Yoko Kamio", "title_sort": "boys over flowers season 2"}}, {"manga_series": {"id": 483, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 483, "device_id": 4, "keyart": "img/manga_series_header/483-RWBY_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2227, "manga_imprint_id": 4, "title": "RWBY", "synopsis": "", "tagline": "Once, humans and beasts coexisted peacefully in the magical world of Remnant. Now they are at fierce odds. ", "rating": "t", "vanityurl": "rwby", "copyright": "RWBY \u00a9 2016 Rooster Teeth Productions, LLC   \u00a9 by Shirow Miwa/SHUEISHA INc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/483-RWBY_wm.jpg", "link_img": "img/manga_series_link_img/1640-noname.jpeg", "subscription_type": "sj", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/483-RWBY_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1640-noname.jpeg", "label": null, "recommended_series_ids": "105,580,851,170,301,312", "latest_author": "Manga by Shirow Miwa, Concept by Rooster Teeth Productions with Monty Oum", "title_sort": "rwby"}}, {"manga_series": {"id": 591, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 591, "device_id": 4, "keyart": "img/manga_series_header/591-MHASB_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: School Briefs", "synopsis": "Prose short stories featuring the everyday school lives of My Hero Academia\u2019s fan-favorite characters.", "tagline": "Midoriya inherits the superpower of the world\u2019s greatest hero, but greatness won\u2019t come easy.", "rating": "a", "vanityurl": "my-hero-academia-school-briefs", "copyright": "BOKU NO HERO ACADEMIA YUUEI HAKUSHO \u00a9 2016 by Kohei Horikoshi, Anri Yoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/591-MHASB_2000x800.jpg", "link_img": "img/manga_series_link_img/591-th-MHASB_400x332.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1688580381, "has_gns": true, "num_gns": 6, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/591-MHASB_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/591-th-MHASB_400x332.jpg", "label": null, "recommended_series_ids": "461,922,496,648,938,10,80,299,446,466,566,249,391,471,821,589", "latest_author": "Original Story by Kohei Horikoshi, Written by Anri Yoshi", "title_sort": "my hero academia: school briefs"}}, {"manga_series": {"id": 690, "updated_at": "2020-05-13T16:30:40.000-07:00", "manga_series_common_id": 690, "device_id": 4, "keyart": "img/manga_series_keyart/2273-OPAce_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 630, "manga_imprint_id": null, "title": "One Piece Novels", "synopsis": "Get the backstory on Luffy\u2019s brother Ace! This volume contains the origin story of Luffy\u2019s adopted brother Ace, and tells of his of his thrilling quest for the legendary One Piece treasure.", "tagline": "Join Monkey D. Luffy and his swashbuckling crew in their search for the ultimate treasure, the One Piece.", "rating": "a", "vanityurl": "one-piece-novels", "copyright": "ONE PIECE NOVEL A \u00a9 2018 by Eiichiro Oda, Sho Hinata/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1599587694, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5265-SeriesHeaders_OP_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/526-SeriesThumb_OP_400x320.png", "label": null, "recommended_series_ids": "448,8,293,691,461,922,496,648,938,10,80,299,446,466,566,138,452,399,520,571,591,611,748,868,1,414,417,421,460,467,855,856", "latest_author": "Original Concept by Eiichiro Oda, Written by Tatsuya Hamazaki", "title_sort": "one piece novels"}}, {"manga_series": {"id": 691, "updated_at": "2020-07-14T09:21:12.000-07:00", "manga_series_common_id": 691, "device_id": 4, "keyart": "img/manga_series_header/691-8_SeriesHeaders_Bleach_v3_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 657, "manga_imprint_id": null, "title": "Bleach: Can\u2019t Fear Your Own World", "synopsis": "The Quincies\u2019 Thousand Year Blood War is over, but the embers of turmoil still smolder in the Soul Society. Tokinada Tsunayashiro, elevated to head of his clan after a slew of assassinations take out every other claimant to the title, has a grand plan to create a new Soul King. His dark ambitions soon sow the seeds of a new total war across the realms, but all is not lost. There is one unlikely Soul Reaper who holds the key to defusing the conflict\u2014Shuhei Hisagi, Assistant Captain of the Ninth Company and reporter for the Seireitei Bulletin!", "tagline": "Part-time student, full-time Soul Reaper, Ichigo is one of the chosen few guardians of the afterlife.", "rating": "a", "vanityurl": "bleach-cant-fear-your-own-world", "copyright": "BLEACH CAN'T FEAR YOUR OWN WORLD \u00a9 2017 by Tite Kubo, Ryohgo Narita/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/691-8_SeriesHeaders_Bleach_v3_2000x800.jpg", "link_img": "img/manga_series_link_img/691-th-106_SeriesThumbnailsManga_BLH_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694625315, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/691-8_SeriesHeaders_Bleach_v3_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/691-th-106_SeriesThumbnailsManga_BLH_400x320.jpg", "label": null, "recommended_series_ids": "105,703,580,851,9,801,1,414,417,421,460,467,855,856,5,690,904,910,483,537,579", "latest_author": "Original Story by Tite Kubo, Written by Ryohgo Narita", "title_sort": "bleach: can\u2019t fear your own world"}}, {"manga_series": {"id": 133, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 133, "device_id": 4, "keyart": "img/manga_series_header/133-SeriesHeaders_YGO5D_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! 5D's", "synopsis": "In New Domino City, the hottest game in town is the Turbo Duel, fought from blazingly fast motorcycles called Duel Runners. On the outskirts of New Domino City, in a district known as Satellite, a new Turbo Duel hero emerges--Yusei Fudo! On his custom-built Duel Runner, Yusei takes on all challengers, fighting for his friends and the future of Satellite! \r\n\r\n ", "tagline": "Duelists, start your engines!", "rating": "t", "vanityurl": "yu-gi-oh-5d", "copyright": "YU-GI-OH! 5D\u2019s\u00a0\u00a9\u00a02009 by Masahiro Hikokubo, Masashi Sato/SHUEISHA Inc. \u00a9\u00a0K. Takahashi \u00a9\u00a0NAS\u30fbTV TOKYO", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/133-SeriesHeaders_YGO5D_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/231-SeriesThumbnailsManga_YGO5D_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1687913323, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 66, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 66.0, "chapter_last_num": 66.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/133-SeriesHeaders_YGO5D_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/231-SeriesThumbnailsManga_YGO5D_400x320.jpg", "label": null, "recommended_series_ids": "461,496,648,467,326,128,158,286", "latest_author": "Story by Masahiro Hikokubo, Art by Masashi Sato", "title_sort": "yu-gi-oh! 5d's"}}, {"manga_series": {"id": 326, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 326, "device_id": 4, "keyart": "img/manga_series_header/326-SeriesHeaders_YGOArcV_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! ARC-V", "synopsis": "Action Duels have become a global sensation, but what is the dark secret behind them that threatens to destroy the world?", "tagline": "Action Duels have become a global sensation, but what is the dark secret behind them that threatens to destroy the world?", "rating": "t", "vanityurl": "yu-gi-oh-arc-v", "copyright": "YU-GI-OH! ARC-V \u00a9\u00a02014 by Kazuki Takahashi, Naohito Miyoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/326-SeriesHeaders_YGOArcV_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1056-SeriesThumbnailsManga_YGOArcV_v2_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 7, "has_chapters": true, "num_chapters": 45, "num_chapters_free": 3, "chapter_latest_pub_date": 1555685910, "chapter_latest_num": 45.0, "chapter_last_num": 45.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/326-SeriesHeaders_YGOArcV_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1056-SeriesThumbnailsManga_YGOArcV_v2_400x320.jpg", "label": null, "recommended_series_ids": "461,299,466,399,133,128,247,286", "latest_author": "Story by Shin Yoshida, Art by Naohito Miyoshi, Originally Created by Kazuki Takahashi", "title_sort": "yu-gi-oh! arc-v"}}, {"manga_series": {"id": 128, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 128, "device_id": 4, "keyart": "img/manga_series_header/128-MangaHeaders_YGOGX_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! GX", "synopsis": "Years after Yugi's legendary battles, the game is so popular that special institutions dedicated to the art of the Duel have sprung up all over the world. Join Jaden Yuki and his pals at the Academy for the adventures of the next generation of Yu-Gi-Oh!", "tagline": "The Next Generation of Duelist has arrived.", "rating": "a", "vanityurl": "yu-gi-oh-gx", "copyright": "YU-GI-OH! GX \u00a9 2005 by Kazuki Takahashi, Naoyuki Kageyama/SHUEISHA Inc. \u00a9 K. Takahashi \u00a9 NAS/TV TOKYO", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/128-MangaHeaders_YGOGX_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/128-th-SeriesThumbnailsManga_YGOGX_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 64, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 64.0, "chapter_last_num": 64.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/128-MangaHeaders_YGOGX_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/128-th-SeriesThumbnailsManga_YGOGX_400x320.jpg", "label": null, "recommended_series_ids": "466,80,611,414,133,326,247,286", "latest_author": "Naoyuki Kageyama", "title_sort": "yu-gi-oh! gx"}}, {"manga_series": {"id": 247, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 247, "device_id": 4, "keyart": "img/manga_series_header/247-MangaHeaders_YGOR_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! R", "synopsis": "The shocking sequel to Yu-Gi-Oh!: Duelist and prequel to Yu-Gi-Oh!: Millennium World! When the follower of an old enemy returns to take revenge, Yugi Mutou must duel to save a friend's life. But can he overcome the power of the three \"Jashin,\" the terrifying Evil God Cards?", "tagline": "Yugi's back for another duel, but this time, it's personal!", "rating": "t", "vanityurl": "yu-gi-oh-r", "copyright": "YU-GI-OH! R \u00a9 2004 by Kazuki Takahashi, Akira Ito/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/247-MangaHeaders_YGOR_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/247-th-SeriesThumbnailsManga_YGOR_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 44, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 44.0, "chapter_last_num": 44.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/247-MangaHeaders_YGOR_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/247-th-SeriesThumbnailsManga_YGOR_400x320.jpg", "label": null, "recommended_series_ids": "299,566,611,414,248,326,128,286", "latest_author": "Story and Art by Akira Ito, Created by Kazuki Takahashi", "title_sort": "yu-gi-oh! r"}}, {"manga_series": {"id": 10, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 10, "device_id": 4, "keyart": "img/manga_series_header/10-Dragonball_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": 1, "title": "Dragon Ball", "synopsis": "Dragon Ball introduces a young monkey-tailed boy named Goku (a wry update of the classic Chinese \"Monkey King\" legend), whose quiet life changes when he meets a girl named Bulma who is on a quest to collect seven \"Dragon Balls.\" If she gathers them all, an incredibly powerful dragon will appear and grant her one wish. But the precious orbs are scattered all over the world, and Bulma could use the help of a certain super-strong boy... (In Japan, Dragon Ball and Dragon Ball Z were originally a single 42-volume series. VIZ Media's Dragon Ball contains vols. 1-16 of the original Japanese Dragon Ball, from the beginning of the series to the climax of Goku's last fight with Piccolo.)", "tagline": "Goku and friends battle intergalactic evil in the greatest action-adventure-fantasy-comedy-fighting series ever!", "rating": "t", "vanityurl": "dragon-ball", "copyright": "DRAGON BALL \u00a9 1984 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/10-Dragonball_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1685749596, "has_gns": true, "num_gns": 16, "has_chapters": true, "num_chapters": 194, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 194.0, "chapter_last_num": 194.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/10-Dragonball_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/84-SeriesThumbnailsManga_DBv2_400x320.jpg", "label": null, "recommended_series_ids": "461,132,496,466,80,566,724,249", "latest_author": "Akira Toriyama", "title_sort": "dragon ball"}}, {"manga_series": {"id": 446, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 446, "device_id": 4, "keyart": "img/manga_series_header/446-SeriesHeaders_DBColorFreeza_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": 1, "title": "Dragon Ball Full Color Freeza Arc", "synopsis": "Akira Toriyama's original, bestselling series now in a full-color version!", "tagline": "Goku and his friends journey to the planet Namek to confront the deadliest enemies Earth has ever seen\u2014in full color! ", "rating": "a", "vanityurl": "dragon-ball-full-color-freeza", "copyright": "DRAGON BALL \u00a9 2013 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/446-SeriesHeaders_DBColorFreeza_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1512-SeriesThumbnailsManga_DBFullColorFreeza_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 84, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 84.0, "chapter_last_num": 84.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/446-SeriesHeaders_DBColorFreeza_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1512-SeriesThumbnailsManga_DBFullColorFreeza_400x320.jpg", "label": null, "recommended_series_ids": "461,132,496,466,80,362,467,414", "latest_author": "Akira Toriyama", "title_sort": "dragon ball full color freeza arc"}}, {"manga_series": {"id": 299, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 299, "device_id": 4, "keyart": "img/manga_series_header/299-SeriesHeaders_DBColorSaiyan_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": 1, "title": "Dragon Ball Full Color Saiyan Arc", "synopsis": "Son Goku is the greatest hero on Earth. Five years after defeating the demon king Piccolo, he\u2019s grown up and has a family. But what is the real reason for Goku\u2019s incredible strength? A visitor from outer space arrives bearing terrible news\u2014Goku is an alien, and the visitor, Raditz, is Goku\u2019s brother! When Raditz turns out to be a ruthless killer, Goku must fight his incredibly strong brother to save his family and the entire human race. A surprising alliance may be Earth\u2019s last hope: Goku will team up with his old enemy Piccolo to save the world!", "tagline": "Akira Toriyama's original, best-selling series now in a full-color version!", "rating": "a", "vanityurl": "dragon-ball-full-color", "copyright": "DRAGON BALL \u00a9 1984 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/299-SeriesHeaders_DBColorSaiyan_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/948-SeriesThumbnailsManga_DBFullColorSaiyan_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 51, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 51.0, "chapter_last_num": 51.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/299-SeriesHeaders_DBColorSaiyan_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/948-SeriesThumbnailsManga_DBFullColorSaiyan_400x320.jpg", "label": null, "recommended_series_ids": "461,132,496,648,466,80,362,5", "latest_author": "Akira Toriyama", "title_sort": "dragon ball full color saiyan arc"}}, {"manga_series": {"id": 449, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 449, "device_id": 4, "keyart": "img/manga_series_keyart/1525-CWO16111_SeriesBricks_7thGarden_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2126, "manga_imprint_id": 1, "title": "7thGARDEN", "synopsis": "Awyn Gardner will do anything to protect the beautiful mistress of the equally beautiful estate gardens he lovingly tends\u2014even enslave himself to an also beautiful demon bent on world domination! The high-pitched battle is on between powerful angels, sexy demons and innocent people to dominate a world rife with political intrigue\u2026and to win the heart of one hapless human man!", "tagline": "The battle is on between powerful angels and sexy demons!", "rating": "tp", "vanityurl": "7th-garden", "copyright": "7thGARDEN \u00a9 2014 by Mitsu Izumi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 32, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 32.0, "chapter_last_num": 32.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5445-Tier03_SeriesHeader_7thG_v3_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/871-SeriesThumbnailsManga_7GR_400x320.jpg", "label": null, "recommended_series_ids": "716,105,722,78,312", "latest_author": "Mitsu Izumi", "title_sort": "7thgarden"}}, {"manga_series": {"id": 227, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 227, "device_id": 4, "keyart": "img/manga_series_header/227-SeriesHeaders_BlackCat_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 608, "manga_imprint_id": 1, "title": "Black Cat", "synopsis": "Train Heartnet, also known as \"Black Cat,\" was an infamous assassin for a secret organization called Chronos...until he abandoned that cold-blooded existence to live on his own terms as an easygoing bounty hunter. But is Train's past as far behind him as he thinks?", "tagline": "Crossing paths with bounty hunter Train is seriously bad luck for criminals!", "rating": "tp", "vanityurl": "black-cat", "copyright": "BLACK CAT \u00a9 2000 by Kentaro Yabuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/227-SeriesHeaders_BlackCat_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 20, "has_chapters": true, "num_chapters": 185, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 185.0, "chapter_last_num": 185.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/227-SeriesHeaders_BlackCat_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/76-SeriesThumbnailsManga_BLC__400x320.jpg", "label": null, "recommended_series_ids": "716,8,105,703,10,627", "latest_author": "Kentaro Yabuki", "title_sort": "black cat"}}, {"manga_series": {"id": 549, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 549, "device_id": 4, "keyart": "img/manga_series_keyart/1877-BlackTorch_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2265, "manga_imprint_id": null, "title": "Black Torch", "synopsis": "Jiro Azuma is descended from of a long line of shinobi, and he also can talk to animals. One day, he rescues a very unique black cat named Rago, a supernatural being, and is dragged into a secret supernatural war.", "tagline": "Ninja and animal lover Jiro Azuma finds himself in the middle of a war with ninjas vs. demons.", "rating": "tp", "vanityurl": "black-torch", "copyright": "BLACK TORCH \u00a9 2016 by Tsuyoshi Takaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1684432324, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1565128770, "chapter_latest_num": 19.0, "chapter_last_num": 19.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5946-SeriesHeaders_BlackTorch_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1897-SeriesThumbnails_BlackTorch_400x320.jpg", "label": null, "recommended_series_ids": "8,105,461,724,1,126,312", "latest_author": "Tsuyoshi Takaki", "title_sort": "black torch"}}, {"manga_series": {"id": 702, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 702, "device_id": 4, "keyart": "img/manga_series_keyart/2277-BlueFlag_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2362, "manga_imprint_id": null, "title": "Blue Flag", "synopsis": "It\u2019s the last year of high school, and love is in the air. Romantic feelings that have been building up over years of friendship come to light. When Taichi\u2019s classmate Futaba asks him to help her confess to his best friend, Toma, it sparks the catalyst that begins the sweet and heart-wrenching journey of their third and final year of high school.", "tagline": "An unexpected love quadrangle with a dash of unrequited love.", "rating": "tp", "vanityurl": "blue-flag", "copyright": "AO NO FLAG \u00a9 2017 by KAITO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 53, "num_chapters_free": 3, "chapter_latest_pub_date": 1624949970, "chapter_latest_num": 53.0, "chapter_last_num": 53.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6076-SeriesHeaders_BlueFlag_2000x800_jpg_wm", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2356-SeriesThumbnails_BlueFlag_400x320_jpg", "label": null, "recommended_series_ids": "265,434,223,647,450,180,492", "latest_author": "KAITO", "title_sort": "blue flag"}}, {"manga_series": {"id": 265, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 265, "device_id": 4, "keyart": "img/manga_series_keyart/813-BoysOverFlowers-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 551, "manga_imprint_id": 2, "title": "Boys Over Flowers", "synopsis": "Although Tsukushi Makino is from a poor family, she attends an elite school for the super rich, where her life has become intertwined with the \"F4,\" the ruling boys of the school, in a whirlwind of love and confusion!", "tagline": "", "rating": "t", "vanityurl": "boys-over-flowers", "copyright": "HANA-YORI DANGO \u00a9 1992 by Yoko Kamio\u30fbLeaf Production All rights reserved. First published in Japan in 1982 by SHUEISHA Inc., Tokyo. English translation rights arranged by SHUEISHA Inc", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 243, "num_chapters_free": 3, "chapter_latest_pub_date": 1567123230, "chapter_latest_num": 243.0, "chapter_last_num": 243.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5861-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/31-SeriesThumbnailsManga_BOF__400x320.jpg", "label": null, "recommended_series_ids": "702,434,311,180,492", "latest_author": "Yoko Kamio", "title_sort": "boys over flowers"}}, {"manga_series": {"id": 311, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 311, "device_id": 4, "keyart": "img/manga_series_keyart/997-BoysOverFlowers_JewelryBox-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 551, "manga_imprint_id": 2, "title": "Boys Over Flowers: Jewelry Box", "synopsis": "Although Tsukushi Makino is from a poor family, she attends an elite school for the super rich, where her life has become intertwined with the \"F4,\" the ruling boys of the school, in a whirlwind of love and confusion!", "tagline": "", "rating": "t", "vanityurl": "boys-over-flowers-jewelry-box", "copyright": "HANA-YORI DANGO \u00a9 1992 by Yoko Kamio\u30fbLeaf Production/SHUEISHA Inc. ", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1704096024, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 4, "num_chapters_free": 0, "chapter_latest_pub_date": 1567123230, "chapter_latest_num": 4.0, "chapter_last_num": 4.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5861-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/31-SeriesThumbnailsManga_BOF__400x320.jpg", "label": null, "recommended_series_ids": "265,434,546,304,492", "latest_author": "Yoko Kamio", "title_sort": "boys over flowers: jewelry box"}}, {"manga_series": {"id": 123, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 123, "device_id": 4, "keyart": "img/manga_series_keyart/201-busorenkin_940x322.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 612, "manga_imprint_id": 5, "title": "Buso Renkin", "synopsis": "Buso Renkin is the story of teenager Kazuki Muto, who dies trying to save a girl who was being attacked by an eerie monster. The next morning, however, Kazuki is left wondering whether it was all a dream. Lo and behold, the girl, the monster, and his death are all real! The girl, Tokiko Tsumura, was actually trying to slay the homunculus (a beast that can take the form of humans, and whose main source of food is people), but Kazuki got in her way. To revive Kazuki, Tokiko replaces his heart with a \"kakugane,\" an alchemic device that allows him to summon a lance with which to fight the monsters. It turns out that Tokiko is a member of the Alchemist Warriors, an organization sworn to protect the world from the diabolical creatures. Soon, Kazuki joins Tokiko in her quest to terminate the sinister being that creates and controls the homunculus.", "tagline": "A high school student\u2019s heroic act turns into an epic human vs. monster sword fight! ", "rating": "tp", "vanityurl": "buso-renkin", "copyright": "BUSOU RENKIN \u00a9 2003 by Nobuhiro Watsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1672560010, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 83, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 83.0, "chapter_last_num": 83.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5863-SeriesHeaders_BusoRenkin_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/77-SeriesThumbnailsManga_BusoRenkin_400x320.jpg", "label": null, "recommended_series_ids": "22,546,240,14", "latest_author": "Nobuhiro Watsuki", "title_sort": "buso renkin"}}, {"manga_series": {"id": 22, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 22, "device_id": 4, "keyart": "img/manga_series_keyart/40-claymore_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 613, "manga_imprint_id": 1, "title": "Claymore", "synopsis": "In a world where monsters called Yoma prey on humans and live among them in disguise, humanity's only hope is a new breed of warrior known as Claymores. Half human, half monster, these silver-eyed slayers possess supernatural strength but are condemned to fight their savage impulses or lose their humanity completely.", "tagline": "Sword-wielding women warriors are humanity\u2019s only defense against supernatural beings of appallingly destructive power.", "rating": "tp", "vanityurl": "claymore", "copyright": "CLAYMORE \u00a9 2001 by Norihiro Yagi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560009, "has_gns": true, "num_gns": 27, "has_chapters": true, "num_chapters": 155, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 155.0, "chapter_last_num": 155.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5553-Tier05_SeriesHeaders_Claymore_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/78-Tier05_SeriesThumbnails_CLM_400x320.jpg", "label": null, "recommended_series_ids": "8,105,703,722,126,14,312", "latest_author": "Nobuhiro Yagi", "title_sort": "claymore"}}, {"manga_series": {"id": 603, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 603, "device_id": 4, "keyart": "img/manga_series_header/603-051919_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2354, "manga_imprint_id": null, "title": "Double Taisei", "synopsis": "Genius shogi player, Taisei Tendo has a split personality. He is the well-behaved \"Tai\" during the day, but turns into the freewheeling \"Sei\" during the night. Tai is about to participate in the professional qualifying tournament for shogi, but his world is suddenly turned upside-down when he switches places with Sei!", "tagline": "A shogi manga with all the right pieces!", "rating": "t", "vanityurl": "double-taisei", "copyright": "FUTARI NO TAISEI \u00a9 2019 by Kentaro Fukuda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/603-051919_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/603-th-WSJ_FutariNoTaisei_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560020, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 27, "num_chapters_free": 3, "chapter_latest_pub_date": 1574625210, "chapter_latest_num": 27.0, "chapter_last_num": 27.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/603-051919_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/603-th-WSJ_FutariNoTaisei_400x320.jpg", "label": null, "recommended_series_ids": "265,450,124,632", "latest_author": "Kentaro Fukuda", "title_sort": "double taisei"}}, {"manga_series": {"id": 132, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 132, "device_id": 4, "keyart": "img/manga_series_keyart/228-dr_slump_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 620, "manga_imprint_id": 1, "title": "Dr. Slump", "synopsis": "When goofy inventor Senbei Norimaki creates a precocious robot named Arale, his masterpiece turns out to be more than he bargained for!", "tagline": "Robot girl hijinks from the creator of Dragon Ball!", "rating": "t", "vanityurl": "dr-slump", "copyright": "DR. SLUMP \u00a9 1980 by Akira Toriyama/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 18, "has_chapters": true, "num_chapters": 235, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 235.0, "chapter_last_num": 235.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5730-Header_DrSlump_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/83-SeriesThumbnailsManga_DRS_400x320.jpg", "label": null, "recommended_series_ids": "10,466,362,717,721,235", "latest_author": "Akira Toriyama", "title_sort": "dr. slump"}}, {"manga_series": {"id": 488, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 488, "device_id": 4, "keyart": "img/manga_series_keyart/1661-eldlive_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2242, "manga_imprint_id": null, "title": "\u00e9lDLIVE", "synopsis": "Chuta Kokonose is like any other middle school student. He's easily distracted, says things he shouldn't say out loud and accidentally creeped out the prettiest girl in his class--and all of his problems could be avoided if it weren't for the mysterious voice in his head. One day, Inspector Chips of the space police \u00e9lDLIVE appears in his locker and seeks to recruit him. But first, he'll have to pass their entrance test: apprehending a notorious space criminal!", "tagline": "A zany space adventure by the creator of Reborn!!", "rating": "t", "vanityurl": "eldlive", "copyright": "ELDLIVE \u00a9 2013 by Akira Amano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/1660-WSJ_elDLIVE_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 11, "has_chapters": true, "num_chapters": 64, "num_chapters_free": 3, "chapter_latest_pub_date": 1542095999, "chapter_latest_num": 64.0, "chapter_last_num": 64.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5811-SeriesHeaders_elDLIVE_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1660-WSJ_elDLIVE_400x320.jpg", "label": null, "recommended_series_ids": "175,132,324", "latest_author": "Akira Amano", "title_sort": "eldlive"}}, {"manga_series": {"id": 130, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 130, "device_id": 4, "keyart": "img/manga_series_header/130-SeriesHeaders_Genkaku_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1311, "manga_imprint_id": 5, "title": "Genkaku Picasso", "synopsis": "Hikari \u201cPicasso\u201d Hamura, a grouchy teenager with a talent for drawing, dies in a freak accident. The gods decide to revive him, but only on the condition that he use his artistic gift for the good of humanity. Picasso discovers that sketching a person\u2019s aura yields a surreal portrait of their psyche. Stranger still, Picasso can dive into these dreamscapes and help people by exploring their deepest emotions, memories and perceptions.\r\n ", "tagline": "Sometimes a picture can tell more than a thousand words.", "rating": "tp", "vanityurl": "genkaku-picasso", "copyright": "GENKAKU PICASSO \u00a9 2008 by Usamaru Furuya/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/130-SeriesHeaders_Genkaku_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1672560011, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 20, "num_chapters_free": 3, "chapter_latest_pub_date": 1546387170, "chapter_latest_num": 11.4, "chapter_last_num": 11.4, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/130-SeriesHeaders_Genkaku_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/258-SeriesThumbnailsManga_Genkaku_v2_400x320.jpg", "label": null, "recommended_series_ids": "7,721", "latest_author": "Usamaru Furuya", "title_sort": "genkaku picasso"}}, {"manga_series": {"id": 581, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 581, "device_id": 4, "keyart": "img/manga_series_header/581-SJMangaHeaders_Gokutei_Higuma_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2327, "manga_imprint_id": null, "title": "Hell Warden Higuma", "synopsis": "Fugitive spirits are the souls of criminals who have escaped hell and infest the mortal world. They possess the living to commit evil deeds, and only the Hell Wardens can stop them.", "tagline": "Watch out malevolent fugitive souls, Higuma will send you straight back from where you came!", "rating": "t", "vanityurl": "hell-warden-higuma", "copyright": "GOKUTEI HIGUMA \u00a9 2018 by Natsuki Hokami/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/581-SJMangaHeaders_Gokutei_Higuma_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/581-th-WSJ_Gokuta_Higma_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560019, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 20, "num_chapters_free": 3, "chapter_latest_pub_date": 1565553510, "chapter_latest_num": 19.1, "chapter_last_num": 19.1, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/581-SJMangaHeaders_Gokutei_Higuma_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/581-th-WSJ_Gokuta_Higma_400x320.jpg", "label": null, "recommended_series_ids": "8,105,18,546,466,627", "latest_author": "Natsuki Hokami", "title_sort": "hell warden higuma"}}, {"manga_series": {"id": 347, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 347, "device_id": 4, "keyart": "img/manga_series_header/347-SJ_HiFiCluster_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2360, "manga_imprint_id": 1, "title": "Hi-Fi Cluster", "synopsis": "In a society where you can download Ability Labels to instantly acquire new skills ranging from cooking to butt kicking, it would seem that everyone is equal. Except that you need to qualify for the Abilities you download\u2014and be capable of using them. Naturally a black market forms around buying and selling the rarest and most restricted Abilities... And evil forces scheme to use them to take over the world!", "tagline": "Villains and heroes with downloadable abilities fight in a futuristic Tokyo!  ", "rating": "t", "vanityurl": "hi-fi-cluster", "copyright": "HI-FI CLUSTER \u00a9 2014 by Ippei Goto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/347-SJ_HiFiCluster_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/347-th-SJ_HiFiCluster_400x320_jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 3, "chapter_latest_pub_date": 1560333570, "chapter_latest_num": 18.0, "chapter_last_num": 18.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/347-SJ_HiFiCluster_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/347-th-SJ_HiFiCluster_400x320_jpg", "label": null, "recommended_series_ids": "466,627,5,477,312,594", "latest_author": "Ippei Goto", "title_sort": "hi-fi cluster"}}, {"manga_series": {"id": 124, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 124, "device_id": 4, "keyart": "img/manga_series_header/124-SeriesHeaders_HikaruNoGoManga_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 624, "manga_imprint_id": 1, "title": "Hikaru no Go", "synopsis": "After stumbling across a haunted go board, Hikaru Shindo discovers that the spirit of a master player named Fujiwara-no-Sai has taken up residence in his consciousness. Sai awakens in Hikaru an untapped genius for the game, and soon the schoolboy is chasing his own dream--defeating the famed go prodigy Akira Toya!", "tagline": "Guided by the spirit of a master, young Hikaru Shindo strives to be the best at the ancient board game of go.", "rating": "a", "vanityurl": "hikaru-no-go", "copyright": "HIKARU-NO GO \u00a9 1998 by Yumi Hotta, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/124-SeriesHeaders_HikaruNoGoManga_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/124-th-SeriesThumbnailsManga_HikaruNoGo_400x320_jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560010, "has_gns": true, "num_gns": 23, "has_chapters": true, "num_chapters": 195, "num_chapters_free": 3, "chapter_latest_pub_date": 1543705170, "chapter_latest_num": 155.0, "chapter_last_num": 189.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/124-SeriesHeaders_HikaruNoGoManga_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/124-th-SeriesThumbnailsManga_HikaruNoGo_400x320_jpg", "label": null, "recommended_series_ids": "318,7,9,700,450,440,129", "latest_author": "Story by Yumi Hotta and Art by Takeshi Obata", "title_sort": "hikaru no go"}}, {"manga_series": {"id": 362, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 362, "device_id": 4, "keyart": "img/manga_series_keyart/1177-JanuaryBricks_Jaco_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1698, "manga_imprint_id": 1, "title": "Jaco the Galactic Patrolman", "synopsis": "Akira Toriyama, manga legend and creator of Dragon Ball Z, is back with the quirky comedy Jaco the Galactic Patrolman! Retired scientist Omori lives alone on a deserted island while continuing his research into time-travel. His quiet life is interrupted when galactic patrolman Jaco crash-lands and decided to move in with him. Can Jaco get along with the old man long enough to save the earth from a dangerous threat? Includes a special bonus chapter introducing Dragon Ball Z hero Goku's parents!", "tagline": "Join wacky space patrolman Jaco as he tries to keep the Earth safe.", "rating": "a", "vanityurl": "jaco-galactic-patrolman", "copyright": "JACO THE GALACTIC PATROLMAN \u00a9 2013 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 10, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 10.0, "chapter_last_num": 10.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5731-Header_JACO_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/333-SeriesThumbnailsManga_JACO_400x320.jpg", "label": null, "recommended_series_ids": "283,132,10,466,235", "latest_author": "Akira Toriyama", "title_sort": "jaco the galactic patrolman"}}, {"manga_series": {"id": 339, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 339, "device_id": 4, "keyart": "img/manga_series_header/339-SeriesHeaders_JoJoPart01_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": 5, "title": "JoJo's Bizarre Adventure: Part 1--Phantom Blood", "synopsis": "The legendary Shonen Jump series, now available in English for the first time, in a deluxe edition featuring color pages and newly drawn cover art! JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles. A multigenerational tale of the heroic Joestar family and their never-ending battle against evil! ", "tagline": "Fate brings Jonathan Joestar and Dio together\u2014the world will never be the same! ", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-one", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by Hirohiko Araki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/339-SeriesHeaders_JoJoPart01_v2_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1699998923, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 44, "num_chapters_free": 3, "chapter_latest_pub_date": 1556783970, "chapter_latest_num": 44.0, "chapter_last_num": 44.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/339-SeriesHeaders_JoJoPart01_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/89-SeriesThumbManga_JOJO_v2_400x320.jpg", "label": null, "recommended_series_ids": "22,10,376,469,596", "latest_author": "Hirohiko Araki", "title_sort": "jojo's bizarre adventure: part 1--phantom blood"}}, {"manga_series": {"id": 469, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 469, "device_id": 4, "keyart": "img/manga_series_header/469-SeriesHeaders_JoJoPart03_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": 5, "title": "JoJo\u2019s Bizarre Adventure: Part 3--Stardust Crusaders", "synopsis": "The legendary Shonen Jump series is now available in deluxe editions featuring color pages and newly drawn cover art! JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles.", "tagline": "Jotaro Kujo\u2019s Star Platinum is the fastest Stand in the world...but can it measure up to Dio?!", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-thr", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by Hirohiko Araki & LUCKY LAND COMMUNICATIONS/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/469-SeriesHeaders_JoJoPart03_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1584-SeriesThumbnailsManga_JoJoPart03_400x320.jpg", "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1699998923, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 152, "num_chapters_free": 3, "chapter_latest_pub_date": 1556783970, "chapter_latest_num": 152.0, "chapter_last_num": 152.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/469-SeriesHeaders_JoJoPart03_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1584-SeriesThumbnailsManga_JoJoPart03_400x320.jpg", "label": null, "recommended_series_ids": "22,10,339,376,596", "latest_author": "Hirohiko Araki", "title_sort": "jojo\u2019s bizarre adventure: part 3--stardust crusaders"}}, {"manga_series": {"id": 524, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 524, "device_id": 4, "keyart": "img/manga_series_header/524-SeriesHeadersManga_JuniTaisen_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2243, "manga_imprint_id": null, "title": "Juni Taisen: Zodiac War (manga)", "synopsis": "Every 12 years, 12 fighters take the form of the Chinese zodiac and engage in a battle royale. With their strength and mysterious powers, they fight to the death and the sole survivor is granted the ultimate prize\u2014any wish.", "tagline": "The manga adaptation of Juni Taisen from the creator of Medaka Box!", "rating": "tp", "vanityurl": "juni-taisen-zodiac-war-manga", "copyright": "JUUNI TAISEN \u00a9 2017 by NISIOISIN, Hikaru Nakamura, Akira Akatsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/524-SeriesHeadersManga_JuniTaisen_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/524-th-WSJ_JuniTaisenManga_400x320_v2.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687291036, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 29, "num_chapters_free": 3, "chapter_latest_pub_date": 1526108370, "chapter_latest_num": 29.0, "chapter_last_num": 29.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/524-SeriesHeadersManga_JuniTaisen_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/524-th-WSJ_JuniTaisenManga_400x320_v2.jpg", "label": null, "recommended_series_ids": "318,448,9,339,371", "latest_author": "Manga by Akira Akatsuki, Original Novel by Nisioisin", "title_sort": "juni taisen: zodiac war (manga)"}}, {"manga_series": {"id": 475, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 475, "device_id": 4, "keyart": "img/manga_series_header/475-SeriesHeaders_LoveRush_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2234, "manga_imprint_id": 1, "title": "Love Rush!", "synopsis": "Reiji Hakuba carries the ubermale gene, an unusual gene that causes women to see him as a super stud. It even attracts supernatural girls from other realms who hope to make Reiji their betrothed. But Reiji doesn\u2019t want a harem. He wants the heart of his childhood friend Shizuku, the only girl unaffected by his gene.\r\n\r\nEnter Kokoro Roko Rokoko, cupid princess from the Celestial Realm, who makes it her mission to protect Reiji from the otherworldly cuties out to snag his heart\u2014so she can win it for herself. Will Reiji be able to dodge the unearthly advances of Kokoro and the others long enough to confess his feelings to Shizuku?", "tagline": "Reiji was born with the rare ubermale gene. Now all the girls, human and not, are after him!", "rating": "t", "vanityurl": "love-rush", "copyright": "LOVE RUSH! \u00a9 2016 by Ryohei Yamamoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/475-SeriesHeaders_LoveRush_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1608-WSJ_LoveRush_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 13, "num_chapters_free": 3, "chapter_latest_pub_date": 1560333570, "chapter_latest_num": 13.0, "chapter_last_num": 13.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/475-SeriesHeaders_LoveRush_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1608-WSJ_LoveRush_400x320.jpg", "label": null, "recommended_series_ids": "470,702,265,722,717,180,492", "latest_author": "Ryohei Yamamoto", "title_sort": "love rush!"}}, {"manga_series": {"id": 704, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 704, "device_id": 4, "keyart": "img/manga_series_header/704-MHAHeroesRising_Seriesheader_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "My Hero Academia - League of Villains: Undercover", "synopsis": "", "tagline": "In a world where the mightiest Quirk makes right, how far are you willing to go to gain the ultimate power?!", "rating": "t", "vanityurl": "my-hero-academia-one-shot", "copyright": "BOKU NO HERO ACADEMIA \u00a9 2014 by Kohei Horikoshi/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/704-MHAHeroesRising_Seriesheader_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/704-th-MHAHeroesRising_seriesthumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1585241910, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/704-MHAHeroesRising_Seriesheader_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/704-th-MHAHeroesRising_seriesthumbnail_400x320_jpg", "label": null, "recommended_series_ids": "175,496,724,399,611,249,739", "latest_author": "Kohei Horikoshi", "title_sort": "my hero academia - league of villains: undercover"}}, {"manga_series": {"id": 520, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 520, "device_id": 4, "keyart": "img/manga_series_header/520-WSJHeader_MHVigilante_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: Vigilantes", "synopsis": "", "tagline": "Not everyone needs a license to fight for justice!", "rating": "t", "vanityurl": "my-hero-academia-vigilantes", "copyright": "VIGILANTE -BOKU NO HERO ACADEMIA ILLEGALS- \u00a9 2016 by Hideyuki Furuhashi, Betten Court, Kohei Horikoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/520-WSJHeader_MHVigilante_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/520-th-SeriesThumbnailsManga_MHVigilante_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1696921804, "has_gns": true, "num_gns": 15, "has_chapters": true, "num_chapters": 127, "num_chapters_free": 4, "chapter_latest_pub_date": 1653670710, "chapter_latest_num": 126.0, "chapter_last_num": 126.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/520-WSJHeader_MHVigilante_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/520-th-SeriesThumbnailsManga_MHVigilante_400x320.jpg", "label": null, "recommended_series_ids": "580,722,540,724,694,704,611,624", "latest_author": "Story by Hideyuki Furuhashi, Art by Betten Court, Original Concept by Kohei Horikoshi", "title_sort": "my hero academia: vigilantes"}}, {"manga_series": {"id": 414, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 414, "device_id": 4, "keyart": "img/manga_series_header/414-SeriesHeaders_Naruto7thHokage_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": 1, "title": "Naruto: The Seventh Hokage and the Scarlet Spring", "synopsis": "Naruto was a young shinobi with an incorrigible knack for mischief. Then he channeled that energy into learning amazing ninja techniques and saving the world! Now Naruto has achieved his dream of becoming the greatest ninja in the village, and his face sits atop the Hokage monument. But new troubles may be bubbling up in the shinobi world\u2026", "tagline": "The post-series spin-off to the world\u2019s most popular ninja comic!", "rating": "t", "vanityurl": "naruto-the-seventh-hokage-and-th", "copyright": "NARUTO GAIDEN -NANADAIME HOKAGE TO AKAIRO NO HANATSUZUKI- \u00a9 2015 by Masashi Kishimoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/414-SeriesHeaders_Naruto7thHokage_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1384-SeriesThumbnailsManga_Naruto7thHokage_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706810341, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 10, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 710.0, "chapter_last_num": 710.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/414-SeriesHeaders_Naruto7thHokage_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1384-SeriesThumbnailsManga_Naruto7thHokage_400x320.jpg", "label": null, "recommended_series_ids": "461,496,10,724,399,520,1,467", "latest_author": "Masashi Kishimoto", "title_sort": "naruto: the seventh hokage and the scarlet spring"}}, {"manga_series": {"id": 126, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 126, "device_id": 4, "keyart": "img/manga_series_header/126-SeriesHeaders_Psyren_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1291, "manga_imprint_id": 1, "title": "Psyren", "synopsis": "Ageha Yoshina just got transported to a warped alternate dimension where you've got to fight your way back to our world--or die trying.", "tagline": "Don\u2019t answer the phone unless you want to\u2026dial into DANGER!", "rating": "t", "vanityurl": "psyren", "copyright": "PSYREN \u00a9 2007 by Toshiaki Iwashiro/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/126-SeriesHeaders_Psyren_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560010, "has_gns": true, "num_gns": 16, "has_chapters": true, "num_chapters": 145, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 145.0, "chapter_last_num": 145.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/126-SeriesHeaders_Psyren_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/255-SeriesThumbnailsManga_PSY_400x320.jpg", "label": null, "recommended_series_ids": "466,627,1", "latest_author": "Toshiaki Iwashiro", "title_sort": "psyren"}}, {"manga_series": {"id": 477, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 477, "device_id": 4, "keyart": "img/manga_series_header/477-SeriesHeaders_RedSprite_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2236, "manga_imprint_id": 1, "title": "RED SPRITE", "synopsis": "Tatsu Frampt and his friends are quarantined in an orphanage in the militaristic nation of Edenia, believing they suffer from a disease that causes metal to grow in their hands. But an attack on the orphanage reveals the truth: the kids are living batteries.", "tagline": "An electric adventure like no other! Can Tatsu free an entire nation?! ", "rating": "t", "vanityurl": "red-sprite", "copyright": "RED SPRITE \u00a9 2016 by Tomohiro Yagi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/477-SeriesHeaders_RedSprite_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1616-WSJ_RedSprite_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560018, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 14, "num_chapters_free": 3, "chapter_latest_pub_date": 1560333570, "chapter_latest_num": 14.0, "chapter_last_num": 14.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/477-SeriesHeaders_RedSprite_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1616-WSJ_RedSprite_400x320.jpg", "label": null, "recommended_series_ids": "546,627,399,599,471", "latest_author": "Tomohiro Yagi", "title_sort": "red sprite"}}, {"manga_series": {"id": 78, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 78, "device_id": 4, "keyart": "img/manga_series_header/78-SeriesHeaders_RosarioVampire_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 832, "manga_imprint_id": 5, "title": "Rosario+Vampire", "synopsis": "All-around average teenager Tsukune can't get accepted to any high school save one...but on his first day, he finds the rest of the student body doesn't appear average in the least. Best of all, the cutest girl on campus can't wait to fling her arms around his neck! Wait a sec'--are those her teeth around his neck too...? Tsukune's going to have one heck of a hickey when he gets home from Monster High! But does he have a chance in H-E-double-hockey-sticks of raising his grades at a school where the turf war isn't between the jocks and the nerds but the vampires and the werewolves?", "tagline": "Love bites when monster girls compete for the affection of one average human guy!", "rating": "tp", "vanityurl": "rosario-vampire", "copyright": "ROSARIO TO VAMPIRE \u00a9 2004 by Akihisa Ikeda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/78-SeriesHeaders_RosarioVampire_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1672560009, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 40, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 40.0, "chapter_last_num": 40.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/78-SeriesHeaders_RosarioVampire_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/154-SeriesThumbnailsManga_Rosario_400x320.jpg", "label": null, "recommended_series_ids": "449,356,448,105,703,722,732,86", "latest_author": "Akihisa Ikeda", "title_sort": "rosario+vampire"}}, {"manga_series": {"id": 599, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 599, "device_id": 4, "keyart": "img/manga_series_header/599-050519_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2350, "manga_imprint_id": null, "title": "Samurai 8: The Tale of Hachimaru", "synopsis": "Becoming a samurai seems like an impossible dream for Hachimaru, a boy who can\u2019t even survive without the help of his father. But when a samurai cat appears before him, his whole life changes! A legendary creator and a rising manga star come together to bring you this science fiction samurai epic!", "tagline": "A new series written by Masashi Kishimoto, the creator of Naruto! With art by Akira Okubo! A futuristic tale of samurai adventure!", "rating": "t", "vanityurl": "samurai-8", "copyright": "SAMURAI 8 HACHIMARUDEN \u00a9 2019 by Masashi Kishimoto, Akira Okubo/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/599-050519_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/599-th-051219_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560020, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 44, "num_chapters_free": 4, "chapter_latest_pub_date": 1584892470, "chapter_latest_num": 43.0, "chapter_last_num": 43.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/599-050519_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/599-th-051219_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "448,461,546,466,694,1", "latest_author": "Story by Masashi Kishimoto, Art by Akira Okubo", "title_sort": "samurai 8: the tale of hachimaru"}}, {"manga_series": {"id": 235, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 235, "device_id": 4, "keyart": "img/manga_series_keyart/693-SandLand-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 864, "manga_imprint_id": 1, "title": "Sand Land", "synopsis": "In the far future, war has destroyed the entire Earth, leaving only a barren wasteland where the supply of water is controlled by the greedy king. In search of a long-lost lake, Sheriff Rao asked the king of the demons for help...and got the king's son, Beelzebub, and his assistant, Thief. Together the unlikely trio sets off across the desert, facing dragons, bandits and the deadliest foe of all... the King's army itself! It's travel adventure and tank action in this new story from Akira Toriyama, the creator of Dragon Ball Z!", "tagline": "A dustup in the desert with a demon on a destroyed Earth from the creator of Dragon Ball!", "rating": "a", "vanityurl": "sand-land", "copyright": "SAND LAND \u00a9 2000 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 14, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 14.0, "chapter_last_num": 14.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5733-Header_SandLand_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/169-SeriesThumbnailsManga_SLD__400x320.jpg", "label": null, "recommended_series_ids": "461,283,132,10,466,362", "latest_author": "Akira Toriyama", "title_sort": "sand land"}}, {"manga_series": {"id": 440, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 440, "device_id": 4, "keyart": "img/manga_series_keyart/1489-CWO15439_SeriesBricks_SchoolJudgement_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1969, "manga_imprint_id": 1, "title": "School Judgment", "synopsis": "At Tenbin Elementary, there is only one way to settle a dispute\u2014in a court of law! All quarrels bypass the teachers and are settled by some of the best lawyers in the country\u2026who also happen to be elementary school students.", "tagline": "At this school, there\u2019s only one way to settle a dispute\u2014in a court of law!", "rating": "t", "vanityurl": "school-judgment-gakkyu-hotei", "copyright": "GAKKYU HOTEI \u00a9 2014 by Nobuaki Enoki, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 22, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 22.0, "chapter_last_num": 22.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5347-SeriesHeaders_Tier01_SchoolJ_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/833-SeriesThumbManga_SchoolJ_400x320.jpg", "label": null, "recommended_series_ids": "7,9,79", "latest_author": "Story by Nobuaki Enoki, Art by Takeshi Obata", "title_sort": "school judgment"}}, {"manga_series": {"id": 625, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 625, "device_id": 4, "keyart": "img/manga_series_header/625-SJ_MagicScience_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "Science vs. Magic", "synopsis": "", "tagline": "Special one-shot! Drawn by One-Punch Man artist Yusuke Murata with story by Inukorosuke! A no-holds-barred fight between science and magic!", "rating": "t", "vanityurl": "science-vs-magic", "copyright": "KAGAKU TO MAHO NO KAKUTOKATACHI \u00a9 2019 by Inukorosuke, Yusuke Murata/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/625-SJ_MagicScience_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/625-th-SJ_MagicScience_NoTag_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1564343850, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/625-SJ_MagicScience_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/625-th-SJ_MagicScience_NoTag_400x320_jpg", "label": null, "recommended_series_ids": "496,694,627,249", "latest_author": "Story by Inukorosuke, Art by Yusuke Murata", "title_sort": "science vs. magic"}}, {"manga_series": {"id": 312, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 312, "device_id": 4, "keyart": "img/manga_series_keyart/1001-SeraphOfTheEnd-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1715, "manga_imprint_id": 5, "title": "Seraph of the End", "synopsis": "After trumpets of the apocalypse proclaim the fall of humanity, vampires arise from the shadows to rule the earth. Yuichiro wants just one thing\u2014to get revenge by killing each and every vampire.", "tagline": "In a post-apocalyptic world of vampires vs. humans, Yuichiro brings vengeance upon his vampire overlords!", "rating": "tp", "vanityurl": "seraph-of-the-end", "copyright": "OWARI NO SERAPH \u00a9 2012 by Takaya Kagami, Yamato Yamamoto, Daisuke Furuya /SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1707466343, "has_gns": true, "num_gns": 28, "has_chapters": true, "num_chapters": 134, "num_chapters_free": 6, "chapter_latest_pub_date": 1706799510, "chapter_latest_num": 134.0, "chapter_last_num": 134.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5395-SeriesHeader_Tier02_SPH_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/334-SeriesThumbnailsManga_SER_400x320.jpg", "label": null, "recommended_series_ids": "448,105,703,580,546,627,579,471", "latest_author": "Story by Takaya Kagami, Art by Yamato Yamamoto", "title_sort": "seraph of the end"}}, {"manga_series": {"id": 325, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 325, "device_id": 4, "keyart": "img/manga_series_header/325-SJ_StealthSymphony_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1801, "manga_imprint_id": 1, "title": "Stealth Symphony", "synopsis": "Jig Kumonuma bears a curious curse. Whenever others try to harm him, the\r\ndevice on his back returns the damage twofold, while Jig remains unscathed.\r\nFearful of harming others, Jig isolates himself from his family and the world\u2014\r\nuntil he hears word of a cure in the bustling city of Jinbo-cho.", "tagline": "A dark and dangerous world of dragons and assassins! ", "rating": "t", "vanityurl": "stealth-symphony", "copyright": "STEALTH SYMPHONY \u00a9 2014 by Ryohgo Narita, Yoichi Amano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/325-SJ_StealthSymphony_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/325-th-SJ_StealthSymphony_400x320_jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560019, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 20, "num_chapters_free": 3, "chapter_latest_pub_date": 1560333570, "chapter_latest_num": 20.0, "chapter_last_num": 20.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/325-SJ_StealthSymphony_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/325-th-SJ_StealthSymphony_400x320_jpg", "label": null, "recommended_series_ids": "8,581,540,627,632", "latest_author": "Story by Ryogo Harita, Art by Yoichi Amano", "title_sort": "stealth symphony"}}, {"manga_series": {"id": 125, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 125, "device_id": 4, "keyart": "img/manga_series_keyart/207-tegamibachi_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1072, "manga_imprint_id": 1, "title": "Tegami Bachi", "synopsis": "Amberground is locked in darkness. A man-made star casts only a dim light over the land. The pitch-black wilderness is infested with Gaichuu--colossal insects with metal exoskeletons. The Gaichuu make travel between the cities of Amberground extremely dangerous. But thankfully the Letter Bees, a brave corps of messengers, risk their lives in order to keep the hearts of Amberground connected.", "tagline": "A sci-fi fantasy series with heart.", "rating": "t", "vanityurl": "tegami-bachi", "copyright": "TEGAMIBACHI \u00a9 2006 by Hiroyuki Asada/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 20, "has_chapters": true, "num_chapters": 99, "num_chapters_free": 1, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 99.0, "chapter_last_num": 99.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5598-Tier07_Headers_TegamiBachi_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/205-SeriesThumbnailsManga_TEG_400x320.jpg", "label": null, "recommended_series_ids": "22,18,312", "latest_author": "Hiroyuki Asada", "title_sort": "tegami bachi"}}, {"manga_series": {"id": 590, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 590, "device_id": 4, "keyart": "img/manga_series_header/590-030319_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2338, "manga_imprint_id": null, "title": "The Last Saiyuki", "synopsis": "Her voice has the power to annihilate the world...", "tagline": "Her voice has the power to annihilate the world...", "rating": "t", "vanityurl": "the-last-saiyuki", "copyright": "SAIGO NO SAIYUKI \u00a9 2019 by Daijiro Nonoue/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/590-030319_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/590-th-030319_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 23, "num_chapters_free": 3, "chapter_latest_pub_date": 1566157950, "chapter_latest_num": 23.0, "chapter_last_num": 23.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/590-030319_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/590-th-030319_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "105,461,466,694,79", "latest_author": "Daijiro Nonoue", "title_sort": "last saiyuki"}}, {"manga_series": {"id": 332, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 332, "device_id": 4, "keyart": "img/manga_series_header/332-SeriesHeaders_TimeKillers_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1724, "manga_imprint_id": 1, "title": "Time Killers", "synopsis": "Explore fantastic realms of imagination in this stunning collection of short stories by Kazue Kato, creator of the smash-hit manga series Blue Exorcist! With Kato\u2019s amazing and distinctive art leaping from the page, Time Killers includes her first work, Boku to Usagi (Me and the Rabbit), and features the stories and character designs that would become her breakthrough series, Blue Exorcist. Take off on a flight of fantasy with Time Killers!", "tagline": "A collection of short stories by Kazue Kato, creator of the hit manga series, Blue Exorcist.", "rating": "tp", "vanityurl": "time-killers", "copyright": "TIME KILLERS KAZUE KATO TANPENSHU\u00a0\u00a9 2011 by\u00a0Kazue Kato", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/332-SeriesHeaders_TimeKillers_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 12, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 12.0, "chapter_last_num": 12.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/332-SeriesHeaders_TimeKillers_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/994-SeriesThumbnailsManga_TimeKillers_400x320.jpg", "label": null, "recommended_series_ids": "105,703", "latest_author": "Kazue Kato", "title_sort": "time killers"}}, {"manga_series": {"id": 605, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 605, "device_id": 4, "keyart": "img/manga_series_header/605-060219_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2358, "manga_imprint_id": null, "title": "Tokyo Shinobi Squad", "synopsis": "It is the year 2049. Tokyo has become the greatest center of crime in the world, and shinobi have come out into public view. As violence sweeps the underworld, Jin Narumi and his elite shinobi crew rescue the weak and destroy the wicked. A story of near-future sci-fi ninja action begins!", "tagline": "In a future lawless Tokyo, retribution is delivered by shinobi!", "rating": "t", "vanityurl": "tokyo-shinobi-squad", "copyright": "TOKYO SHINOBI SQUAD \u00a9 2019 by Yuki Tanaka, Kento Matsuura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/605-060219_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/605-th-WSJ_TokyoShinobiSquad_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 27, "num_chapters_free": 3, "chapter_latest_pub_date": 1575834750, "chapter_latest_num": 27.0, "chapter_last_num": 27.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/605-060219_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/605-th-WSJ_TokyoShinobiSquad_400x320.jpg", "label": null, "recommended_series_ids": "175,732,499,159", "latest_author": "Story by Yuki Tanaka, Art by Kento Matsuura", "title_sort": "tokyo shinobi squad"}}, {"manga_series": {"id": 23, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 23, "device_id": 4, "keyart": "img/manga_series_keyart/66-toriko_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1251, "manga_imprint_id": 1, "title": "Toriko", "synopsis": "In a savage world ruled by the pursuit of the most delicious foods, it's either eat or be eaten! While searching for the tastiest foods imaginable, Gourmet Hunter Toriko travels the world with his bottomless stomach, facing every beast in his way.", "tagline": "Toriko is a Gourmet Hunter out to eat the world!", "rating": "t", "vanityurl": "toriko", "copyright": "TORIKO \u00a9 2008 by Mitsutoshi Shimabukuro/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 43, "has_chapters": true, "num_chapters": 396, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 396.0, "chapter_last_num": 396.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5556-Tier06_SeriesHeaders_Toriko_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/244-SeriesThumbnailsManga_TOR_400x320.jpg", "label": null, "recommended_series_ids": "461,738,132,10,304", "latest_author": "Mitsutoshi Shimabukuro", "title_sort": "toriko"}}, {"manga_series": {"id": 594, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 594, "device_id": 4, "keyart": "img/manga_series_header/594-031019_Page_Header_2000x800_SERIES_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2339, "manga_imprint_id": null, "title": "Yui Kamio Lets Loose", "synopsis": "As a child, Yui Kamio terrorized everyone in her path. That is, until a monk imbued a hair tie with the ability to repress her powers, giving birth to two different Yuis. When her hair is tied, she\u2019s the model student Yui in White. When it\u2019s let loose, the wild delinquent Yui in Black grabs the reins!", "tagline": "The creator of Nura: Rise of the Yokai Clan, delivers a comedy that isn\u2019t afraid to let loose!", "rating": "t", "vanityurl": "yui-kamio-lets-loose", "copyright": "KAMIO YUI HA KAMI WO YUI \u00a9 2019 by Hiroshi Shiibashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/594-031019_Page_Header_2000x800_SERIES_wm.jpg", "link_img": "img/manga_series_link_img/594-th-031019_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 36, "num_chapters_free": 3, "chapter_latest_pub_date": 1574625210, "chapter_latest_num": 36.0, "chapter_last_num": 36.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/594-031019_Page_Header_2000x800_SERIES_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/594-th-031019_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "546,347,79,477", "latest_author": "Hiroshi Shiibashi", "title_sort": "yui kamio lets loose"}}, {"manga_series": {"id": 159, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 159, "device_id": 4, "keyart": "img/manga_series_keyart/309-zombiepowder_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 642, "manga_imprint_id": 1, "title": "ZOMBIEPOWDER.", "synopsis": "Somewhere in the desert lies the world's greatest treasure: the 12 Rings of the Dead, the only source of the mysterious substance Zombie Powder, which can raise the dead and grant eternal life. Into this world stalks Gamma Akutabi, a man with a metal arm and a six-foot chainsaw, cybernetically enhanced master of the legendary martial art . But it takes more than one man to find the ultimate prize. You need a team: super-gunman C.T. Smith, knife-slinging teenager Elwood, and brilliant (and impossibly big-breasted) journalist Wolfgangina. Against an army of crooks and killers, against runaway trains and superpowered madmen, they'll need all their skills...but the most dangerous thing in the west might be the Rings themselves... All volumes except the first also contain a bonus short story by Tite Kubo: Ultra Unholy Hearted Machine (vol. 2), Rune Master Urara (vol. 3), and Bad Shield United (vol. 4).", "tagline": "A team of super-skilled criminals roams a science-fiction Wild West, each with their own reason to hunt for the ultimate prize: the 12 Rings of the Dead, which can raise the dead and grant eternal life.", "rating": "tp", "vanityurl": "zombiepowder", "copyright": "ZOMBIEPOWDER. \u00a9 1999 by Tite Kubo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 26, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 26.0, "chapter_last_num": 26.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5938-SeriesHeaders_ZombiePowder_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/102-SeriesThumbnailsManga_ZombiePowder_v2_400x320.jpg", "label": null, "recommended_series_ids": "8,527,339,540,1,5,732,371", "latest_author": "Tite Kubo", "title_sort": "zombiepowder."}}, {"manga_series": {"id": 5, "updated_at": "2023-09-13T10:19:23.000-07:00", "manga_series_common_id": 5, "device_id": 4, "keyart": "img/manga_series_keyart/54-onepiece_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 630, "manga_imprint_id": 1, "title": "One Piece", "synopsis": "As a child, Monkey D. Luffy dreamed of becoming King of the Pirates. But his life changed when he accidentally gained the power to stretch like rubber\u2026at the cost of never being able to swim again! Years, later, Luffy sets off in search of the \"One Piece,\" said to be the greatest treasure in the world...", "tagline": "Join Monkey D. Luffy and his swashbuckling crew in their search for the ultimate treasure, the One Piece.", "rating": "t", "vanityurl": "one-piece", "copyright": "ONE PIECE \u00a9 1997 by Eiichiro Oda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707778267, "has_gns": true, "num_gns": 104, "has_chapters": true, "num_chapters": 1106, "num_chapters_free": 6, "chapter_latest_pub_date": 1707058738, "chapter_latest_num": 1106.0, "chapter_last_num": 1106.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5265-SeriesHeaders_OP_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/526-SeriesThumb_OP_400x320.png", "label": null, "recommended_series_ids": "496,80,647,724,694,520,624,739", "latest_author": "Eiichiro Oda", "title_sort": "one piece"}}, {"manga_series": {"id": 356, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 356, "device_id": 4, "keyart": "img/manga_series_keyart/1153-DecSeriesBricks_Assassination_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1776, "manga_imprint_id": 5, "title": "Assassination Classroom", "synopsis": "Ever caught yourself screaming, \"I could just kill that teacher\"?\r\n\r\nWhat would it take to justify such antisocial behavior and weeks of detention? Especially if he's the best teacher you've ever had? Giving you an \"F\" on a quiz? Mispronouncing your name during roll call...again? How about blowing up the moon and threatening to do the same to Mother Earth\u2014unless you take him out first?! Plus a reward of a cool 100 million from the Ministry of Defense!\r\n\r\nOkay, now that you're committed... How are you going to pull this off? What does your pathetic class of misfits have in their arsenal to combat Teach's alien technology, bizarre powers and...tentacles?!", "tagline": "It\u2019s a pathetic class of misfits versus their teacher\u2019s alien technology, bizarre powers and\u2026tentacles?!", "rating": "tp", "vanityurl": "assassination-classroom", "copyright": "ANSATSU KYOSHITSU \u00a9 2012 by Yusei Matsui/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1671133737, "has_gns": true, "num_gns": 21, "has_chapters": true, "num_chapters": 185, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 185.0, "chapter_last_num": 185.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5342-SeriesHeaders_Tier01_ASC_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/350-SeriesThumbnails_ASC__400x320.jpg", "label": null, "recommended_series_ids": "738,580,540,79,78,739,632,750", "latest_author": "Yusei Matsui", "title_sort": "assassination classroom"}}, {"manga_series": {"id": 714, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 714, "device_id": 4, "keyart": "img/manga_series_header/714-052420_Yugen_PageHeader_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "Yugen's All-Ghouls Homeroom", "synopsis": "", "tagline": "Special Scary One-Shot from the creator's of Food Wars! Shokugeki no Soma!", "rating": "tp", "vanityurl": "yugens-all-ghouls-homeroom", "copyright": "YUGEN TO JOREI GAKKYU \u00a9 2020 by Yuto Tsukuda, Shun Saeki/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/714-052420_Yugen_PageHeader_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/714-th-052420_Yugen_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 1, "chapter_latest_pub_date": 1590335790, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/714-052420_Yugen_PageHeader_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/714-th-052420_Yugen_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "580,304,540,732,750", "latest_author": "Story by Yuto Tsukuda, Art by Shun Saeki", "title_sort": "yugen's all-ghouls homeroom"}}, {"manga_series": {"id": 284, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 284, "device_id": 4, "keyart": "img/manga_series_keyart/889-MuhyoRoji-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 711, "manga_imprint_id": 1, "title": "Muhyo & Roji's Bureau of Supernatural Investigation", "synopsis": "Are you a victim of unwanted spirit possession? Is there a ghost you need sent up and away...or down to burn for all eternity? If the answer is yes, then you need Muhyo and Roji, experts in magic law. Serving justice to evil spirits is their specialty.", "tagline": "Exorcism Incorporated: Specialists in Supernatural Law Enforcement; No exorcism is too creepy or too small; Cleaning up the spirit world, one exorcism at a time.", "rating": "t", "vanityurl": "muhyo-and-rojis-bureau-of-supern", "copyright": "MUHYO TO ROZY NO MAHORITSU SODAN JIMUSHO \u00a9 2004 by Yoshiyuki Nishi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560014, "has_gns": true, "num_gns": 18, "has_chapters": true, "num_chapters": 156, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 156.0, "chapter_last_num": 156.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5934-SeriesHeaders_MuhyoRoji_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/124-SeriesThumbnailsManga_MRI_v2_400x320.jpg", "label": null, "recommended_series_ids": "448,105,703,751,79,732,198,125", "latest_author": "Yoshiyuki Nishi", "title_sort": "muhyo & roji's bureau of supernatural investigation"}}, {"manga_series": {"id": 648, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 648, "device_id": 4, "keyart": "img/manga_series_header/648-102719_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2257, "manga_imprint_id": null, "title": "Dr. STONE Reboot: Byakuya", "synopsis": "", "tagline": "Imagine waking to a world where every last human has been mysteriously turned to stone...", "rating": "t", "vanityurl": "dr-stone-reboot-byakuya", "copyright": "Dr. STONE REBOOT: BYAKUYA \u00a9 2019 by Riichiro Inagaki, Boichi/SHUEISHA  Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/648-102719_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/648-th-WSJ_DrStoneCreators_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1690385463, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 9, "num_chapters_free": 3, "chapter_latest_pub_date": 1577044410, "chapter_latest_num": 9.0, "chapter_last_num": 9.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/648-102719_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/648-th-WSJ_DrStoneCreators_400x320_jpg", "label": null, "recommended_series_ids": "461,546,496,466,126,23", "latest_author": "Original Series by Riichiro Inagaki and Boichi, Story and Art by Boichi", "title_sort": "dr. stone reboot: byakuya"}}, {"manga_series": {"id": 470, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 470, "device_id": 4, "keyart": "img/manga_series_keyart/1589-Astra_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2225, "manga_imprint_id": 1, "title": "Astra Lost in Space", "synopsis": "In the year 2063, interstellar space travel has become the norm. What sort of adventure awaits on the new frontier?", "tagline": "Can eight teenagers find their way home from 5,000 light-years away?", "rating": "t", "vanityurl": "astra-lost-in-space", "copyright": "KANATA NO ASTRA \u00a9 2016 by Kenta Shinohara/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/1588-WSJ_Astra_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 69, "num_chapters_free": 3, "chapter_latest_pub_date": 1514620770, "chapter_latest_num": 49.0, "chapter_last_num": 49.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5806-SeriesHeaders_Astra_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1588-WSJ_Astra_400x320.jpg", "label": null, "recommended_series_ids": "687,466,488,126,599,753,324", "latest_author": "Kenta Shinohara", "title_sort": "astra lost in space"}}, {"manga_series": {"id": 579, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 579, "device_id": 4, "keyart": "img/manga_series_header/579-SJMangaHeaders_RWBY_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2227, "manga_imprint_id": null, "title": "RWBY The Official Manga", "synopsis": "Monsters known as the Grimm are wreaking havoc on the world of Remnant. Ruby Rose seeks to become a Huntress, someone who eliminates the Grimm and protects the land. She enrolls at Beacon Academy, eager for the tests and combat challenges to come.", "tagline": "The official manga adaptation of the hit Rooster Teeth anime!", "rating": "t", "vanityurl": "rwby-the-official-manga", "copyright": "RWBY THE OFFICIAL MANGA \u00a9 2018 Rooster Teeth Productions, LLC  \u00a9 2018 by Bunta Kinami/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/579-SJMangaHeaders_RWBY_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/579-th-WSJ_RWBY_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1591721910, "chapter_latest_num": 19.0, "chapter_last_num": 19.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/579-SJMangaHeaders_RWBY_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/579-th-WSJ_RWBY_400x320.jpg", "label": null, "recommended_series_ids": "105,703,580,581,339,312,753", "latest_author": "Bunta Kunami", "title_sort": "rwby the official manga"}}, {"manga_series": {"id": 129, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 129, "device_id": 4, "keyart": "img/manga_series_keyart/219-pot_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 631, "manga_imprint_id": 1, "title": "The Prince of Tennis", "synopsis": "Four-time consecutive U.S. Junior tournament champ Ryoma Echizen comes to Seishun Academy to further his reign as The Prince of Tennis. His skill is matched only by his attitude--irking some but impressing all as he leads his team to the Nationals and beyond!", "tagline": "A tennis prodigy leads his club to victory at the national tournament.", "rating": "a", "vanityurl": "prince-of-tennis", "copyright": "THE PRINCE OF TENNIS \u00a9 1999 by Takeshi Konomi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1681844608, "has_gns": true, "num_gns": 42, "has_chapters": true, "num_chapters": 379, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 379.0, "chapter_last_num": 379.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6465-Header_PrinceofTennisManga_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/92-SeriesThumbnailsManga_PoT_400x320.jpg", "label": null, "recommended_series_ids": "604,223,450,454,755", "latest_author": "Takeshi Konomi", "title_sort": "prince of tennis"}}, {"manga_series": {"id": 604, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 604, "device_id": 4, "keyart": "img/manga_series_header/604-052619_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2357, "manga_imprint_id": null, "title": "Beast Children", "synopsis": "Sakura Shishigaya is the captain and only member of his middle school\u2019s rugby team. One day, he learns that his schoolmate Yukito is the son of his idol, the deceased rugby player \"The Beast\" Onotora Itsuki! Sakura relentlessly tries to get Yukito play rugby with him, but Yukito refuses. He says that if Sakura wants to play with him, he needs to go to a Hyakkengawa high school! But when Sakura gets there, Yukito isn\u2019t there! Instead, he finds a team started and funded by none other than Onotora Itsuki, \"The Beast\u2019s\" children.", "tagline": "Blood, guts and glory! Give it your all on the rugby field!", "rating": "t", "vanityurl": "beast-children", "copyright": "BEAST CHILDREN \u00a9 2019 by Kento Terasaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/604-052619_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/604-th-WSJ_BeastChildren_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 27, "num_chapters_free": 3, "chapter_latest_pub_date": 1575229950, "chapter_latest_num": 27.0, "chapter_last_num": 27.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/604-052619_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/604-th-WSJ_BeastChildren_400x320.jpg", "label": null, "recommended_series_ids": "470,223,450,454,755,499,129", "latest_author": "Kento Terasaka", "title_sort": "beast children"}}, {"manga_series": {"id": 684, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 684, "device_id": 4, "keyart": "img/manga_series_header/684-120119_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2388, "manga_imprint_id": null, "title": "Zipman!!", "synopsis": "Kaname Tatara is a 17-year-old high schooler with superhuman strength who has idolized the superhero Jackman ever since he was a kid. His twin younger brother Koshiro is a genius who founded his own robotics company. One day, Koshiro dies an a mysterous accident, but then reappears before Kaname\u2026as a robot!", "tagline": "Zip up and kick robot butt!", "rating": "t", "vanityurl": "zipman", "copyright": "ZIPMAN!! \u00a9 2019 by Yusaku Shibata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/684-120119_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/684-th-120819_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 17, "num_chapters_free": 3, "chapter_latest_pub_date": 1586102070, "chapter_latest_num": 17.0, "chapter_last_num": 17.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/684-120119_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/684-th-120819_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "738,466,694,739,23", "latest_author": "Yusaku Shibata", "title_sort": "zipman!!"}}, {"manga_series": {"id": 611, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 611, "device_id": 4, "keyart": "img/manga_series_header/611-SeriesHeaders_MHSmash_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: Smash!!", "synopsis": "The superpowered society of My Hero Academia takes a hilarious turn in this reimagining of the best-selling series! Join Midoriya, All Might and all the aspiring heroes of U.A. High, plus memorable villains, in an irreverent take on the main events of the series, complete with funny gags, ridiculous jokes and superpowered humor!", "tagline": "Hilarious hijinks featuring the characters and story lines of My Hero Academia!", "rating": "t", "vanityurl": "my-hero-academia-smash", "copyright": "BOKU NO HERO ACADEMIA SMASH!! \u00a9 2015 by Kohei Horikoshi, Hirofumi Neda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/611-SeriesHeaders_MHSmash_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/611-th-SeriesThumbnailsManga_MHASmash_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1688580381, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 94, "num_chapters_free": 3, "chapter_latest_pub_date": 1596265170, "chapter_latest_num": 94.0, "chapter_last_num": 94.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/611-SeriesHeaders_MHSmash_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/611-th-SeriesThumbnailsManga_MHASmash_400x320_jpg", "label": null, "recommended_series_ids": "175,461,496,10,446,717,721", "latest_author": "Hirofumi Neda", "title_sort": "my hero academia: smash!!"}}, {"manga_series": {"id": 727, "updated_at": "2021-03-29T16:04:36.000-07:00", "manga_series_common_id": 727, "device_id": 4, "keyart": "img/manga_series_keyart/2469-Real_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 862, "manga_imprint_id": null, "title": "Real", "synopsis": "Critically acclaimed, award-winning manga artist Takehiko Inoue doesn\u2019t pull any punches in this stunning portrayal of people struggling with serious life issues. Masterfully combining rich character development with beautifully detailed line art, Inoue, the creator of the mega-hit masterpieces Slam Dunk and Vagabond, lifts the manga medium to a completely new level of storytelling.", "tagline": "A tale of triumph over adversity through wheelchair basketball, by Eisner Award nominee Takehiko Inoue.", "rating": "tp", "vanityurl": "real", "copyright": "\u00a9 1999, 2001, 2021 by Takehiko Inoue and I.T. Planning, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1679384141, "has_gns": true, "num_gns": 15, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5555-Tier05_SeriesHeaders_Real_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/168-SeriesThumbnailsManga_Real_400x320.jpg", "label": null, "recommended_series_ids": "454", "latest_author": "Takehiko Inoue", "title_sort": "real"}}, {"manga_series": {"id": 499, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 499, "device_id": 4, "keyart": "img/manga_series_header/499-SeriesHeaders_RobotLaserbeam_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2256, "manga_imprint_id": 1, "title": "ROBOT\u00d7LASERBEAM", "synopsis": "Robato Hatohara, a stupidly serious, creepily thorough and socially clueless high school boy, appears to have no interest in anything\u2014including joining his friend Tomoya in the golf club. But when it\u2019s discovered that Robo\u2019s perfect accuracy and calculations enable him to golf like a practiced professional, will he be able to escape playing golf?", "tagline": "The latest from Tadatoshi Fujimaki, creator of Kuroko's Basketball! ", "rating": "t", "vanityurl": "robot-laserbeam", "copyright": "ROBOT\u00d7LASERBEAM \u00a9 2017 by Tadatoshi Fujimaki/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/499-SeriesHeaders_RobotLaserbeam_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1708-WSJ_RobotLaserbeam_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560018, "has_gns": true, "num_gns": 7, "has_chapters": true, "num_chapters": 62, "num_chapters_free": 3, "chapter_latest_pub_date": 1614067170, "chapter_latest_num": 62.0, "chapter_last_num": 62.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/499-SeriesHeaders_RobotLaserbeam_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1708-WSJ_RobotLaserbeam_400x320.jpg", "label": null, "recommended_series_ids": "604,757,223,450,454", "latest_author": "Tadatoshi Fujimaki", "title_sort": "robot\u00d7laserbeam"}}, {"manga_series": {"id": 519, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 519, "device_id": 4, "keyart": "img/manga_series_header/519-SeriesHeaders_TKGre_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1918, "manga_imprint_id": 4, "title": "Tokyo Ghoul: re", "synopsis": "The Commission of Counter Ghoul is the only organization fighting the Ghoul menace, and they will use every tool at their disposal to protect humanity from its ultimate predator. Their newest weapon in this hidden war is an experimental procedure that implants human investigators with a Ghoul\u2019s Kagune, giving them Ghoul powers and abilities. But both the procedure and the newly formed Qs Squad are untested. Will they become heroes\u2026or monsters?!", "tagline": "Ghouls live among us, the same as normal people in every way\u2014except for their craving for human flesh. ", "rating": "tp", "vanityurl": "tokyo-ghoul-re", "copyright": "TOKYO GHOUL:RE \u00a9 2014 by Sui Ishida/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/519-SeriesHeaders_TKGre_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/519-th-SeriesThumbnailsManga_TokyoGhoulRe_400x320.jpg", "subscription_type": "sj", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1677484819, "has_gns": true, "num_gns": 16, "has_chapters": true, "num_chapters": 179, "num_chapters_free": 3, "chapter_latest_pub_date": 1586088450, "chapter_latest_num": 154.0, "chapter_last_num": 179.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/519-SeriesHeaders_TKGre_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/519-th-SeriesThumbnailsManga_TokyoGhoulRe_400x320.jpg", "label": null, "recommended_series_ids": "8,763,722,498,730,451,471,371", "latest_author": "Sui Ishida", "title_sort": "tokyo ghoul: re"}}, {"manga_series": {"id": 371, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 371, "device_id": 4, "keyart": "img/manga_series_keyart/1213-CWO15014_TokyoGhoul_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1918, "manga_imprint_id": null, "title": "Tokyo Ghoul", "synopsis": "Ghouls live among us, the same as normal people in every way\u2014except their craving for human flesh.\r\n\r\nKen Kaneki is an ordinary college student until a violent encounter turns him into the first half-human half-ghoul hybrid. Trapped between two worlds, he must survive Ghoul turf wars, learn more about Ghoul society and master his new powers.", "tagline": "Ghouls live among us, the same as normal people in every way\u2014except for their craving for human flesh.", "rating": "tp", "vanityurl": "tokyo-ghoul", "copyright": "TOKYO GHOUL \u00a9 2011 by Sui Ishida/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1703105269, "has_gns": true, "num_gns": 14, "has_chapters": true, "num_chapters": 143, "num_chapters_free": 3, "chapter_latest_pub_date": 1562752770, "chapter_latest_num": 143.0, "chapter_last_num": 143.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5319-SeriesHeaders_TKG_2000x800_REV_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/528-SeriesThumb_TKG_400x320.png", "label": null, "recommended_series_ids": "580,763,9,722,730,451,471,519", "latest_author": "Sui Ishida", "title_sort": "tokyo ghoul"}}, {"manga_series": {"id": 376, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 376, "device_id": 4, "keyart": "img/manga_series_header/376-SeriesHeaders_JoJoPart02_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": 5, "title": "JoJo's Bizarre Adventure: Part 2--Battle Tendency", "synopsis": "JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles. A multigenerational tale of the heroic Joestar family and their never-ending battle against evil!  ", "tagline": "The terror of the Pillar Men is unleashed! Can Joseph Joestar quell this evil?", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-two", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by Hirohiko Araki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/376-SeriesHeaders_JoJoPart02_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1232-SeriesThumbnailsManga_JoJoPart02_400x320.jpg", "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1699998923, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 69, "num_chapters_free": 3, "chapter_latest_pub_date": 1556783970, "chapter_latest_num": 69.0, "chapter_last_num": 69.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/376-SeriesHeaders_JoJoPart02_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1232-SeriesThumbnailsManga_JoJoPart02_400x320.jpg", "label": null, "recommended_series_ids": "22,10,339,469,596,753", "latest_author": "Hirohiko Araki", "title_sort": "jojo's bizarre adventure: part 2--battle tendency"}}, {"manga_series": {"id": 596, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 596, "device_id": 4, "keyart": "img/manga_series_header/596-jojo4_1024_410.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": null, "title": "JoJo\u2019s Bizarre Adventure: Part 4--Diamond Is Unbreakable", "synopsis": "The legendary Shonen Jump series is now available in deluxe hardcover editions featuring color pages! JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles.", "tagline": "There\u2019s a killer on the loose in Morioh, and Josuke and his friends are on the hunt!", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-4-diamond-is-unbreakable", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by LUCKY LAND COMMUNICATIONS/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/596-jojo4_1024_410.jpg", "link_img": "img/manga_series_link_img/596-th-EEEF6C76-3EA7-42A5-B717-2EF30F3F152F.jpeg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699998923, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 174, "num_chapters_free": 3, "chapter_latest_pub_date": 1621321170, "chapter_latest_num": 174.0, "chapter_last_num": 174.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/596-jojo4_1024_410.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/596-th-EEEF6C76-3EA7-42A5-B717-2EF30F3F152F.jpeg", "label": null, "recommended_series_ids": "22,10,339,376,469", "latest_author": "Hirohiko Araki", "title_sort": "jojo\u2019s bizarre adventure: part 4--diamond is unbreakable"}}, {"manga_series": {"id": 583, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 583, "device_id": 4, "keyart": "img/manga_series_header/583-SeriesHeader_Neolation_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2328, "manga_imprint_id": null, "title": "ne0;lation", "synopsis": "Daigo Minai only has two goals\u2014helping his sister pay off their late parents\u2019 debt and graduating high school. But when he meets Arata One, a computer genius with an IQ of 191 and a penchant for punishing criminals, he gets saddled with a third\u2014using his muscle to help One achieve his dream of one day ruling the city as the wizard-level hacker \u201cne0\u201d by taking down one criminal at a time.", "tagline": "A technical delinquent and a regular delinquent take over the Japanese criminal underworld!", "rating": "t", "vanityurl": "ne0lation", "copyright": "NE0;LATION \u00a9 2018 by Tomohide Hirao, Mizuki Yoda/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/583-SeriesHeader_Neolation_2000x800.jpg", "link_img": "img/manga_series_link_img/583-th-WSJ__ne0;lation_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1702330300, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1556308530, "chapter_latest_num": 19.0, "chapter_last_num": 19.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/583-SeriesHeader_Neolation_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/583-th-WSJ__ne0;lation_400x320.jpg", "label": null, "recommended_series_ids": "105,496,627,632,325,393", "latest_author": "Story by Tomohide Hirao, Art by Mizuki Yoda", "title_sort": "ne0;lation"}}, {"manga_series": {"id": 492, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 492, "device_id": 4, "keyart": "img/manga_series_header/492-SeriesHeaders_WeNeverLearn_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2258, "manga_imprint_id": 1, "title": "We Never Learn", "synopsis": "Nariyuki Yuiga comes from an impoverished family, so he\u2019s eager to secure a full scholarship to college before he graduates high school. His principal agrees, with one stipulation\u2014he must tutor the two smartest girls at school and make sure they get into their target colleges!", "tagline": "When studious Nariyuki tutors two supergeniuses who are total dunces in their favorite subjects, he\u2019ll get a crash course in love!", "rating": "t", "vanityurl": "we-never-learn", "copyright": "BOKUTACHI WA BENKYOU GA DEKINAI \u00a9 2017 by Taishi Tsutsui/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/492-SeriesHeaders_WeNeverLearn_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1676-WSJ_WeNeverLearn_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 21, "has_chapters": true, "num_chapters": 187, "num_chapters_free": 3, "chapter_latest_pub_date": 1608479550, "chapter_latest_num": 187.0, "chapter_last_num": 187.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/492-SeriesHeaders_WeNeverLearn_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1676-WSJ_WeNeverLearn_400x320.jpg", "label": null, "recommended_series_ids": "702,311,546,450,751,180", "latest_author": "Taishi Tsutsui", "title_sort": "we never learn"}}, {"manga_series": {"id": 546, "updated_at": "2023-05-30T11:20:12.000-07:00", "manga_series_common_id": 546, "device_id": 4, "keyart": "img/manga_series_keyart/1865-DemonSlayer_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2267, "manga_imprint_id": null, "title": "Demon Slayer: Kimetsu no Yaiba", "synopsis": "In Taisho-era Japan, Tanjiro Kamado is a kindhearted boy who makes a living selling charcoal. But his peaceful life is shattered when a demon slaughters his entire family. His little sister Nezuko is the only survivor, but she has been transformed into a demon herself! Tanjiro sets out on a dangerous journey to find a way to return his sister to normal and destroy the demon who ruined his life.", "tagline": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "rating": "t", "vanityurl": "demon-slayer-kimetsu-no-yaiba", "copyright": "KIMETSU NO YAIBA \u00a9 2016 by Koyoharu Gotouge/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705537557, "has_gns": true, "num_gns": 24, "has_chapters": true, "num_chapters": 206, "num_chapters_free": 3, "chapter_latest_pub_date": 1601827050, "chapter_latest_num": 205.1, "chapter_last_num": 205.1, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5945-SeriesHeaders_DemonSlayer_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1880-SeriesThumbnailsManga_DemonSlayer_400x320.jpg", "label": null, "recommended_series_ids": "8,105,461,722,540,694,781,371", "latest_author": "Koyoharu Gotouge", "title_sort": "demon slayer: kimetsu no yaiba"}}, {"manga_series": {"id": 105, "updated_at": "2024-02-08T17:16:30.000-08:00", "manga_series_common_id": 105, "device_id": 4, "keyart": "img/manga_series_keyart/103-blue_exorcist_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1413, "manga_imprint_id": 5, "title": "Blue Exorcist", "synopsis": "Raised by Father Fujimoto, a famous exorcist, Rin Okumura never knew his real father. One day a fateful argument with Father Fujimoto forces Rin to face a terrible truth\u2014the blood of the demon lord Satan runs in Rin\u2019s veins! Rin swears to defeat Satan, but doing that means entering the mysterious True Cross Academy and becoming an exorcist himself. Can Rin fight demons and keep his infernal bloodline a secret? It won't be easy, especially when drawing his father\u2019s sword releases the demonic power within him!", "tagline": "Rin and his exorcist classmates are caught in a secret war against the forces of darkness. ", "rating": "tp", "vanityurl": "blue-exorcist", "copyright": "AO NO EXORCIST \u00a9 2009 by Kazue Kato/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1707724813, "has_gns": true, "num_gns": 28, "has_chapters": true, "num_chapters": 152, "num_chapters_free": 6, "chapter_latest_pub_date": 1706799538, "chapter_latest_num": 148.0, "chapter_last_num": 148.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5392-SeriesHeader_Tier02_BEX_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/278-SeriesThumbnailsManga_BEX_400x320.jpg", "label": null, "recommended_series_ids": "8,546,722,540,732,312,781,371", "latest_author": "Kazue Kato", "title_sort": "blue exorcist"}}, {"manga_series": {"id": 175, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 175, "device_id": 4, "keyart": "img/manga_series_keyart/470-Barrage-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1572, "manga_imprint_id": 1, "title": "Barrage", "synopsis": "Fresh from SJ Alpha comes an action-packed reimagining of The Prince and the Pauper! Spunky slum kid Astro gets the chance of a lifetime to end the chaos ripping apart his home planet when the playboy prince switches places with him. Now Astro has become Prince Barrage, a boy charged with the duty of restoring peace to the planet\u2026and given an all-powerful magical spear to do it!\r\n", "tagline": "From the creator of My Hero Academia, an action-packed reimagining of The Prince and the Pauper.", "rating": "t", "vanityurl": "barrage", "copyright": "SENSEI NO BARRAGE \u00a9 2012 by Kouhei Horikoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1702947312, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 16, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 16.0, "chapter_last_num": 16.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5929-SeriesHeaders_Barrage_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/293-SeriesThumbnailsManga_Barrage_400x320.jpg", "label": null, "recommended_series_ids": "470,466,399,520,180,599", "latest_author": "Kouhei Horikoshi", "title_sort": "barrage"}}, {"manga_series": {"id": 198, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 198, "device_id": 4, "keyart": "img/manga_series_keyart/565-Takamagahara-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1598, "manga_imprint_id": 1, "title": "Takama-ga-hara", "synopsis": "What if the Japanese legends are true, and humans are descended from gods? What if all humans contain the potential for amazing, god-like powers? And what if you were one of the rare humans whose powers actually awakened?", "tagline": "A normal student just wants to be a manga artist, but everybody wants to fight him!", "rating": "tp", "vanityurl": "takama-ga-hara", "copyright": "TAKAMAGAHARA \u00a9 2012 by Jyuuzou Kawai/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560011, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 17, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 17.0, "chapter_last_num": 17.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5936-SeriesHeaders_Takamagahara_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/600-SeriesThumbnailsManga_Takama_v2_400x320.jpg", "label": null, "recommended_series_ids": "356,461,284,249", "latest_author": "Jyuuzou Kawai", "title_sort": "takama-ga-hara"}}, {"manga_series": {"id": 223, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 223, "device_id": 4, "keyart": "645-CrossManage-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1575, "manga_imprint_id": 1, "title": "Cross Manage", "synopsis": "Talented but aimless Sakurai just can\u2019t find a place to belong. After trying (and failing at) one extracurricular activity after another, his life changes thanks to a chance encounter with lacrosse fanatic Toyoguchi, who thinks Sakurai has just what it takes to propel her girls\u2019 lacrosse team to victory!", "tagline": "Toyoguchi will stop at nothing to recruit Sakurai to manage the girls\u2019 lacrosse team.", "rating": "t", "vanityurl": "cross-manage", "copyright": "CROSS MANAGE \u00a9 2012 by KAITO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560011, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 43, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 43.0, "chapter_last_num": 43.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5930-SeriesHeaders_CrossManage_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/599-SeriesThumbnailsManga_CXM__400x320.jpg", "label": null, "recommended_series_ids": "757,702,450,454,755,499", "latest_author": "KAITO", "title_sort": "cross manage"}}, {"manga_series": {"id": 232, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 232, "device_id": 4, "keyart": "img/manga_series_header/232-SeriesHeaders_KenshinRestoration_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 595, "manga_imprint_id": 1, "title": "Rurouni Kenshin: Restoration", "synopsis": "During the violent upheaval of the Bakumatsu era, Hitokiri Battosai was a feared and ruthless assassin. But now that the Meiji Restoration has begun to heal the wounds of civil war, Battosai has taken up a new name\u2026and a new calling! He is now Himura Kenshin , a rurouni wanderer who has vowed to only draw his sword to protect those in need.", "tagline": "Enemies from Kenshin\u2019s dark past have vowed to bring him down!", "rating": "t", "vanityurl": "rurouni-kenshin-restoration", "copyright": "RUROUNI KENSHIN \u00a9 1994 by Nobuhiro Watsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/232-SeriesHeaders_KenshinRestoration_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/680-SeriesThumbnailsManga_RKenshinRestoration_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 10, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 10.0, "chapter_last_num": 10.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/232-SeriesHeaders_KenshinRestoration_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/680-SeriesThumbnailsManga_RKenshinRestoration_400x320.jpg", "label": null, "recommended_series_ids": "8,123,498,240,467,414,750", "latest_author": "Nobuhiro Watsuki", "title_sort": "rurouni kenshin: restoration"}}, {"manga_series": {"id": 256, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 256, "device_id": 4, "keyart": "img/manga_series_header/256-MangaHeaders_YGODuelist_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh!: Duelist", "synopsis": "In the second saga of the Yu-Gi-Oh! epic, Duel Monsters is the world's most popular collectible card game-but to Yugi, it's the most dangerous game of all! Entering the Duel Monsters world championship, Yugi fights ruthless opponents like game designer Maximillion Pegasus and teenage multimillionaire Kaiba Seto, hoping to discover the origin of the game...and his own powers! Contains the original storyline of the first season of Yu-Gi-Oh!, including scenes too startling for TV!", "tagline": "The second saga of the Yu-Gi-Oh! epic!", "rating": "t", "vanityurl": "yu-gi-oh-duelist", "copyright": "YU-GI-OH! \u00a9 1996 by Kazuki Takahashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/256-MangaHeaders_YGODuelist_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/256-th-SeriesThumbnailsManga_YGODuelist_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 24, "has_chapters": true, "num_chapters": 219, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 219.0, "chapter_last_num": 219.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/256-MangaHeaders_YGODuelist_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/256-th-SeriesThumbnailsManga_YGODuelist_400x320.jpg", "label": null, "recommended_series_ids": "461,496,10,1,248,326,158,286", "latest_author": "Kazuki Takahashi", "title_sort": "yu-gi-oh!: duelist"}}, {"manga_series": {"id": 158, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 158, "device_id": 4, "keyart": "img/manga_series_header/158-SeriesHeaders_YGOZexal_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! Zexal", "synopsis": "In a futuristic city, augmented reality Duels are all the rage. Duelists, using devices called D-Gazers, can interact with their environment and their opponents as never before. With more awesome monsters and unbelievable cards, the future of Yu-Gi-Oh! starts right here!", "tagline": "In a futuristic city, augmented reality Duels are all the rage!", "rating": "t", "vanityurl": "yu-gi-oh-zexal", "copyright": "YU-GI-OH! ZEXAL \u00a9\u00a02010 by Kazuki Takahashi, Shin Yoshida, Naohito Miyoshi/SHUEISHA Inc. \u00a9\u00a0K. Takahashi \u00a9\u00a0NAS\u30fbTV TOKYO", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/158-SeriesHeaders_YGOZexal_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/306-SeriesThumbnailsManga_YGOZexal_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 55, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 55.0, "chapter_last_num": 55.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/158-SeriesHeaders_YGOZexal_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/306-SeriesThumbnailsManga_YGOZexal_400x320.jpg", "label": null, "recommended_series_ids": "80,611,467,414,128,247,256,286", "latest_author": "Story by Shin Yoshida, Art by Naohito Miyoshi", "title_sort": "yu-gi-oh! zexal"}}, {"manga_series": {"id": 286, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 286, "device_id": 4, "keyart": "img/manga_series_header/286-MangaHeaders_YGOMillennium_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh!: Millennium World", "synopsis": "The final saga of the Yu-Gi-Oh! epic! After many deadly duels, Yugi has collected the three Egyptian God Cards, the key to remembering his own past life as an Egyptian pharaoh. When the cards take Yugi's soul back in time, can he defeat the villains of the past and achieve his ultimate destiny?", "tagline": "In the final saga of the Yu-Gi-Oh! epic, Yugi travels to ancient Egypt!", "rating": "t", "vanityurl": "yu-gi-oh-millennium-world", "copyright": "YU-GI-OH! \u00a9 1996 by Kazuki Takahashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/286-MangaHeaders_YGOMillennium_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/286-th-SeriesThumbnailsManga_YGOMillennium_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 7, "has_chapters": true, "num_chapters": 66, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 66.0, "chapter_last_num": 66.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/286-MangaHeaders_YGOMillennium_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/286-th-SeriesThumbnailsManga_YGOMillennium_400x320.jpg", "label": null, "recommended_series_ids": "466,566,520,1,248,133,326,128", "latest_author": "Kazuki Takahashi", "title_sort": "yu-gi-oh!: millennium world"}}, {"manga_series": {"id": 86, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 86, "device_id": 4, "keyart": "img/manga_series_header/86-SeriesHeaders_RosarioVampireSeason2_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 832, "manga_imprint_id": 5, "title": "Rosario+Vampire: Season II", "synopsis": "Average human teenager Tsukune accidentally enrolls at a boarding school for monsters--no, not jocks and popular kids, but bona fide werewolves, witches and unnameables out of his wildest nightmares! On the plus side, all the girls have a monster crush on him. On the negative side, all the boys are so jealous they want to kill him! And so do the girls he spurns, because he only has eyes for one of them--the far-from-average vampire Moka. On the plus side, Moka only has glowing red eyes for Tsukune. On the O-negative side, she also has a burning, unquenchable thirst for his blood...", "tagline": "An action-packed romantic comedy chock-full of monsters and cute girls in bikinis.", "rating": "tp", "vanityurl": "rosario-vampire-season-ii", "copyright": "ROSARIO TO VAMPIRE SEASON II \u00a9 2007 by Akihisa Ikeda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/86-SeriesHeaders_RosarioVampireSeason2_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/151-SeriesThumbnailsManga_RosarioVampire2_400x320.jpg", "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1676409616, "has_gns": true, "num_gns": 14, "has_chapters": true, "num_chapters": 66, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 66.0, "chapter_last_num": 66.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/86-SeriesHeaders_RosarioVampireSeason2_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/151-SeriesThumbnailsManga_RosarioVampire2_400x320.jpg", "label": null, "recommended_series_ids": "449,356,448,703,722,732,78", "latest_author": "Akihisa Ikeda", "title_sort": "rosario+vampire: season ii"}}, {"manga_series": {"id": 240, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 240, "device_id": 4, "keyart": "img/manga_series_keyart/713-GunBlazeWest-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 797, "manga_imprint_id": 5, "title": "Gun Blaze West", "synopsis": "In the Old West only the strong survive. Viu Bannes is a boy on a mission to be the best gunfighter in the West. When Viu meets a vagabond gunslinger named Marcus Homer, his desire to be the best becomes even stronger. He knows it's his destiny to travel to the legendary land known as Gun Blaze West--where only the toughest gunmen dare set foot!", "tagline": "In the Old West, only the strong survive.", "rating": "tp", "vanityurl": "gun-blaze-west", "copyright": "GUN BLAZE WEST \u00a9 2000 by Nobuhiro Watsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 28, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 27.0, "chapter_last_num": 28.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5931-SeriesHeaders_GunBlazeWest_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/148-SeriesThumbnailsManga_GunBlazeWest_400x320.jpg", "label": null, "recommended_series_ids": "448,461,123,14", "latest_author": "Nobuhiro Watsuki", "title_sort": "gun blaze west"}}, {"manga_series": {"id": 79, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 79, "device_id": 4, "keyart": "img/manga_series_header/79-SeriesHeaders_Nura_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1350, "manga_imprint_id": 1, "title": "Nura: Rise of the Yokai Clan", "synopsis": "While the day belongs to humans, the night belongs to yokai, supernatural creatures that thrive on human fear. Caught between these worlds is Rikuo Nura. He's three-quarters human, but his grandfather is none other than Nurarihyon, the supreme commander of the Nura clan, a powerful yokai consortium. So, Rikuo is an ordinary teenager three quarters of the time, until his yokai blood awakens. Then Rikuo transforms into the future leader of the Nura clan, leading a hundred demons.", "tagline": "The supernatural saga of a normal teenager by day, reluctant leader of a demon clan by night.", "rating": "t", "vanityurl": "nura-rise-of-the-yokai-clan", "copyright": "NURARIHYON NO MAGO \u00a9 2008 by Hiroshi Shiibashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/79-SeriesHeaders_Nura_v2_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560008, "has_gns": true, "num_gns": 25, "has_chapters": true, "num_chapters": 210, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 210.0, "chapter_last_num": 210.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/79-SeriesHeaders_Nura_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/270-SeriesThumbnailsManga_NUR_400x320.jpg", "label": null, "recommended_series_ids": "8,461,722,1,790,371", "latest_author": "Hiroshi Shiibashi", "title_sort": "nura: rise of the yokai clan"}}, {"manga_series": {"id": 739, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 739, "device_id": 4, "keyart": "img/manga_series_header/739-112220_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2422, "manga_imprint_id": null, "title": "Sakamoto Days", "synopsis": "Taro Sakamoto was once a legendary hit man considered the greatest of all time. Bad guys feared him! Assassins revered him! But then one day he quit, got married, and had a baby. He\u2019s now living the quiet life as the owner of a neighborhood store, but how long can Sakamoto enjoy his days of retirement before his past catches up to him?!", "tagline": "Kill some time with former hit man Taro Sakamoto!", "rating": "tp", "vanityurl": "sakamoto-days", "copyright": "SAKAMOTO DAYS \u00a9 2020 by Yuto Suzuki/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/739-112220_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/739-th-112220_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663629, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 154, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663536, "chapter_latest_num": 154.0, "chapter_last_num": 154.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/739-112220_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/739-th-112220_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "718,724,694,627,632", "latest_author": "Yuto Suzuki", "title_sort": "sakamoto days"}}, {"manga_series": {"id": 647, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 647, "device_id": 4, "keyart": "img/manga_series_header/647-101319_shokugekinosanji_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "Food Wars!: Shokugeki no Sanji", "synopsis": "", "tagline": "The Food Wars! creative team cooks up their take on One Piece with this limited series!", "rating": "tp", "vanityurl": "shokugeki-no-sanji", "copyright": "SHOKUGEKI NO SANJI \u00a9 2018 by Yuto Tsukuda, Shun Saeki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/647-101319_shokugekinosanji_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/647-th-101319_shokugekinosanji_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 0, "chapter_latest_pub_date": 1658674738, "chapter_latest_num": 6.0, "chapter_last_num": 6.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/647-101319_shokugekinosanji_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/647-th-101319_shokugekinosanji_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "580,700,496,304,450,339,694,632", "latest_author": "Story by Yuto Tsukuda, Art by Shun Saeki, Based on Eiichiro Oda's ONE PIECE", "title_sort": "food wars!: shokugeki no sanji"}}, {"manga_series": {"id": 7, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 7, "device_id": 4, "keyart": "img/manga_series_keyart/36-bakuman_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1253, "manga_imprint_id": 1, "title": "Bakuman\u3002", "synopsis": "Average student Moritaka Mashiro enjoys drawing for fun. When his classmate and aspiring writer Akito Takagi discovers his talent, he begs Moritaka to team up with him as a manga-creating duo. But what exactly does it take to make it in the manga-publishing world?", "tagline": "By the creators of Death Note! The mystery behind manga making revealed! ", "rating": "t", "vanityurl": "bakuman", "copyright": "BAKUMAN\u3002\u00a9 2008 by Tsugumi Ohba, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560009, "has_gns": true, "num_gns": 20, "has_chapters": true, "num_chapters": 176, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 176.0, "chapter_last_num": 176.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5487-Tier04_SeriesHeaders_BAK_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/245-SeriesThumbnailsManga_BAK_400x320.jpg", "label": null, "recommended_series_ids": "9,130,454,791,451,258,552,712", "latest_author": "Story by Tsugumi Ohba, Art by Takeshi Obata", "title_sort": "bakuman\u3002"}}, {"manga_series": {"id": 712, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 712, "device_id": 4, "keyart": "img/manga_series_header/712-051720_SJBanners_PageHeader_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2399, "manga_imprint_id": null, "title": "Time Paradox Ghostwriter", "synopsis": "A struggling manga artist is about to give up on his dreams until lightning strikes and his destiny is forever changed. What would you do if you found an issue of Shonen Jump from ten years in the future in your microwave?\r\n", "tagline": "The future of Shonen Jump manga is here! Literally! In the microwave!", "rating": "t", "vanityurl": "time-paradox-ghostwriter", "copyright": "TIME PARADOX GHOSTWRITER \u00a9 2020 by Kenji Ichima, Tsunehiro Date/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/712-051720_SJBanners_PageHeader_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/712-th-051720_SJBanners_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560022, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 14, "num_chapters_free": 3, "chapter_latest_pub_date": 1598802750, "chapter_latest_num": 14.0, "chapter_last_num": 14.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/712-051720_SJBanners_PageHeader_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/712-th-051720_SJBanners_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "7,496,791,632,552", "latest_author": "Story by Kenji Ichima, Art by Tsunehiro Date", "title_sort": "time paradox ghostwriter"}}, {"manga_series": {"id": 552, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 552, "device_id": 4, "keyart": "img/manga_series_header/552-SJ_RightWayToMakeJump_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2294, "manga_imprint_id": null, "title": "The Right Way to Make Jump!", "synopsis": "Join a self-professed inept manga artist and his editor as they go on an adventure to learn just how Weekly Shonen Jump is made. Shonen Jump is the world\u2019s most popular manga magazine and the birthplace of classics like Dragon Ball, Naruto and One Piece. But how did it become so successful? This duo will visit the editorial office, the printer, the paper supplier and even the home of My Hero Academia creator Kohei Horikoshi\u2014anything to uncover the secrets of Shonen Jump!", "tagline": "Unlock the secrets of Shonen Jump!", "rating": "t", "vanityurl": "the-right-way-to-make-jump", "copyright": "JUMP NO TADASHII TSUKURIKATA! \u00a9 2014 by Takeshi Sakurai/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/552-SJ_RightWayToMakeJump_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/552-th-SJ_HowToMakeJump_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1676505556, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 30, "num_chapters_free": 3, "chapter_latest_pub_date": 1581494310, "chapter_latest_num": 30.0, "chapter_last_num": 30.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/552-SJ_RightWayToMakeJump_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/552-th-SJ_HowToMakeJump_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "7,496,10,791,5,471", "latest_author": "By Takeshi Sakurai, Translated by Emily Taylor", "title_sort": "right way to make jump!"}}, {"manga_series": {"id": 699, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 699, "device_id": 4, "keyart": "img/manga_series_header/699-020220_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2393, "manga_imprint_id": null, "title": "Guardian of the Witch", "synopsis": "Only witches possess the power to stand up to the Evils overrunning the world. But the power of the witches is just as dark as the Evils themselves. One witch, Manasfa, along with her guardian, Fafner, fights against her fate of succumbing to the Evils\u2019 curse by seeking a cure that will save witches everywhere!", "tagline": "In a world full of Evils, humanity's only hope is the inhuman power of the witches.", "rating": "t", "vanityurl": "guardian-of-the-witch", "copyright": "MAJO NO MORIBITO \u00a9 2020 by Asahi Sakano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/699-020220_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/699-th-020220_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560022, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1592754750, "chapter_latest_num": 19.0, "chapter_last_num": 19.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/699-020220_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/699-th-020220_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "448,105,461,703,312,781", "latest_author": "Asahi Sakano", "title_sort": "guardian of the witch"}}, {"manga_series": {"id": 471, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 471, "device_id": 4, "keyart": "img/manga_series_header/471-SeriesHeaders_PromisedNeverland_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2235, "manga_imprint_id": null, "title": "The Promised Neverland", "synopsis": "Life at Grace Field House is good for Emma and her fellow orphans. While the daily studying and exams they have to take are tough, their loving caretaker provides them with delicious food and plenty of playtime. But perhaps not everything is as it seems\u2026", "tagline": "The children of Grace Field House must escape a macabre fate before it\u2019s too late. ", "rating": "tp", "vanityurl": "the-promised-neverland", "copyright": "YAKUSOKU NO NEVERLAND \u00a9 2016 by Kaiu Shirai, Posuka Demizu/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/471-SeriesHeaders_PromisedNeverland_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1592-WSJ_PromisedNeverland_v4_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1691712978, "has_gns": true, "num_gns": 20, "has_chapters": true, "num_chapters": 185, "num_chapters_free": 3, "chapter_latest_pub_date": 1609689330, "chapter_latest_num": 181.4, "chapter_last_num": 181.4, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/471-SeriesHeaders_PromisedNeverland_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1592-WSJ_PromisedNeverland_v4_400x320.jpg", "label": null, "recommended_series_ids": "356,703,792,700,730,728,632,519", "latest_author": "Story by Kaiu Shirai, Art by Posuka Demizu", "title_sort": "promised neverland"}}, {"manga_series": {"id": 794, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 794, "device_id": 4, "keyart": "img/manga_series_header/794-BLE_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "Bleach: Special One-Shot", "synopsis": "", "tagline": "A brand new Bleach one-shot with all your favorite characters!", "rating": "t", "vanityurl": "bleach-special-one-shot", "copyright": "BLEACH \u00a9 2001 by Tite Kubo/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/794-BLE_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/794-th-BLE_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1628521138, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/794-BLE_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/794-th-BLE_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "8,703,580,763,792,700,540,724", "latest_author": "Tite Kubo", "title_sort": "bleach: special one-shot"}}, {"manga_series": {"id": 792, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 792, "device_id": 4, "keyart": "img/manga_series_header/792-DC3_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "DC3", "synopsis": "", "tagline": "Special One-Shot by the creators of The Promised Neverland!", "rating": "t", "vanityurl": "dc3", "copyright": "DC3 \u00a9 2021 by Kaiu Shirai, Posuka Demizu/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/792-DC3_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/792-th-DC3_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1627829936, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/792-DC3_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/792-th-DC3_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "794,700,132,721,579,728,632,471", "latest_author": "Story by Kaiu Shirai, Art by Posuka Demizu", "title_sort": "dc3"}}, {"manga_series": {"id": 700, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 700, "device_id": 4, "keyart": "img/manga_series_header/700-020220_DN_ONESHOT_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "Death Note: Special One-Shot", "synopsis": "", "tagline": "A new Death Note one-shot! Ryuk's not done toying with the human race yet!", "rating": "tp", "vanityurl": "death-note-special-one-shot", "copyright": "DEATH NOTE \u00a9 2003 by Tsugumi Ohba, Takeshi Obata/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/700-020220_DN_ONESHOT_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/700-th-020220_DN_Oneshot_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1580741910, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/700-020220_DN_ONESHOT_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/700-th-020220_DN_Oneshot_400x320_jpg", "label": null, "recommended_series_ids": "7,549,794,580,9,540,730,371", "latest_author": "Story by Tsugumi Ohba, Art by Takeshi Obata", "title_sort": "death note: special one-shot"}}, {"manga_series": {"id": 728, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 728, "device_id": 4, "keyart": "img/manga_series_header/728-081620_PageHeader_Yokoku_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "Spirit Photographer Saburo Kono", "synopsis": "", "tagline": "Special one-shot by the creators of The Promised Neverland!", "rating": "t", "vanityurl": "spirit-photographer-saburo-kono", "copyright": "SHINREI SHASHINSHI KONO SABURO \u00a9 2020 by Kaiu Shirai, Posuka Demizu/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/728-081620_PageHeader_Yokoku_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/728-th-081620_Thumbnail_Yokoku_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1597589910, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/728-081620_PageHeader_Yokoku_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/728-th-081620_Thumbnail_Yokoku_400x320.jpg", "label": null, "recommended_series_ids": "794,792,700,79,471,371,519", "latest_author": "Story by Kaiu Shirai, Art by Posuka Demizu", "title_sort": "spirit photographer saburo kono"}}, {"manga_series": {"id": 711, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 711, "device_id": 4, "keyart": "img/manga_series_header/711-042620_PageHeader_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2398, "manga_imprint_id": null, "title": "Bone Collection", "synopsis": "Kazami Jinai is hopeless exorcist who isn't good at anything with one exception: he can use a forbidden spell that gives him access to a yokai's power! One fateful day, Kazami meets the beautiful Paira, one of the most powerful yokai around! But she doesn't plan on wreaking havoc on humans... She wants to become one herself!", "tagline": "Grow a backbone and tap into your inner exorcist powers with this exciting new manga!", "rating": "t", "vanityurl": "bone-collection", "copyright": "BONE COLLECTION \u00a9 2020 by Jun Kirarazaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/711-042620_PageHeader_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/711-th-042620_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560022, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 15, "num_chapters_free": 3, "chapter_latest_pub_date": 1598197770, "chapter_latest_num": 15.0, "chapter_last_num": 15.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/711-042620_PageHeader_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/711-th-042620_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "716,283,722,717,739", "latest_author": "Jun Kirarazaka", "title_sort": "bone collection"}}, {"manga_series": {"id": 180, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 180, "device_id": 4, "keyart": "img/manga_series_keyart/493-Nisekoi-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1585, "manga_imprint_id": 1, "title": "Nisekoi", "synopsis": "It was hate at first sight... rather a knee-to-the-head at first sight when Raku Ichijo meets Chitoge Kirisaki! Unfortunately, Raku\u2019s gangster father arranges a false love match with their rival\u2019s daughter, who just so happens to be Chitoge! However, Raku\u2019s searching for his childhood sweetheart from ten years ago, with a pendant around his neck as a memento, and he can't even remember her name or face!", "tagline": "Love triangle! Comedic antics!! Gang warfare?!", "rating": "t", "vanityurl": "nisekoi", "copyright": "NISEKOI \u00a9 2011 by Naoshi Komi/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 25, "has_chapters": true, "num_chapters": 229, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 229.0, "chapter_last_num": 229.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5393-SeriesHeader_Tier02_NSK_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/873-SeriesThumbnailsManga_NSK_400x320.jpg", "label": null, "recommended_series_ids": "449,304,795,78,632,492", "latest_author": "Naoshi Komi", "title_sort": "nisekoi"}}, {"manga_series": {"id": 464, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 464, "device_id": 4, "keyart": "img/manga_series_keyart/1565-Emperor_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2226, "manga_imprint_id": 1, "title": "The Emperor and I", "synopsis": "One day something emerges from high school girl Kaho\u2019s refrigerator\u2014an emperor penguin, the largest of all penguins! When this emperor joins the household, fun and wacky antics with family and friends ensue!", "tagline": "A high school girl and her penguin. Enough said...", "rating": "a", "vanityurl": "the-emperor-and-i", "copyright": "EMPEROR TO ISSHO \u00a9 2015 by mato/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/1564-SeriesThumbnailsManga_Penguin_v2_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 63, "num_chapters_free": 3, "chapter_latest_pub_date": 1503471570, "chapter_latest_num": 38.0, "chapter_last_num": 38.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5812-SeriesHeaders_EmperorAndI_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1564-SeriesThumbnailsManga_Penguin_v2_400x320.jpg", "label": null, "recommended_series_ids": "448,795,717,180", "latest_author": "mato", "title_sort": "emperor and i"}}, {"manga_series": {"id": 721, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 721, "device_id": 4, "keyart": "img/manga_series_header/721-070520_PageHeader_SeriesOnly_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2408, "manga_imprint_id": null, "title": "Me & Roboco", "synopsis": "In a world where most families own a cute maid robot, average elementary kid Bondo hopes for one of his own. But the robot who shows up is anything but average! Meet Roboco\u2014the wackiest, most powerful maid imaginable!", "tagline": "Roboco Quiz! How crazy is this maid?!", "rating": "t", "vanityurl": "me-and-roboco", "copyright": "BOKU TO ROBOCO \u00a9 2020 by Shuhei Miyazaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/721-070520_PageHeader_SeriesOnly_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/721-th-070520_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663626, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 172, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663510, "chapter_latest_num": 172.0, "chapter_last_num": 172.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/721-070520_PageHeader_SeriesOnly_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/721-th-070520_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "738,647,718,733,694,707,624,235", "latest_author": "Shuhei Miyazaki", "title_sort": "me & roboco"}}, {"manga_series": {"id": 454, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 454, "device_id": 4, "keyart": "img/manga_series_keyart/1545-CWO16185_SeriesBricks_kuroko_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2132, "manga_imprint_id": 1, "title": "Kuroko\u2019s Basketball", "synopsis": "Tetsuya Kuroko doesn\u2019t stand out much. In fact, he\u2019s so plain that people hardly ever notice when he\u2019s around. Though he\u2019s just as unremarkable on the basketball court, that\u2019s where his plainness gives him an unexpected edge\u2014one that lets him execute awesome moves without others noticing!", "tagline": "Seirin High\u2019s greatest basketball superstar was the one no one saw coming\u2014the invisible Kuroko!", "rating": "t", "vanityurl": "kurokos-basketball", "copyright": "KUROKO NO BASUKE \u00a9 2008 by Tadatoshi Fujimaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1703066436, "has_gns": true, "num_gns": 15, "has_chapters": true, "num_chapters": 275, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 275.0, "chapter_last_num": 275.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5488-Tier04_SeriesHeaders_KRK_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/895-SeriesThumbnailsManga_KUR_400x320.jpg", "label": null, "recommended_series_ids": "223,450,755,798,499,129", "latest_author": "Tadatoshi Fujimaki", "title_sort": "kuroko\u2019s basketball"}}, {"manga_series": {"id": 304, "updated_at": "2023-06-13T13:00:42.000-07:00", "manga_series_common_id": 304, "device_id": 4, "keyart": "img/manga_series_keyart/969-FoodWars-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1742, "manga_imprint_id": 5, "title": "Food Wars!: Shokugeki no Soma", "synopsis": "Soma Yukihira\u2019s old man runs a small family restaurant in the less savory end of town. Aiming to one day surpass his father\u2019s culinary prowess, Soma hones his skills day in and day out until one day, out of the blue, his father decides to enroll Soma in a classy culinary school! Can Soma really cut it in a place that prides itself on a 10 percent graduation rate? And can he convince the beautiful, domineering heiress of the school that he belongs there at all?!", "tagline": "An action-packed, saucy food comedy featuring one boy\u2019s determination to be top chef!", "rating": "tp", "vanityurl": "food-wars", "copyright": "SHOKUGEKI NO SOMA \u00a9 2012 by Yuto Tsukuda, Shun Saeki /SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1686686442, "has_gns": true, "num_gns": 36, "has_chapters": true, "num_chapters": 319, "num_chapters_free": 3, "chapter_latest_pub_date": 1572541110, "chapter_latest_num": 315.4, "chapter_last_num": 315.4, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5337-SeriesHeaders_Tier01_FW_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/343-SeriesThumbnailsManga_FDW_400x320.jpg", "label": null, "recommended_series_ids": "580,496,647,450,339,798,714", "latest_author": "Story by Yuto Tsukuda, Art by Shun Saeki", "title_sort": "food wars!: shokugeki no soma"}}, {"manga_series": {"id": 718, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 718, "device_id": 4, "keyart": "img/manga_series_header/718-062820_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2405, "manga_imprint_id": null, "title": "Hard-Boiled Cop and Dolphin", "synopsis": "Boyle Samejima is a tough-as-nails cop with a love for hard-boiled action. He's so hard-boiled that his internal monologue boxes have blood splatters on them! But after he punches a suspect in the middle of a hostage situation, he's shipped off to the remote island of Anegashima near Okinawa...pretty much the middle of nowhere and the complete opposite of hard-boiled. But soon after he arrives, things take an interesting turn when he's asked to help with a case involving the mass disappearance of a cult that worships a little girl who is said to have been raised by a dolphin. Furthermore, that girl is in the precinct's custody. But when Samejima arrives for his first day of work, he's faced with the shock of his life! His new partner, the father of that little girl, really is a dolphin! It's okay, though, the dolphin can walk on land and has two hands...and can talk.", "tagline": "Ryuhei Tamura brings you the fishiest cop manga to ever hit Shonen Jump!", "rating": "t", "vanityurl": "hard-boiled-cop-and-dolphin", "copyright": "SHAKUNETSU NO NIRAIKANAI \u00a9 2020 by Ryuhei Tamura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/718-062820_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/718-th-062820_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 47, "num_chapters_free": 3, "chapter_latest_pub_date": 1624204710, "chapter_latest_num": 47.0, "chapter_last_num": 47.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/718-062820_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/718-th-062820_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "356,733,520,624,249,632,750,693", "latest_author": "Ryuhei Tamura", "title_sort": "hard-boiled cop and dolphin"}}, {"manga_series": {"id": 627, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 627, "device_id": 4, "keyart": "img/manga_series_header/627-082519_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2377, "manga_imprint_id": null, "title": "Mission: Yozakura Family", "synopsis": "Taiyo Asano has been on his own ever since his parents died and the only one who seems to care for him is his childhood friend and classmate, Mutsumi Yozakura. But Mutsumi has a secret--she is the head of a family of spies! And on top of that, her brother Kyoichiro is dangerously protective of her! To stop Kyoichiro from killing him, Taiyo and Mutsumi must take the ultimate leap--marriage! Because in the Yozakura family, family cannot kill family.", "tagline": "Romance! A crazy, overprotective brother! And... Spies?! ", "rating": "t", "vanityurl": "mission-yozakura-family", "copyright": "YOZAKURA-SANCHI NO DAISAKUSEN \u00a9 2019 by Hitsuji Gondaira/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/627-082519_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/627-th-082519_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724535, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 214, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663533, "chapter_latest_num": 213.0, "chapter_last_num": 213.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/627-082519_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/627-th-082519_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "356,717,694,721,628,739,632,693", "latest_author": "Hitsuji Gondaira", "title_sort": "mission: yozakura family"}}, {"manga_series": {"id": 687, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 687, "device_id": 4, "keyart": "img/manga_series_header/687-120819_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2389, "manga_imprint_id": null, "title": "Agravity Boys", "synopsis": "Space\u2014the final frontier. Four young men from the Freedom Federation are sent on a mission of intergalactic space exploration, only to get sucked into a black hole and stranded on the planet a-Jumbro. Thus begin their wacky adventures on an unexplored planet!", "tagline": "A bro-tastic space comedy adventure!", "rating": "tp", "vanityurl": "agravity-boys", "copyright": "AGRAVITY BOYS \u00a9 2019 by Atsushi Nakamura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/687-120819_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/687-th-120819_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1690475119, "has_gns": true, "num_gns": 7, "has_chapters": true, "num_chapters": 51, "num_chapters_free": 3, "chapter_latest_pub_date": 1621954710, "chapter_latest_num": 51.0, "chapter_last_num": 51.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/687-120819_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/687-th-120819_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "470,716,703,718,724,694,739,324", "latest_author": "Atsushi Nakamura", "title_sort": "agravity boys"}}, {"manga_series": {"id": 724, "updated_at": "2024-01-26T11:04:43.000-08:00", "manga_series_common_id": 724, "device_id": 4, "keyart": "img/manga_series_header/724-072620_PageHeader_Kaiju8_2000x800_copy_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2411, "manga_imprint_id": null, "title": "Kaiju No. 8", "synopsis": "With the highest kaiju-emergence rates in the world, Japan is no stranger to attack by deadly monsters. Enter the Japan Defense Force, a military organization tasked with the neutralization of kaiju. Kafka Hibino, a kaiju corpse cleanup man, has always dreamed of joining the force and wants another shot at achieving his childhood dream of eliminating the kaiju. But how can he expect to fight kaiju when he suddenly becomes one himself?!", "tagline": "Kafka wants to clean up kaiju, but not literally! Will a sudden metamorphosis stand in the way of his dream?", "rating": "t", "vanityurl": "kaiju-no-8", "copyright": "KAIJU HACHI GO \u00a9 2020 by Naoya Matsumoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/724-072620_PageHeader_Kaiju8_2000x800_copy_wm.jpg", "link_img": "img/manga_series_link_img/724-th-072620_Thumbnail_Kaiju8_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434676, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 120, "num_chapters_free": 6, "chapter_latest_pub_date": 1706799510, "chapter_latest_num": 101.0, "chapter_last_num": 101.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/724-072620_PageHeader_Kaiju8_2000x800_copy_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/724-th-072620_Thumbnail_Kaiju8_400x320.jpg", "label": null, "recommended_series_ids": "763,496,722,941,5,249,739,599,632", "latest_author": "Naoya Matsumoto", "title_sort": "kaiju no. 8"}}, {"manga_series": {"id": 628, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 628, "device_id": 4, "keyart": "img/manga_series_header/628-090119_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2378, "manga_imprint_id": null, "title": "Mitama Security: Spirit Busters", "synopsis": "Rena Haze has possessed the ability to see spirits since she was a little girl, but instead of being frightened by them, she simply pretends they don\u2019t exist. Now in high school, Rena is being haunted by a line of nearly 100 spirits. The incredible length of her spirit line catches the attention of Mitama, a SecuREIty agent dead set on protecting her from the spirits she\u2019s so desperate to ignore. There's just one problem\u2014he's deathly afraid of spirits!", "tagline": "Rena's haunted by spirits, but when a strange guy comes to bust them, he may be more of a hindrance than a help! ", "rating": "t", "vanityurl": "mitama-security", "copyright": "MITAMA SECURETY \u00a9 2019 by Tsurun Hatomune/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/628-090119_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/628-th-mitamathumb_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 48, "num_chapters_free": 3, "chapter_latest_pub_date": 1598799510, "chapter_latest_num": 47.1, "chapter_last_num": 47.1, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/628-090119_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/628-th-mitamathumb_jpg", "label": null, "recommended_series_ids": "132,626,733,454,721,750,464", "latest_author": "Tsurun Hatomune", "title_sort": "mitama security: spirit busters"}}, {"manga_series": {"id": 753, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 753, "device_id": 4, "keyart": "img/manga_series_header/753-WSJ2021_issue10_PageHeader_2000x800_edit_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2428, "manga_imprint_id": null, "title": "WITCH WATCH", "synopsis": "Morihito Otogi\u2019s surprisingly quiet life of being a human with the monstrous strength of an ogre is turned upside down when his father comes to him with life-changing news. Morihito is to become the familiar of his childhood friend Nico, a teenage witch\u2014and the two are going to live together, alone, under the same roof! Nico is head over heels in love with Morihito and wants to have the perfect high school rom-com life with him! But given all the magical hijinks and trouble she leaves in her wake, Nico\u2019s got a long road ahead of her if she wants to get more familiar with her familiar.", "tagline": "A teen witch wants to get familiar with her familiar! From the mangaka of Astra Lost in Space!", "rating": "t", "vanityurl": "witch-watch", "copyright": "WITCH WATCH \u00a9 2021 by Kenta Shinohara/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/753-WSJ2021_issue10_PageHeader_2000x800_edit_wm.jpg", "link_img": "img/manga_series_link_img/753-th-WSJ2021_issue10_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724944, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 143, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663528, "chapter_latest_num": 143.0, "chapter_last_num": 143.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/753-WSJ2021_issue10_PageHeader_2000x800_edit_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/753-th-WSJ2021_issue10_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "470,702,265,739,235,632,464,492", "latest_author": "Kenta Shinohara", "title_sort": "witch watch"}}, {"manga_series": {"id": 814, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 814, "device_id": 4, "keyart": "img/manga_series_header/814-JOJO_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": null, "title": "JoJo\u2019s Bizarre Adventure: Part 6--Stone Ocean", "synopsis": "", "tagline": "The action shifts from Italy to America as Jolyne Cujoh is sentenced to 15 years in prison for a crime she didn't commit!", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-6", "copyright": "JOJO'S BIZARRE ADVENTURE PART6 STONE OCEAN \u00a9 1999 by LUCKY LAND COMMUNICATIONS/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/814-JOJO_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/814-th-JOJO_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707764811, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 114, "num_chapters_free": 6, "chapter_latest_pub_date": 1707242310, "chapter_latest_num": 114.0, "chapter_last_num": 114.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/814-JOJO_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/814-th-JOJO_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "339,376,469,596,768", "latest_author": "Hirohiko Araki", "title_sort": "jojo\u2019s bizarre adventure: part 6--stone ocean"}}, {"manga_series": {"id": 793, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 793, "device_id": 4, "keyart": "img/manga_series_header/793-MHA_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "My Hero Academia Special Spin-off: Endeavor\u2019s Mission", "synopsis": "", "tagline": "Special prelude to the My Hero Academia: World Heroes\u2019 Mission Film!", "rating": "t", "vanityurl": "my-hero-academia-special-spin-off-endeavors-mission", "copyright": "BOKU NO HERO ACADEMIA TOKUBETSU SPINOFF ENDEAVOR\u2019S MISSION \u00a9 2021 by Kohei Horikoshi, Yoko Akiyama/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/793-MHA_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/793-th-MHA_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1627829935, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/793-MHA_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/793-th-MHA_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "175,792,496,540,399,748,520,249", "latest_author": null, "title_sort": "my hero academia special spin-off: endeavor\u2019s mission"}}, {"manga_series": {"id": 734, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 734, "device_id": 4, "keyart": "img/manga_series_header/734-091320_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2416, "manga_imprint_id": null, "title": "Our Blood Oath", "synopsis": "The Hizuki brothers may not be connected by blood, but they are bound by something stronger\u2014a vampire oath. Together they fight evil vampires and crazed beasts who try to hurt humans. Can they achieve their dream\u2014a peaceful coexistence between humans and vampires?", "tagline": "Blood is thicker than water, especially if you're a vampire!", "rating": "t", "vanityurl": "our-blood-oath", "copyright": "BOKURA NO KETSUMEI \u00a9 2020 by Kazu Kakazu/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/734-091320_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/734-th-091320_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1696975792, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 3, "chapter_latest_pub_date": 1611503250, "chapter_latest_num": 18.0, "chapter_last_num": 18.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/734-091320_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/734-th-091320_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "448,105,700,722,78,312,519,714", "latest_author": "Kazu Kakazu", "title_sort": "our blood oath"}}, {"manga_series": {"id": 540, "updated_at": "2024-01-22T11:28:46.000-08:00", "manga_series_common_id": 540, "device_id": 4, "keyart": "img/manga_series_header/540-MangaHeaders_JuJutsuKaisen_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2331, "manga_imprint_id": null, "title": "Jujutsu Kaisen", "synopsis": "In a world where cursed spirits feed on unsuspecting humans, fragments of the legendary and feared demon Ryomen Sukuna were lost and scattered about. Should any demon consume Sukuna\u2019s body parts, the power they gain could destroy the world as we know it. Fortunately, there exists a mysterious school of Jujutsu Sorcerers who exist to protect the precarious existence of the living from the supernatural!", "tagline": "To save the world from demons, Yuji Itadori may have to become one himself!", "rating": "tp", "vanityurl": "jujutsu-kaisen", "copyright": "JUJUTSU KAISEN \u00a9 2018 by Gege Akutami/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/540-MangaHeaders_JuJutsuKaisen_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/540-th-WSJ_JuJutsuKaisen_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724762, "has_gns": true, "num_gns": 22, "has_chapters": true, "num_chapters": 257, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663537, "chapter_latest_num": 250.0, "chapter_last_num": 250.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/540-MangaHeaders_JuJutsuKaisen_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/540-th-WSJ_JuJutsuKaisen_400x320.jpg", "label": null, "recommended_series_ids": "580,796,496,718,724,5,732,739,260", "latest_author": "Gege Akutami", "title_sort": "jujutsu kaisen"}}, {"manga_series": {"id": 733, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 733, "device_id": 4, "keyart": "img/manga_series_header/733-090620_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2415, "manga_imprint_id": null, "title": "High School Family: Kokosei Kazoku", "synopsis": "Kotaro Ietani looks forward to starting a fun, normal high school life\u2026until his family appears in matching uniforms at the same high school. His dad Ichiro, his mom Shizuka, his little sister Haruka, and even Gomez the cat all join Kotaro as students in his first-year class. The whole family makes friends, joins sports, and lives out their dreams of being high schoolers\u2014together!", "tagline": "High School is rough, but imagine going to school with your whole family!   ", "rating": "t", "vanityurl": "high-school-family", "copyright": "KOKOSEI KAZOKU \u00a9 2020 by Ryo Nakama/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/733-090620_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/733-th-090620_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724939, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 122, "num_chapters_free": 3, "chapter_latest_pub_date": 1676818710, "chapter_latest_num": 122.0, "chapter_last_num": 122.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/733-090620_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/733-th-090620_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "356,703,721,467,632,750,492,714", "latest_author": "Story and Art by Ryo Nakama", "title_sort": "high school family: kokosei kazoku"}}, {"manga_series": {"id": 632, "updated_at": "2023-11-03T09:47:25.000-07:00", "manga_series_common_id": 632, "device_id": 4, "keyart": "img/manga_series_header/632-SJ_SpyFamily_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2375, "manga_imprint_id": null, "title": "Spy x Family", "synopsis": "Master spy Twilight is unparalleled when it comes to going undercover on dangerous missions for the betterment of the world. But when he receives the ultimate assignment\u2014to get married and have a kid\u2014he may finally be in over his head!", "tagline": "An action-packed comedy about a fake family that includes a spy, an assassin and a telepath!", "rating": "tp", "vanityurl": "spy-x-family", "copyright": "SPYxFAMILY \u00a9 2019 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/632-SJ_SpyFamily_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/632-th-SJ_SpyFamily_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707437300, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 118, "num_chapters_free": 6, "chapter_latest_pub_date": 1705849110, "chapter_latest_num": 94.0, "chapter_last_num": 94.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/632-SJ_SpyFamily_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/632-th-SJ_SpyFamily_400x320_jpg", "label": null, "recommended_series_ids": "356,703,722,717,627,78,739,464", "latest_author": "Tatsuya Endo", "title_sort": "spy x family"}}, {"manga_series": {"id": 450, "updated_at": "2024-02-08T17:16:30.000-08:00", "manga_series_common_id": 450, "device_id": 4, "keyart": "img/manga_series_keyart/1529-CWO16111_SeriesBricks_Haikyuu_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2130, "manga_imprint_id": null, "title": "Haikyu!!", "synopsis": "Ever since he saw the legendary player known as \u201cthe Little Giant\u201d compete at the national volleyball finals, Shoyo Hinata has been aiming to be the best volleyball player ever! Who says you need to be tall to play volleyball when you can jump higher than anyone else?", "tagline": "Shoyo Hinata is out to prove that in volleyball you don\u2019t need to be tall to fly!", "rating": "t", "vanityurl": "haikyu", "copyright": "HAIKYU!! \u00a9 2012 by Haruichi Furudate/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": true, "header_img": null, "link_img": "img/manga_series_link_img/450-th-878-SeriesThumbnailsManga_HKU_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707441390, "has_gns": true, "num_gns": 45, "has_chapters": true, "num_chapters": 404, "num_chapters_free": 4, "chapter_latest_pub_date": 1707058736, "chapter_latest_num": 402.2, "chapter_last_num": 402.2, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5440-Tier03_SeriesHeader_HKU_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/450-th-878-SeriesThumbnailsManga_HKU_400x320.jpg", "label": null, "recommended_series_ids": "604,223,647,454,755,798,129,714", "latest_author": "Haruichi Furudate", "title_sort": "haikyu!!"}}, {"manga_series": {"id": 393, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 393, "device_id": 4, "keyart": "img/manga_series_keyart/1301-CWO15179_SeriesBricks_TSE_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1960, "manga_imprint_id": 1, "title": "Twin Star Exorcists", "synopsis": "Rokuro is from a family of exorcists, but he\u2019d rather be a singer, a soccer player or anything but an exorcist! He\u2019s forced to own up to his own incredible potential when new arrival Benio stirs his competitive spirit. But their rivalry gets a twist when they earn the prestigious title of \u201cTwin Star Exorcists\u201d\u2014 two supreme fighters fated to marry and birth the ultimate spiritual warrior! ", "tagline": "Exorcists Rokuro and Benio unleash serious supernatural action while purifying the world of monsters.", "rating": "t", "vanityurl": "twin-star-exorcists", "copyright": "SOUSEI NO ONMYOJI \u00a9 2013 by Yoshiaki Sukeno /SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707724833, "has_gns": true, "num_gns": 29, "has_chapters": true, "num_chapters": 128, "num_chapters_free": 7, "chapter_latest_pub_date": 1706799536, "chapter_latest_num": 127.0, "chapter_last_num": 127.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5396-SeriesHeader_Tier02_TSE_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/365-SeriesThumbnailsManga_TSE_v2_400x320.jpg", "label": null, "recommended_series_ids": "8,105,466,732,312,332,324,286", "latest_author": "Yoshiaki Sukeno", "title_sort": "twin star exorcists"}}, {"manga_series": {"id": 750, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 750, "device_id": 4, "keyart": "img/manga_series_header/750-WSJ2021_issue08_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2426, "manga_imprint_id": null, "title": "The Elusive Samurai", "synopsis": "", "tagline": "A samurai tale of redemption and revenge by Yusei Matsui, creator of Assassination Classroom!", "rating": "t", "vanityurl": "the-elusive-samurai", "copyright": "NIGEJYOZUNO WAKAGIMI \u00a9 2021 by Yusei Matsui/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/750-WSJ2021_issue08_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/750-th-WSJ2021_issue08_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663631, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 144, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663510, "chapter_latest_num": 144.0, "chapter_last_num": 144.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/750-WSJ2021_issue08_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/750-th-WSJ2021_issue08_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "356,461,738,123,546,626,540,724", "latest_author": "Yusei Matsui", "title_sort": "elusive samurai"}}, {"manga_series": {"id": 624, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 624, "device_id": 4, "keyart": "img/manga_series_header/624-SJ_OnePieceBoichi_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "One Piece: Boichi Covers Zolo vs. Mihawk", "synopsis": "", "tagline": "Special One-Shot! Boichi Sensei covers the Zolo vs. Mihawk Battle!", "rating": "t", "vanityurl": "one-piece-one-shot-boichi", "copyright": "ONE PIECE Roronoa Zolo Saga \u00a9 2019 by Eiichiro Oda, Boichi/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/624-SJ_OnePieceBoichi_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/624-th-SJ_OnePieceBoichi_NoTag_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1563739050, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/624-SJ_OnePieceBoichi_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/624-th-SJ_OnePieceBoichi_NoTag_400x320_jpg", "label": null, "recommended_series_ids": "466,647,694,5,249,739,632", "latest_author": "Story by Eiichiro Oda, Art by Boichi", "title_sort": "one piece: boichi covers zolo vs. mihawk"}}, {"manga_series": {"id": 717, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 717, "device_id": 4, "keyart": "img/manga_series_header/717-062120_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2404, "manga_imprint_id": null, "title": "Magu-chan: God of Destruction", "synopsis": "Long, long ago, the Gods of Chaos were worshipped and feared all over the world. One in particular, the God of Destruction Mag Menuek, was the most fearsome of all. But his reign ended when the Holy Knights sealed him away inside a gem for what they thought was forever\u2026until one day, eons later, when that gem washes up on the shores of a rural seaside town in Japan and is picked up by a young girl named Ruru.", "tagline": "Foolish lowly humans! A washed-up god of destruction finds the human world quite perplexing.", "rating": "t", "vanityurl": "magu-chan-god-of-destruction", "copyright": "HAKAISHIN MAGU-CHAN \u00a9 2020 by Kei Kamiki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/717-062120_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/717-th-062120_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096071, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 78, "num_chapters_free": 3, "chapter_latest_pub_date": 1651417110, "chapter_latest_num": 77.1, "chapter_last_num": 77.1, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/717-062120_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/717-th-062120_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "687,648,446,362,795,284,750,324", "latest_author": "Story and Art by Kei Kamiki", "title_sort": "magu-chan: god of destruction"}}, {"manga_series": {"id": 465, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 465, "device_id": 4, "keyart": "img/manga_series_header/465-SeriesHeaders_TokyoGhoulJack_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1918, "manga_imprint_id": 1, "title": "Tokyo Ghoul [Jack]", "synopsis": "A prequel to the hit series Tokyo Ghoul featuring the high school adventures of Kisho Arima as a bourgeoning Ghoul investigator!", "tagline": "A prequel to the hit series Tokyo Ghoul!", "rating": "tp", "vanityurl": "tokyo-ghoul-jack", "copyright": "TOKYO GHOUL [JACK] \u00a9 2013 by Sui Ishida/SHUEISHA Inc. ", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/465-SeriesHeaders_TokyoGhoulJack_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1568-SeriesThumbnailsManga_TKGJack_v2_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 7, "num_chapters_free": 3, "chapter_latest_pub_date": 1653980370, "chapter_latest_num": 7.0, "chapter_last_num": 7.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/465-SeriesHeaders_TokyoGhoulJack_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1568-SeriesThumbnailsManga_TKGJack_v2_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,763,85,79,483,537,579", "latest_author": "Sui Ishida", "title_sort": "tokyo ghoul [jack]"}}, {"manga_series": {"id": 722, "updated_at": "2023-11-06T13:44:04.000-08:00", "manga_series_common_id": 722, "device_id": 4, "keyart": "img/manga_series_header/722-071220_PageHeader_GhostGirl_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2409, "manga_imprint_id": null, "title": "Ghost Reaper Girl", "synopsis": "Chlo\u00e9 has dreamed of being a glamorous actress ever since she was little. But being the ripe old age of 28 might be working against her, as are her spontaneous displays of violence! But not all hope is lost\u2014she might be perfect for the role offered by a mysterious and charming new man in her life. Can Chlo\u00e9 become the Ghost Reaper Girl and take down the evil spirits that have escaped from Hades?", "tagline": "The latest from the mangaka of Rosario+Vampire! A scrappy girl\u2019s had it with grabby ghosts and fights back! Note: At the creator's request, this series will read left-to-right.", "rating": "tp", "vanityurl": "ghost-reaper-girl", "copyright": "GHOST GIRL \u00a9 2020 by Akissa Saik\u00e9/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/722-071220_PageHeader_GhostGirl_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/722-th-071220_Thumbnail_GhostGirl_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434621, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 47, "num_chapters_free": 6, "chapter_latest_pub_date": 1701097110, "chapter_latest_num": 37.0, "chapter_last_num": 37.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/722-071220_PageHeader_GhostGirl_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/722-th-071220_Thumbnail_GhostGirl_400x320.jpg", "label": null, "recommended_series_ids": "716,8,105,703,694,732,78,781", "latest_author": "Akissa Saik\u00e9", "title_sort": "ghost reaper girl"}}, {"manga_series": {"id": 801, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 801, "device_id": 4, "keyart": "img/manga_series_header/801-Header_DeathNoteSS_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 617, "manga_imprint_id": null, "title": "Death Note Short Stories", "synopsis": "Is Kira\u2019s story truly over, or does his influence linger?\r\n\r\nIn this complete collection of Death Note short stories penned by the series\u2019 creators, discover tales of lives irrevocably changed by the sinister influence of the Death Note, with surprising and thrilling answers to the question of what it truly takes to use the Death Note\u2026or fight it.\r\n\r\nContains stories \u201cC-Kira,\u201d \u201ca-Kira,\u201d the Death Note pilot chapter, vignettes of L\u2019s life, and more.", "tagline": "Is Kira's story truly over, or does his influence linger? Death Note's story continues in this collection of short stories penned by the series' creators.", "rating": "tp", "vanityurl": "death-note-short-stories", "copyright": "DEATH NOTE TANPENSHU \u00a9 2003 by Tsugumi Ohba, Takeshi Obata/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/801-Header_DeathNoteSS_2000x800.jpg", "link_img": "img/manga_series_link_img/801-th-Thumb_DeathNoteSS_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 1, "chapter_latest_pub_date": 1653411570, "chapter_latest_num": 6.0, "chapter_last_num": 6.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/801-Header_DeathNoteSS_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/801-th-Thumb_DeathNoteSS_400x320.jpg", "label": null, "recommended_series_ids": "549,9,700,339,730", "latest_author": "Story by Tsugumi Ohba, Art by Takeshi Obata", "title_sort": "death note short stories"}}, {"manga_series": {"id": 799, "updated_at": "2022-06-15T11:03:59.000-07:00", "manga_series_common_id": 799, "device_id": 4, "keyart": "img/manga_series_header/799-Header_TheComiq_2000x800_v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2332, "manga_imprint_id": null, "title": "The Comiq", "synopsis": "Three years ago, a murder took place on Halloween. Everyone believed the case was closed, but in truth, the real culprit is still at large! Get ready to unravel this exciting mystery by Yu-Gi-Oh! creator Kazuki Takahashi about a budding manga artist and his imprisoned assistant!", "tagline": "Only a manga artist can solve a puzzling murder in this mystery by the creator of Yu-Gi-Oh!", "rating": "t", "vanityurl": "the-comiq", "copyright": "THE COMIQ \u00a9 2018 by Kazuki Takahashi/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/799-Header_TheComiq_2000x800_v2.jpg", "link_img": "img/manga_series_link_img/799-th-Thumb_TheComiq_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1657039436, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/799-Header_TheComiq_2000x800_v2.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/799-th-Thumb_TheComiq_400x320.jpg", "label": null, "recommended_series_ids": "218,10,80,299,446,466,566,1,414,417,421,460,467,855,856,128,133,158,247,248,256,286,326,489", "latest_author": "Kazuki Takahashi", "title_sort": "comiq"}}, {"manga_series": {"id": 738, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 738, "device_id": 4, "keyart": "img/manga_series_header/738-111520_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2421, "manga_imprint_id": null, "title": "Build King", "synopsis": "In a world where construction is everything, Tonkachi and Renga want nothing more than to become master builders just like their mentor Shovel. But it\u2019s going to take a lot more than big dreams to make it to that level, especially when none of the houses Tonkachi builds stay in one piece!", "tagline": "Build to survive on mysterious Hammer Island!", "rating": "t", "vanityurl": "build-king", "copyright": "BUILD KING \u00a9 2020 by Mitsutoshi Shimabukuro/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/738-111520_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/738-th-111520_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 20, "num_chapters_free": 3, "chapter_latest_pub_date": 1618156710, "chapter_latest_num": 20.0, "chapter_last_num": 20.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/738-111520_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/738-th-111520_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "461,496,466,5,249,739,23,693", "latest_author": "Mitsutoshi Shimabukuro", "title_sort": "build king"}}, {"manga_series": {"id": 732, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 732, "device_id": 4, "keyart": "img/manga_series_header/732-083020_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2412, "manga_imprint_id": null, "title": "Phantom Seer", "synopsis": "Iori Katanagi doesn\u2019t want to be a shaman. He yearns to lead a normal unassuming life\u2014not too likely for one of the most powerful shamans alive! And now he finds himself getting further and further away from his dream since meeting Riku Aibetsu, a cheerful girl with the unusual ability to attract phantoms.", "tagline": "Get into the spirit of this ghostly manga!", "rating": "t", "vanityurl": "phantom-seer", "copyright": "HONO MIERU SHONEN \u00a9 2020 by Togo Goto, Kento Matsuura/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/732-083020_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/732-th-083020_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 30, "num_chapters_free": 3, "chapter_latest_pub_date": 1617551910, "chapter_latest_num": 30.0, "chapter_last_num": 30.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/732-083020_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/732-th-083020_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "448,105,546,722,751,540,694,284", "latest_author": "Story by Togo Goto, Art by Kento Matsuura", "title_sort": "phantom seer"}}, {"manga_series": {"id": 751, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 751, "device_id": 4, "keyart": "img/manga_series_header/751-WSJ2021_issue09_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2427, "manga_imprint_id": null, "title": "i tell c", "synopsis": "Risa Aioi is a clever and unorthodox detective who falls in love with the very criminals she chases down! Her bizarre love knows no bounds, and Risa drives culprits to surrender themselves with her almost criminal investigation style. But is it possible to fight poison with poison without losing yourself?", "tagline": "Is it possible to fight poison with poison without losing yourself? A unique take on the crime-suspense genre! ", "rating": "t", "vanityurl": "i-tell-c", "copyright": "AITERUSHI \u00a9 2021 by Kazusa Inaoka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/751-WSJ2021_issue09_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/751-th-020721_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 21, "num_chapters_free": 3, "chapter_latest_pub_date": 1624809510, "chapter_latest_num": 21.0, "chapter_last_num": 21.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/751-WSJ2021_issue09_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/751-th-020721_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "18,730,284,732,579,739,312,632", "latest_author": "Story and Art by Kazusa Inaoka", "title_sort": "i tell c"}}, {"manga_series": {"id": 755, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 755, "device_id": 4, "keyart": "img/manga_series_header/755-WSJ2021_issue11_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2429, "manga_imprint_id": null, "title": "Nine Dragons\u2019 Ball Parade", "synopsis": "Tamao Azukida's dream is to play for Hakuo\u2014the fearsome high school baseball team that has dominated the prestigious Koshien tournament. When the day of tryouts arrives, his life will be changed forever when he meets a mysterious baseball genius called Tao Ryudo. Come along with Azukida and Ryudo as they vow to make their way to the top at Koshien!", "tagline": "Swing for the fences and dream of making the team!", "rating": "t", "vanityurl": "nine-dragons-ball-parade", "copyright": "KOWLOONS\u2019 BALL PARADE \u00a9 2021 by Mikiyasu Kamada and Ashibi Fukui/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/755-WSJ2021_issue11_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/755-th-WSJ2021_issue11_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096080, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 20, "num_chapters_free": 3, "chapter_latest_pub_date": 1625414310, "chapter_latest_num": 20.0, "chapter_last_num": 20.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/755-WSJ2021_issue11_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/755-th-WSJ2021_issue11_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "604,757,223,450,751,454,739,750", "latest_author": "Story by Mikiyasu Kamada, Art by Ashibi Fukui", "title_sort": "nine dragons\u2019 ball parade"}}, {"manga_series": {"id": 249, "updated_at": "2023-03-27T11:22:29.000-07:00", "manga_series_common_id": 249, "device_id": 4, "keyart": "img/manga_series_header/249-SeriesHeaders_OnePunchMan_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1671, "manga_imprint_id": 1, "title": "One-Punch Man", "synopsis": "A manga series that packs quite the punch!", "tagline": "Life gets pretty boring when you can beat the snot out of any villain with just one punch.", "rating": "t", "vanityurl": "one-punch-man", "copyright": "ONE-PUNCH MAN \u00a9 2012 by ONE, Yusuke Murata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/249-SeriesHeaders_OnePunchMan_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/249-th-327-SeriesThumbnailsManga_OPM_400x320-1.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707764244, "has_gns": true, "num_gns": 27, "has_chapters": true, "num_chapters": 240, "num_chapters_free": 6, "chapter_latest_pub_date": 1706637510, "chapter_latest_num": 198.0, "chapter_last_num": 198.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/249-SeriesHeaders_OnePunchMan_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/249-th-327-SeriesThumbnailsManga_OPM_400x320-1.jpg", "label": null, "recommended_series_ids": "700,648,540,724,399,520,624,739", "latest_author": "Story by ONE, Art by Yusuke Murata", "title_sort": "one-punch man"}}, {"manga_series": {"id": 841, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 841, "device_id": 4, "keyart": "img/manga_series_header/841-WSJ2022_issue40_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2485, "manga_imprint_id": null, "title": "Tokyo Demon Bride Story", "synopsis": "", "tagline": "A childhood promise of marriage comes back to haunt a young man. Literally!", "rating": "t", "vanityurl": "tokyo-demon-bride-story", "copyright": "DAI TOKYO ONIYOME DEN \u00a9 2022 by Tadaichi Nakama/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/841-WSJ2022_issue40_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/841-th-WSJ2022_issue40_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706166560, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 29, "num_chapters_free": 3, "chapter_latest_pub_date": 1680447510, "chapter_latest_num": 29.0, "chapter_last_num": 29.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/841-WSJ2022_issue40_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/841-th-WSJ2022_issue40_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "796,627,831", "latest_author": "Tadaichi Nakama", "title_sort": "tokyo demon bride story"}}, {"manga_series": {"id": 532, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 532, "device_id": 4, "keyart": "img/manga_series_keyart/1809-HoshinEngi_April2018_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 699, "manga_imprint_id": 1, "title": "Hoshin Engi", "synopsis": "When his clan is wiped out by a beautiful demon, young Taikobo finds himself in charge of the mysterious Hoshin Project. Its mission: find all immortals living in the human world and seal them away forever. But what is the ultimate goal of the Project? And does Taikobo even know whose side he's really on?!", "tagline": "Betrayed by an immortal, trained by a God, hunted by Demons.", "rating": "t", "vanityurl": "hoshin-engi", "copyright": "HOSHIN ENGI \u00a9 1996 by Ryu Fujisaki, Tsutomu Ano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560017, "has_gns": true, "num_gns": 23, "has_chapters": true, "num_chapters": 204, "num_chapters_free": 3, "chapter_latest_pub_date": 1661878770, "chapter_latest_num": 204.0, "chapter_last_num": 204.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5932-SeriesHeaders_HoshinEngi_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/119-SeriesThumbnailsManga_HoshinEngi_400x320.jpg", "label": null, "recommended_series_ids": "546,80,124,1,841,241", "latest_author": "Ryu Fujisaki", "title_sort": "hoshin engi"}}, {"manga_series": {"id": 287, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 287, "device_id": 4, "keyart": "img/manga_series_keyart/901-KnightsOfTheZodiac-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 628, "manga_imprint_id": 1, "title": "Knights of the Zodiac (Saint Seiya)", "synopsis": "The series begins with the story of Seiya, the main hero, who is one of Athena's Knights. Seiya, along with the other Bronze Knights, must train hard to earn their \"Cloths,\" and take on other challenges as well. Knights of the Zodiac (Saint Seiya) has been a hit in Japan (where it is known as simply Saint Seiya), as well as many European countries including Spain, France, and Italy.", "tagline": "Seiya and his fellow Bronze Knights will do whatever it takes to protect Athena.", "rating": "t", "vanityurl": "knights-of-the-zodiac", "copyright": "SAINT SEIYA \u00a9 1985 by Masami Kurumada/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 111, "num_chapters_free": 3, "chapter_latest_pub_date": 1656435570, "chapter_latest_num": 111.0, "chapter_last_num": 111.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/901-KnightsOfTheZodiac-SeriesBricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/90-SeriesThumbnailsManga_KnightZodiac_v2_400x320.jpg", "label": null, "recommended_series_ids": "448,22,784,124,532,339", "latest_author": "Masami Kurumada", "title_sort": "knights of the zodiac (saint seiya)"}}, {"manga_series": {"id": 757, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 757, "device_id": 4, "keyart": "img/manga_series_header/757-WSJ2021_issue19_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2436, "manga_imprint_id": null, "title": "Blue Box", "synopsis": "Taiki Inomata loves badminton, but he has a long way to go before he can reach nationals. When Taiki sees upperclassman Chinatsu Kano practicing her heart out on the girls\u2019 basketball team, he falls for her hard. After an unexpected turn of events brings the two closer together, sports might not be the first thing on their minds anymore!", "tagline": "A badminton guy falls for a basketball girl. Do these sports-crossed lovers have a chance?", "rating": "t", "vanityurl": "blue-box", "copyright": "AO NO HAKO \u00a9 2021 by Kouji Miura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/757-WSJ2021_issue19_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/757-th-WSJ2021_issue19_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707777683, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 136, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663532, "chapter_latest_num": 136.0, "chapter_last_num": 136.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/757-WSJ2021_issue19_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/757-th-WSJ2021_issue19_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "702,223,450,795,755,180,492,753", "latest_author": "Kouji Miura", "title_sort": "blue box"}}, {"manga_series": {"id": 9, "updated_at": "2023-10-27T14:13:49.000-07:00", "manga_series_common_id": 9, "device_id": 4, "keyart": "img/manga_series_header/9-SeriesHeaders_DeathNote_Manga_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 617, "manga_imprint_id": 1, "title": "Death Note", "synopsis": "Light Yagami is an ace student with great prospects--and he's bored out of his mind. But all that changes when he finds the Death Note, a notebook dropped by a rogue Shinigami death god. Any human whose name is written in the notebook dies, and now Light has vowed to use the power of the Death Note to rid the world of evil. But when criminals begin dropping dead, the authorities send the legendary detective L to track down the killer. With L hot on his heels, will Light lose sight of his noble goal\u2026or his life?", "tagline": "When Light Yagami finds a notebook giving him power over death, will he use it for good\u2014or evil?", "rating": "tp", "vanityurl": "death-note", "copyright": "DEATH NOTE \u00a9 2003 by Tsugumi Ohba, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/9-SeriesHeaders_DeathNote_Manga_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1704096017, "has_gns": true, "num_gns": 12, "has_chapters": true, "num_chapters": 108, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 108.0, "chapter_last_num": 108.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/9-SeriesHeaders_DeathNote_Manga_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/80-SeriesThumbnailsManga_DNv3_400x320.jpg", "label": null, "recommended_series_ids": "7,448,549,700,138,339,540,371", "latest_author": "Story by Tsugumi Ohba, Art by Takeshi Obata", "title_sort": "death note"}}, {"manga_series": {"id": 496, "updated_at": "2023-11-13T11:04:27.000-08:00", "manga_series_common_id": 496, "device_id": 4, "keyart": "img/manga_series_header/496-SeriesHeaders_DrStone_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2257, "manga_imprint_id": null, "title": "Dr. STONE", "synopsis": "One fateful day, all of humanity turned to stone. Many millennia later, Taiju frees himself from the petrification and finds himself surrounded by statues. The situation looks grim\u2014until he runs into his science-loving friend Senku! Together they plan to restart civilization with the power of science!", "tagline": "Imagine waking to a world where every last human has been mysteriously turned to stone...", "rating": "t", "vanityurl": "dr-stone", "copyright": "Dr. STONE \u00a9 2017 by Riichiro Inagaki, Boichi/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/496-SeriesHeaders_DrStone_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1696-WSJ_DrStone_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1702594032, "has_gns": true, "num_gns": 27, "has_chapters": true, "num_chapters": 233, "num_chapters_free": 3, "chapter_latest_pub_date": 1656860310, "chapter_latest_num": 232.1, "chapter_last_num": 232.1, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/496-SeriesHeaders_DrStone_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1696-WSJ_DrStone_400x320.jpg", "label": null, "recommended_series_ids": "703,700,648,938,138,694,520,739", "latest_author": "Story by Riichiro Inagaki, Art by Boichi", "title_sort": "dr. stone"}}, {"manga_series": {"id": 80, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 80, "device_id": 4, "keyart": "img/manga_series_header/80-SeriesHeaders_DBZ_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": 1, "title": "Dragon Ball Z", "synopsis": "After years of training and adventure, Goku has become Earth's ultimate warrior. And his son, Gohan, shows even greater promise. But the stakes are increasing as even deadlier enemies threaten the planet. DRAGON BALL Z is the ultimate science fiction-martial arts manga.", "tagline": "Goku and friends battle intergalactic evil in the greatest action-adventure-fantasy-comedy-fighting series ever!", "rating": "a", "vanityurl": "dragon-ball-z", "copyright": "", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/80-SeriesHeaders_DBZ_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/74-SeriesThumbnailsManga_DBZ_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 26, "has_chapters": true, "num_chapters": 325, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 325.0, "chapter_last_num": 325.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/80-SeriesHeaders_DBZ_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/74-SeriesThumbnailsManga_DBZ_400x320.jpg", "label": null, "recommended_series_ids": "461,648,466,566,138,724,414,249", "latest_author": "Akira Toriyama", "title_sort": "dragon ball z"}}, {"manga_series": {"id": 8, "updated_at": "2023-07-21T13:35:15.000-07:00", "manga_series_common_id": 8, "device_id": 4, "keyart": "img/manga_series_header/8-SeriesHeaders_Bleach_v3_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 657, "manga_imprint_id": 1, "title": "Bleach", "synopsis": "Ichigo Kurosaki never asked for the ability to see ghosts--he was born with the gift. When his family is attacked by a Hollow--a malevolent lost soul--Ichigo becomes a Soul Reaper, dedicating his life to protecting the innocent and helping the tortured spirits themselves find peace. Find out why Tite Kubo's Bleach has become an international manga smash-hit!", "tagline": "Part-time student, full-time Soul Reaper, Ichigo is one of the chosen few guardians of the afterlife.", "rating": "t", "vanityurl": "bleach", "copyright": "BLEACH \u00a9 2001 by Tite Kubo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/8-SeriesHeaders_Bleach_v3_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/8-th-691_th_106_SeriesThumbnailsManga_BLH_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1704096016, "has_gns": true, "num_gns": 74, "has_chapters": true, "num_chapters": 698, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 686.0, "chapter_last_num": 686.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/8-SeriesHeaders_Bleach_v3_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/8-th-691_th_106_SeriesThumbnailsManga_BLH_400x320.jpg", "label": null, "recommended_series_ids": "794,703,763,466,138,540,724,249,371", "latest_author": "Tite Kubo", "title_sort": "bleach"}}, {"manga_series": {"id": 399, "updated_at": "2023-12-18T11:02:21.000-08:00", "manga_series_common_id": 399, "device_id": 4, "keyart": "img/manga_series_keyart/1325-CWO15248_SeriesBricks_MAC_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia", "synopsis": "What would the world be like if 80 percent of the population manifested superpowers called \u201cQuirks\u201d? Heroes and villains would be battling it out everywhere! Being a hero would mean learning to use your power, but where would you go to study? The Hero Academy of course! But what would you do if you were one of the 20 percent who were born Quirkless?", "tagline": " Midoriya inherits the superpower of the world\u2019s greatest hero, but greatness won\u2019t come easy.", "rating": "t", "vanityurl": "my-hero-academia", "copyright": "BOKU NO HERO ACADEMIA \u00a9 2014 by Kohei Horikoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707777741, "has_gns": true, "num_gns": 37, "has_chapters": true, "num_chapters": 413, "num_chapters_free": 6, "chapter_latest_pub_date": 1706453937, "chapter_latest_num": 413.0, "chapter_last_num": 413.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5344-SeriesHeaders_MHA_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/371-SeriesThumbnails_MHA__400x320.jpg", "label": null, "recommended_series_ids": "175,763,138,724,793,520,249,739", "latest_author": "Kohei Horikoshi", "title_sort": "my hero academia"}}, {"manga_series": {"id": 14, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 14, "device_id": 4, "keyart": "img/manga_series_keyart/62-kenshin_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 595, "manga_imprint_id": 1, "title": "Rurouni Kenshin", "synopsis": "Action, romance, and historical intrigue help make Nobuhiro Watsuki's  Rurouni Kenshin, the tale of a wandering swordsman set against the backdrop of the Meiji Restoration, one of the most popular Shonen Jump titles among fans to date. Himura Kenshin, once an assassin (or  hitokiri) of ferocious power, now fights to protect the honor of those in need.", "tagline": "The battle to decide the fate of Meiji-era swordsmanship has begun!", "rating": "tp", "vanityurl": "rurouni-kenshin", "copyright": "RUROUNI KENSHIN \u00a9 1994 by Nobuhiro Watsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 28, "has_chapters": true, "num_chapters": 255, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 255.0, "chapter_last_num": 255.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5664-Header_RurouniKenshin_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/68-SeriesThumbnailsManga_KEN_400x320.jpg", "label": null, "recommended_series_ids": "8,123,498,240,138,1,750", "latest_author": "Nobuhiro Watsuki", "title_sort": "rurouni kenshin"}}, {"manga_series": {"id": 693, "updated_at": "2023-11-22T19:35:01.000-08:00", "manga_series_common_id": 693, "device_id": 4, "keyart": "img/manga_series_header/693-011920_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2391, "manga_imprint_id": null, "title": "Undead Unluck", "synopsis": "Tired of inadvertently killing people with her special ability Unluck, Fuuko Izumo sets out to end it all. But when she meets Andy, a man who longs for death but can\u2019t die, she finds a reason to live\u2014and he finds someone capable of giving him the death he\u2019s been longing for.", "tagline": "What happens when an unlucky girl meets an undead guy? Pure chaos! ", "rating": "tp", "vanityurl": "undead-unluck", "copyright": "UNDEAD UNLUCK \u00a9 2020 by Yoshifumi Tozuka/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/693-011920_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/693-th-011920_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663623, "has_gns": true, "num_gns": 14, "has_chapters": true, "num_chapters": 194, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663534, "chapter_latest_num": 194.0, "chapter_last_num": 194.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/693-011920_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/693-th-011920_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "700,496,138,717,628,732,739,632", "latest_author": "Yoshifumi Tozuka", "title_sort": "undead unluck"}}, {"manga_series": {"id": 248, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 248, "device_id": 4, "keyart": "img/manga_series_keyart/745-YuGiOh-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh!", "synopsis": "10th grader Yugi spent most of his time alone playing games...until he solved the Millennium Puzzle, a mysterious Egyptian artifact! Possessed by the puzzle, Yugi becomes Yu-Gi-Oh, the King of Games, and challenges evildoers to the Shadow Games...weird games with high stakes and high risks! These graphic novels contain new stories not seen in the anime, including the origin of Yugi and his friends!", "tagline": "The manga series that inspired the card game that swept the globe!", "rating": "t", "vanityurl": "yu-gi-oh", "copyright": "YU-GI-OH! \u00a9 1996 by Kazuki Takahashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560013, "has_gns": true, "num_gns": 7, "has_chapters": true, "num_chapters": 59, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 59.0, "chapter_last_num": 59.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5401-SeriesHeader_Tier02_YGO_v3_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/100-SeriesThumbnailsManga_YGO_400x320.jpg", "label": null, "recommended_series_ids": "461,10,138,1,133,326,128,247", "latest_author": "Kazuki Takahashi", "title_sort": "yu-gi-oh!"}}, {"manga_series": {"id": 466, "updated_at": "2023-04-03T17:47:22.000-07:00", "manga_series_common_id": 466, "device_id": 4, "keyart": "img/manga_series_header/466-SeriesHeaders_DBSuper_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": null, "title": "Dragon Ball Super", "synopsis": "Ever since Goku became Earth\u2019s greatest hero and gathered the seven Dragon Balls to defeat the evil Boo, his life on Earth has grown a little dull. But new threats loom overhead, and Goku and his friends will have to defend the planet once again in this continuation of Akira Toriyama\u2019s best-selling series, Dragon Ball!", "tagline": "Goku's adventure from the best-selling manga Dragon Ball continues!", "rating": "t", "vanityurl": "dragon-ball-super", "copyright": "DRAGON BALL SUPER \u00a9 2015 by BIRD STUDIO, Toyotarou/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/466-SeriesHeaders_DBSuper_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1572-WSJ_DB_Super_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724756, "has_gns": true, "num_gns": 20, "has_chapters": true, "num_chapters": 101, "num_chapters_free": 6, "chapter_latest_pub_date": 1705589910, "chapter_latest_num": 101.0, "chapter_last_num": 101.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/466-SeriesHeaders_DBSuper_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1572-WSJ_DB_Super_400x320.jpg", "label": null, "recommended_series_ids": "446,80,566,138,362,724,694,739", "latest_author": "Original Story by Akira Toriyama, Story and Art by Toyotarou", "title_sort": "dragon ball super"}}, {"manga_series": {"id": 816, "updated_at": "2022-10-18T13:46:37.000-07:00", "manga_series_common_id": 816, "device_id": 4, "keyart": "img/manga_series_keyart/2753-SJ_GuideMakingManga_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2483, "manga_imprint_id": null, "title": "The Shonen Jump Guide to Making Manga", "synopsis": "From Dragon Ball to Demon Slayer, from One Piece to My Hero Academia and beyond, Weekly Shonen Jump has published some of the finest manga to grace the earth. Now, the creators and editors behind several of the most popular manga in Shonen Jump sit down to discuss how to craft exciting stories, how to use your tools to the best of your abilities, and more. Whether you\u2019re getting started on your artistic path or a veteran looking for new tips, The Shonen Jump Guide to Making Manga is the perfect book to sharpen your skills.\u00a0\u00a0\r\n\r\n\r\n\r\nFeaturing commentary and advice from Eiichiro Oda (One Piece), Tite Kubo (Bleach), Shun Saeki (Food Wars), Kaiu Shirai &amp; Posuka Demizu (The Promised Neverland), Yusei Matsui (Assassination Classroom), Kohei Horikoshi (My Hero Academia), and more!", "tagline": " ", "rating": "tp", "vanityurl": "the-shonen-jump-guide-to-making-manga", "copyright": "KAKITAI!! WO SHINJIRU SHONEN JUMP GA DOSHITEMO TSUTAETAI MANGA NO KAKIKATA \u00a9 2021 by Weekly Shonen Jump/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1668409942, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6392-Header_SJGuideToMakingManga_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3381-Thumb_SJGuideToMakingManga_400x320.jpg", "label": null, "recommended_series_ids": "7,428,500,5,690,904,910,552", "latest_author": "Weekly Shonen Jump Editorial Department", "title_sort": "shonen jump guide to making manga"}}, {"manga_series": {"id": 791, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 791, "device_id": 4, "keyart": "img/manga_series_header/791-6369_Header_LookBack_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2478, "manga_imprint_id": null, "title": "Look Back", "synopsis": "The overly confident Fujino and the shut-in Kyomoto couldn\u2019t be more different, but a love of drawing manga brings these two small-town girls together. A poignant story of growing up and moving forward that only Tatsuki Fujimoto, the creator of Chainsaw Man, could have crafted.", "tagline": "When two students aspire to become manga artists, the paths they choose change their lives forever. From Chainsaw Man creator Tatsuki Fujimoto!", "rating": "t", "vanityurl": "look-back", "copyright": "LOOK BACK \u00a9 2021 by Tatsuki Fujimoto/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/791-6369_Header_LookBack_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/791-th-3286_Thumb_LookBack_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1695017937, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1626620310, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/791-6369_Header_LookBack_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/791-th-3286_Thumb_LookBack_400x320.jpg", "label": null, "recommended_series_ids": "7,580,9,399,790,728,552,712", "latest_author": "Tatsuki Fujimoto", "title_sort": "look back"}}, {"manga_series": {"id": 461, "updated_at": "2023-09-13T13:39:00.000-07:00", "manga_series_common_id": 461, "device_id": 4, "keyart": "img/manga_series_header/461-Header_Boruto_2000x800_v2_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2238, "manga_imprint_id": null, "title": "Boruto: Naruto Next Generations", "synopsis": "Naruto was a young shinobi with an incorrigible knack for mischief. He achieved his dream to become the greatest ninja in his village, and now his face sits atop the Hokage monument. But this is not his story... A new generation of ninja are ready to take the stage, led by Naruto's own son, Boruto!", "tagline": "A new generation of ninja are ready to take the stage!", "rating": "t", "vanityurl": "boruto", "copyright": " BORUTO: NARUTO NEXT GENERATIONS \u00a9 2016 by Masashi Kishimoto, MIkio Ikemoto, Ukyo Kodachi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/461-Header_Boruto_2000x800_v2_wm.jpg", "link_img": "img/manga_series_link_img/1552-WSJ_Boruto_400x320_v2.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1701763747, "has_gns": true, "num_gns": 18, "has_chapters": true, "num_chapters": 80, "num_chapters_free": 3, "chapter_latest_pub_date": 1682002710, "chapter_latest_num": 80.0, "chapter_last_num": 80.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/461-Header_Boruto_2000x800_v2_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1552-WSJ_Boruto_400x320_v2.jpg", "label": null, "recommended_series_ids": "922,138,1,856,5,599,260", "latest_author": "Creator/Supervisor: Masashi Kishimoto, Art by Mikio Ikemoto", "title_sort": "boruto: naruto next generations"}}, {"manga_series": {"id": 467, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 467, "device_id": 4, "keyart": "img/manga_series_header/467-SeriesHeaders_ChibiSasuke_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": 1, "title": "Naruto: Chibi Sasuke's Sharingan Legend", "synopsis": "Uchiha Sasuke, the brooding loner who will do anything to avenge his clan and kill his older brother\u2026 Yes, this is that story, but with a hilarious twist! In Naruto: Chibi Sasuke\u2019s Sharingan Legend, the characters and story have been flipped on their heads, all for the sake of comedy! With his Taka teammates Suigetsu, Karin and Jugo, Sasuke travels the land and gets into all kinds of wacky adventures. This is a side of Sasuke you\u2019ve never seen before. One bit of advice: do not mock the Uchiha!", "tagline": "A side of Sasuke like you've never seen before. Do not mock the Uchiha!", "rating": "t", "vanityurl": "naruto-chibi-sasukes-sharingan-l", "copyright": "UCHIHA SASUKE NO SHARINGAN DEN \u00a9 2014 by Masashi Kishimoto, Kenji Taira/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/467-SeriesHeaders_ChibiSasuke_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1576-SeriesThumbnailsManga_NARChibi_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706810341, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 24, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 24.0, "chapter_last_num": 24.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/467-SeriesHeaders_ChibiSasuke_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1576-SeriesThumbnailsManga_NARChibi_400x320.jpg", "label": null, "recommended_series_ids": "461,80,724,399,1,856,855,414", "latest_author": "By Kenji Taira, Original Concept by Masashi Kishimoto", "title_sort": "naruto: chibi sasuke's sharingan legend"}}, {"manga_series": {"id": 815, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 815, "device_id": 4, "keyart": "img/manga_series_header/815-Header_DSWaterFlame_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2267, "manga_imprint_id": null, "title": "Demon Slayer: Kimetsu no Yaiba--Stories of Water and Flame", "synopsis": "", "tagline": "Two action-packed tales from the universe of Demon Slayer: Kimetsu no Yaiba!", "rating": "t", "vanityurl": "demon-slayer-kimetsu-no-yaiba-stories-of-water-and-flame", "copyright": "KIMETSU NO YAIBA GAIDEN \u00a9 2019 by Koyoharu Gotouge, Ryoji Hirano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/815-Header_DSWaterFlame_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/815-th-Thumb_DSWaterFlame_v3_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699999174, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 4, "num_chapters_free": 1, "chapter_latest_pub_date": 1642557570, "chapter_latest_num": 4.0, "chapter_last_num": 4.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/815-Header_DSWaterFlame_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/815-th-Thumb_DSWaterFlame_v3_400x320.jpg", "label": null, "recommended_series_ids": "546,540,791,856,855", "latest_author": "Original Concept by Koyoharu Gotouge, Story and Art by Ryoji Hirano", "title_sort": "demon slayer: kimetsu no yaiba--stories of water and flame"}}, {"manga_series": {"id": 840, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 840, "device_id": 4, "keyart": "img/manga_series_header/840-WSJ2022_JustListen_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "Just Listen to the Song", "synopsis": "", "tagline": "A sincere love confession video goes wrong in the most unexpected way! Written by Chainsaw Man creator Tatsuki Fujimoto and drawn by To Strip the Flesh creator Oto Toda.", "rating": "t", "vanityurl": "just-listen-to-the-song", "copyright": "FUTSUU NI KIITEKURE \u00a9 2022 by Tatsuki Fujimoto, Oto Toda/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/840-WSJ2022_JustListen_2000x800.jpg", "link_img": "img/manga_series_link_img/840-th-WSJ2022_JustListen_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1656860310, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/840-WSJ2022_JustListen_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/840-th-WSJ2022_JustListen_400x320.jpg", "label": null, "recommended_series_ids": "580,801,827,540,791,693", "latest_author": "Story by Tatsuki Fujimoto, Art by Oto Toda", "title_sort": "just listen to the song"}}, {"manga_series": {"id": 856, "updated_at": "2023-07-06T17:40:15.000-07:00", "manga_series_common_id": 856, "device_id": 4, "keyart": "img/manga_series_header/856-Konoshinndenn_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": null, "title": "Naruto: Konoha\u2019s Story\u2014The Steam Ninja Scrolls: The Manga", "synopsis": "", "tagline": "A new story in the Naruto universe featuring Kakashi, Guy, and the new generation!", "rating": "t", "vanityurl": "naruto-konohas-story-the-steam-ninja-scrolls-the-manga", "copyright": "NARUTO KONOHA SHINDEN \u00a9 2022 by Masashi Kishimoto, Sho Hinata, Natsuo Sai/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/856-Konoshinndenn_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/856-th-Konoshinndenn_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377696, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 15, "num_chapters_free": 3, "chapter_latest_pub_date": 1685113110, "chapter_latest_num": 15.0, "chapter_last_num": 15.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/856-Konoshinndenn_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/856-th-Konoshinndenn_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "461,1,467,855,414,599", "latest_author": "Story by Masashi Kishimoto and Sho Hinata, Art by Natsuo Sai", "title_sort": "naruto: konoha\u2019s story\u2014the steam ninja scrolls: the manga"}}, {"manga_series": {"id": 855, "updated_at": "2023-07-06T17:40:42.000-07:00", "manga_series_common_id": 855, "device_id": 4, "keyart": "img/manga_series_header/855-Sasukeretsuden_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": null, "title": "Naruto: Sasuke\u2019s Story\u2014The Uchiha and the Heavenly Stardust: The Manga", "synopsis": "", "tagline": "A new story in the Naruto universe featuring Sasuke and Sakura!", "rating": "t", "vanityurl": "naruto-sasukes-story-the-uchiha-and-the-heavenly-stardust-manga", "copyright": "NARUTO SASUKE RETSUDEN \u00a9 2022 by Masashi Kishimoto, Jun Esaka, Shingo Kimura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/855-Sasukeretsuden_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/855-th-Sasukeretsuden_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707290075, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 13, "num_chapters_free": 3, "chapter_latest_pub_date": 1682175510, "chapter_latest_num": 10.0, "chapter_last_num": 10.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/855-Sasukeretsuden_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/855-th-Sasukeretsuden_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "461,1,467,856,414,599", "latest_author": "Story by Masashi Kishimoto and Jun Esaka, Art by Shingo Kimura", "title_sort": "naruto: sasuke\u2019s story\u2014the uchiha and the heavenly stardust: the manga"}}, {"manga_series": {"id": 797, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 797, "device_id": 4, "keyart": "img/manga_series_header/797-WSJ2021_issue39_OP_Vivi_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "One Piece: Naoshi Komi Covers Vivi\u2019s Adventure", "synopsis": "", "tagline": "Nisekoi mangaka Naoshi Komi covers Vivi\u2019s Adventure!", "rating": "t", "vanityurl": "one-piece-naoshi-komi-covers-vivis-adventure", "copyright": "ONE PIECE Vivi\u2019s Adventure \u00a9 2021 by Eiichiro Oda, Naoshi Komi/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/797-WSJ2021_issue39_OP_Vivi_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/797-th-WSJ2021_issue39_OP_Vivi_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1630249135, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/797-WSJ2021_issue39_OP_Vivi_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/797-th-WSJ2021_issue39_OP_Vivi_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "794,700,138,791,180,5,624,798", "latest_author": "Art by Naoshi Komi, Story by Eiichiro Oda", "title_sort": "one piece: naoshi komi covers vivi\u2019s adventure"}}, {"manga_series": {"id": 831, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 831, "device_id": 4, "keyart": "img/manga_series_header/831-WSJ2022_issue28_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2480, "manga_imprint_id": null, "title": "RuriDragon", "synopsis": "", "tagline": "(This series is currently on hiatus.) Ruri faces the usual issues: pushy classmates, annoying teachers and...waking up with dragon horns?!", "rating": "t", "vanityurl": "ruridragon", "copyright": "RURI DRAGON \u00a9 2022 by Masaoki Shindo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/831-WSJ2022_issue28_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/831-th-WSJ2022_issue28_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 6, "chapter_latest_pub_date": 1658674735, "chapter_latest_num": 6.0, "chapter_last_num": 6.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/831-WSJ2022_issue28_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/831-th-WSJ2022_issue28_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "470,795,180,819,632,464", "latest_author": "Masaoki Shindou", "title_sort": "ruridragon"}}, {"manga_series": {"id": 828, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 828, "device_id": 4, "keyart": "img/manga_series_header/828-WSJ2022_issue23_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2477, "manga_imprint_id": null, "title": "Super Smartphone", "synopsis": "", "tagline": "What secrets will Q uncover with the power of a super smartphone?", "rating": "t", "vanityurl": "super-smartphone", "copyright": "SUGOI SUMAHO \u00a9 2022 Hiroki Tomisawa, Kentaro Hidano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/828-WSJ2022_issue23_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/828-th-WSJ2022_issue23_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706817039, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 23, "num_chapters_free": 3, "chapter_latest_pub_date": 1665932310, "chapter_latest_num": 23.0, "chapter_last_num": 23.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/828-WSJ2022_issue23_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/828-th-WSJ2022_issue23_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "762,9,826,124,138,751,126", "latest_author": "Story by Hiroki Tomisawa, Art by Kentaro Hidano", "title_sort": "super smartphone"}}, {"manga_series": {"id": 241, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 241, "device_id": 4, "keyart": "img/manga_series_keyart/717-WaqWaq-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1043, "manga_imprint_id": 1, "title": "Waqwaq ", "synopsis": "Living in constant fear of attack from machines, mankind depends on the cyborg corps known as the Guardians to keep them from harm as they await the arrival of the Kami, a godlike savior with mythical red blood who can grant only one wish to one person. Now, Shio, son of a Guardian, thinks he's found the Kami--and all the Guardians are at war to get that wish!", "tagline": "In the ultimate war of man vs. machine, the fate of humanity lies with a teenage cyborg named Shio!", "rating": "t", "vanityurl": "waqwaq", "copyright": "W\u0101qw\u0101q \u00a9 2004 by Ryu Fujisaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560012, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 34, "num_chapters_free": 3, "chapter_latest_pub_date": 1658854770, "chapter_latest_num": 34.0, "chapter_last_num": 34.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5937-SeriesHeaders_WaqWaq_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/193-SeriesThumbnailsManga_WAQ__400x320.jpg", "label": null, "recommended_series_ids": "8,461,80,532,1,856,855", "latest_author": "Ryu Fujisaki", "title_sort": "waqwaq "}}, {"manga_series": {"id": 818, "updated_at": "2022-11-02T08:46:33.000-07:00", "manga_series_common_id": 818, "device_id": 4, "keyart": "img/manga_series_header/818-Header_DemonSlayer_FlowerHappiness_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2267, "manga_imprint_id": null, "title": "Demon Slayer: Kimetsu no Yaiba Novels", "synopsis": "Revisit the Demon Slayer Corps with five tales of love, friendship, and courage!", "tagline": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "rating": "a", "vanityurl": "demon-slayer-novels", "copyright": "KIMETSU NO YAIBA SHIAWASE NO HANA \u00a9 2019 by Koyoharu Gotouge, Aya Yajima/SHUEISHA Inc.   KIMETSU NO YAIBA KATAHA NO CHOU \u00a9 2019 by Koyoharu Gotouge, Aya Yajima/SHUEISHA Inc.   KIMETSU NO YAIBA KAZE NO MICHISHIRUBE \u00a9 2020 by Koyoharu Gotouge, Aya Yajima/SHUEISHA Inc.      ", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/818-Header_DemonSlayer_FlowerHappiness_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/818-th-Thumb_DemonSlayer_FlowerHappiness_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699999174, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/818-Header_DemonSlayer_FlowerHappiness_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/818-th-Thumb_DemonSlayer_FlowerHappiness_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,22,89,296,79,14,232,490,523,483,537,579,371,465,468,519", "latest_author": "Original Concept by Koyoharu Gotouge, Written by Aya Yajima", "title_sort": "demon slayer: kimetsu no yaiba novels"}}, {"manga_series": {"id": 283, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 283, "device_id": 4, "keyart": "img/manga_series_keyart/885-COWA-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 795, "manga_imprint_id": 1, "title": "COWA!", "synopsis": "Paifu, a half-vampire half-werekoala, is always getting into trouble with his best buddy, Jos\u00e9 the ghost. But when the Monster Flu sweeps through town, the fun and games are over. If the monsters don't get the medicine soon, everyone will die! With all the adults sick, it's up to the kids to save the day!", "tagline": "It\u2019s a \u201cmonster\u201d mission to save everyone\u2019s lives\u2014from the creator of Dragon Ball!", "rating": "a", "vanityurl": "cowa", "copyright": "COWA! \u00a9 1997 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 14, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 14.0, "chapter_last_num": 14.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5729-Header_COWA_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/147-SeriesThumbnailsManga_COW__400x320.jpg", "label": null, "recommended_series_ids": "774,10,466,566,362,235", "latest_author": "Akira Toriyama", "title_sort": "cowa!"}}, {"manga_series": {"id": 566, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 566, "device_id": 4, "keyart": "img/manga_series_header/566-Yamcha_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": null, "title": "Dragon Ball: That Time I Got Reincarnated as Yamcha!", "synopsis": "A Dragon Ball fan\u2019s greatest dream is getting to live in the Dragon Ball universe and fight alongside Goku and his friends! One particular fan is in for a rude awakening when he suddenly dies and gets reincarnated as everyone\u2019s favorite punching bag, Yamcha!", "tagline": "One fan's dream of being reincarnated in the Dragon Ball world turns into a nightmare!", "rating": "t", "vanityurl": "dragon-ball-that-time--got-reincarnated-as-yamcha", "copyright": "DRAGON BALL GAIDEN: TENSEI SHITARA YAMCHA DATTA KEN \u00a9 2017 by BIRD STUDIO, dragongarow LEE/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/566-Yamcha_wm.jpg", "link_img": "img/manga_series_link_img/566-th-WSJ_DBYamcha_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 3, "num_chapters_free": 2, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 3.0, "chapter_last_num": 3.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/566-Yamcha_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/566-th-WSJ_DBYamcha_400x320.jpg", "label": null, "recommended_series_ids": "774,496,466,80,856,414,5", "latest_author": "Manga by dragongarow LEE, Original Concept by Akira Toriyama", "title_sort": "dragon ball: that time i got reincarnated as yamcha!"}}, {"manga_series": {"id": 448, "updated_at": "2023-12-28T14:53:46.000-08:00", "manga_series_common_id": 448, "device_id": 4, "keyart": "img/manga_series_keyart/1521-CWO16093_SeriesBricks_BlackClover_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2087, "manga_imprint_id": 1, "title": "Black Clover", "synopsis": "Asta is a young boy who dreams of becoming the greatest mage in the kingdom. Only one problem\u2014he can't use any magic! Luckily for Asta, he receives the incredibly rare five-leaf clover grimoire that gives him the power of anti-magic. Can someone who can't use magic really become the Wizard King? One thing's for sure\u2014Asta will never give up!", "tagline": "In a world of magic, Asta, a boy with anti-magic powers, will do whatever it takes to become the Wizard King!", "rating": "t", "vanityurl": "black-clover", "copyright": "BLACK CLOVER \u00a9 2015 by Yuki Tabata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/448-th-SeriesThumbnailsManga_BLC_chapter_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707777629, "has_gns": true, "num_gns": 33, "has_chapters": true, "num_chapters": 369, "num_chapters_free": 6, "chapter_latest_pub_date": 1703429936, "chapter_latest_num": 369.0, "chapter_last_num": 369.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5391-SeriesHeader_Tier02_BLC_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/448-th-SeriesThumbnailsManga_BLC_chapter_400x320.jpg", "label": null, "recommended_series_ids": "8,580,722,842,138,540,694,249", "latest_author": "Y\u016bki Tabata", "title_sort": "black clover"}}, {"manga_series": {"id": 703, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 703, "device_id": 4, "keyart": "img/manga_series_header/703-081620_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2396, "manga_imprint_id": null, "title": "Burn the Witch", "synopsis": "Behind the world you think you know lies a land of magic and fairy tales\u2014but Reverse London isn\u2019t the pretty picture that\u2019s painted in children\u2019s books. Fairy tales have teeth, and the dedicated agents of Wing Bind are the only thing standing between you and the real story.", "tagline": "Special limited series by Bleach mangaka, Tite Kubo!", "rating": "t", "vanityurl": "burn-the-witch", "copyright": "BURN THE WITCH \u00a9 2018 by Tite Kubo/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/703-081620_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/703-th-081620_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560024, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 5, "num_chapters_free": 1, "chapter_latest_pub_date": 1601054970, "chapter_latest_num": 0.1, "chapter_last_num": 4.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/703-081620_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/703-th-081620_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "8,9,722,842,694,371,753,159", "latest_author": "Tite Kubo", "title_sort": "burn the witch"}}, {"manga_series": {"id": 318, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 318, "device_id": 4, "keyart": "img/manga_series_keyart/1025-AYNIK_obata-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1055, "manga_imprint_id": 5, "title": "All You Need is Kill", "synopsis": "When the alien Mimics invade, Keiji Kiriya is just one of many recruits shoved into a suit of battle armor called a Jacket and sent out to kill. Keiji dies on the battlefield, only to be reborn each morning to fight and die again and again. On his fifth iteration, he gets a message from a mysterious ally\u2014the female soldier known as the Full Metal Bitch. Is she the key to Keiji's escape or his final death?", "tagline": "If there\u2019s one thing worse than dying, it\u2019s coming back to die again\u2026and again\u2026", "rating": "tp", "vanityurl": "all-you-need-is-kill-manga", "copyright": "ALL YOU NEED IS KILL \u00a9 2014 by Hiroshi Sakurazaka, Ryosuke Takeuchi, yoshitoshi ABe, Takeshi Obata/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1672560015, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 17, "num_chapters_free": 3, "chapter_latest_pub_date": 1543622370, "chapter_latest_num": 17.0, "chapter_last_num": 17.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5390-SeriesHeader_Tier02_AYNIK_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/199-SeriesThumbnailsManga_AYNIK_400x320.jpg", "label": null, "recommended_series_ids": "7,826,124,451,258", "latest_author": "Art by Takeshi Obata, Original Story by Hiroshi Sakurazaka, Storyboards by Ryosuke Takeuchi, Illustrations by Yoshitoshi Abe", "title_sort": "all you need is kill"}}, {"manga_series": {"id": 784, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 784, "device_id": 4, "keyart": "img/manga_series_header/784-Header_DQAdventuresofDai_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2292, "manga_imprint_id": null, "title": "Dragon Quest: The Adventure of Dai", "synopsis": "Raised by monsters in a world scarred by battle, Dai has the heart of a hero! But it will take a grand world-spanning adventure and the help of some great friends for Dai to master the powers within him and become the hero he was always meant to be.", "tagline": "Raised by monsters in a battle-scarred world, Dai has the heart of a hero! Based on the legendary video game!", "rating": "a", "vanityurl": "dragon-quest-the-adventure-of-dai", "copyright": "DRAGON QUEST -DAI NO DAIBOKEN- SHINSOSAIROKUBAN \u00a9 SANJO RIKU, INADA KOJI/ SHUEISHA \u00a9 SQUARE ENIX CO., LTD.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/784-Header_DQAdventuresofDai_2000x800.jpg", "link_img": "img/manga_series_link_img/784-th-Thumb_DQAdventuresofDai_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560025, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 75, "num_chapters_free": 3, "chapter_latest_pub_date": 1669139970, "chapter_latest_num": 75.0, "chapter_last_num": 75.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/784-Header_DQAdventuresofDai_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/784-th-Thumb_DQAdventuresofDai_400x320.jpg", "label": null, "recommended_series_ids": "774,132,80,814,399,1,5,126", "latest_author": "Story by Riku Sanjo, Art by Koji Inada, Supervision by Yuji Horii", "title_sort": "dragon quest: the adventure of dai"}}, {"manga_series": {"id": 858, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 858, "device_id": 4, "keyart": "img/manga_series_header/858-WSJ2022_issue51_PageHeader_2000x800_1.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2495, "manga_imprint_id": null, "title": "Cipher Academy", "synopsis": "", "tagline": "Iroha Irohazaka's puzzling new life begins at Cipher Academy, a school for codebreakers!", "rating": "t", "vanityurl": "cipher-academy", "copyright": "ANGO GAKUEN NO IROHA \u00a9 2022 by NISIOISIN, Yuji Iwasaki/SHUEISHA Inc.   ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/858-WSJ2022_issue51_PageHeader_2000x800_1.jpg", "link_img": "img/manga_series_link_img/858-th-Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724935, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 58, "num_chapters_free": 6, "chapter_latest_pub_date": 1707058710, "chapter_latest_num": 58.0, "chapter_last_num": 58.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/858-WSJ2022_issue51_PageHeader_2000x800_1.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/858-th-Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "138,339,596,524,248,247", "latest_author": "Story by Nisioisin, Art by Yuji Iwasaki", "title_sort": "cipher academy"}}, {"manga_series": {"id": 781, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 781, "device_id": 4, "keyart": "img/manga_series_header/781-WSJ2021_issue30_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2443, "manga_imprint_id": null, "title": "The Hunters Guild: Red Hood", "synopsis": "In a world where fairy tales are fact and humans live in fear of werewolves, witches, and monsters, only the Hunters Guild can keep the monsters at bay. These red-hooded fighters are anything but little, and only those able to pay a king\u2019s ransom can afford their services, but it's a small price to stay alive.", "tagline": "A grim take on Grimm tales, the hunted become the hunters!", "rating": "t", "vanityurl": "the-hunters-guild-red-hood", "copyright": "RED HOOD \u00a9 2021 by Yuki Kawaguchi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/781-WSJ2021_issue30_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/781-th-WSJ2021_issue30_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1683000352, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 3, "chapter_latest_pub_date": 1636300710, "chapter_latest_num": 18.0, "chapter_last_num": 18.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/781-WSJ2021_issue30_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/781-th-WSJ2021_issue30_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "762,22,546,722,699,399,790,579", "latest_author": "Yuki Kawaguchi", "title_sort": "hunters guild: red hood"}}, {"manga_series": {"id": 859, "updated_at": "2023-04-23T12:58:26.000-07:00", "manga_series_common_id": 859, "device_id": 4, "keyart": "img/manga_series_header/859-PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2496, "manga_imprint_id": null, "title": "Ichigoki\u2019s Under Control!!", "synopsis": "", "tagline": "Ichigoki's life goes out of control when he's under control!!", "rating": "t", "vanityurl": "ichigokis-under-control", "copyright": "ICHIGOKI! SOJUCHU \u00a9 2022 by Seiji Hayashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/859-PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/859-th-Thumbnail_400x320_1.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724924, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1681657110, "chapter_latest_num": 19.0, "chapter_last_num": 19.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/859-PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/859-th-Thumbnail_400x320_1.jpg", "label": null, "recommended_series_ids": "132,733,717,721", "latest_author": "Seiji Hayashi", "title_sort": "ichigoki\u2019s under control!!"}}, {"manga_series": {"id": 857, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 857, "device_id": 4, "keyart": "img/manga_series_header/857-WSJ2022_issue50_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2494, "manga_imprint_id": null, "title": "The Ichinose Family\u2019s Deadly Sins", "synopsis": "", "tagline": "What shocking secrets has this amnestic family forgotten? The latest from the creator of Takopi's Original Sin!", "rating": "t", "vanityurl": "the-ichinose-familys-deadly-sins", "copyright": "ICHINOSEKE NO TAIZAI \u00a9 2022 by Taizan5/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/857-WSJ2022_issue50_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/857-th-111322_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706226487, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 48, "num_chapters_free": 3, "chapter_latest_pub_date": 1699196310, "chapter_latest_num": 48.0, "chapter_last_num": 48.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/857-WSJ2022_issue50_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/857-th-111322_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "580,842,540,627", "latest_author": "Taizan5", "title_sort": "ichinose family\u2019s deadly sins"}}, {"manga_series": {"id": 842, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 842, "device_id": 4, "keyart": "img/manga_series_header/842-WSJ2022_issue41_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2486, "manga_imprint_id": null, "title": "Ginka & Gl\u00fcna", "synopsis": "", "tagline": "A wannabe magician meets a magical snowman that changes her life!", "rating": "t", "vanityurl": "ginka-and-gluna", "copyright": "GINKA TO RYUNA \u00a9 2022 by Shinpei Watanabe/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/842-WSJ2022_issue41_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/842-th-WSJ2022_issue41_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1689833302, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 29, "num_chapters_free": 3, "chapter_latest_pub_date": 1681052310, "chapter_latest_num": 29.0, "chapter_last_num": 29.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/842-WSJ2022_issue41_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/842-th-WSJ2022_issue41_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "448,703,488,5,579,781,471,841,753", "latest_author": "Shinpei Watanabe", "title_sort": "ginka & gl\u00fcna"}}, {"manga_series": {"id": 821, "updated_at": "2022-12-19T15:59:35.000-08:00", "manga_series_common_id": 821, "device_id": 4, "keyart": "img/manga_series_header/821-Header_BeyondTPN_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2235, "manga_imprint_id": null, "title": "Kaiu Shirai x Posuka Demizu: Beyond The Promised Neverland", "synopsis": "From the creators of The Promised Neverland comes a collection of their best short stories. Features the pilot chapter of the series that would become their biggest hit and an epilogue chapter showing what Emma, Ray, and Norman did after the end of the main story!", "tagline": "A short story collection from the master storytellers behind The Promised Neverland!", "rating": "tp", "vanityurl": "kaiu-shirai-posuka-demizu-beyond-the-promised-neverland", "copyright": "SHIRAI KAIU\u00d7DEMIZU POSUKA TANPENSHU \u00a9 2021 by Kaiu Shirai, Posuka Demizu/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/821-Header_BeyondTPN_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/821-th-Thumb_BeyondTPN_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671494375, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 1, "chapter_latest_pub_date": 1669140030, "chapter_latest_num": 1.0, "chapter_last_num": 6.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/821-Header_BeyondTPN_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/821-th-Thumb_BeyondTPN_400x320.jpg", "label": null, "recommended_series_ids": "356,8,293,691,105,580,851,9,801,581,399,520,571,591,611,748,868,483,537,579,371,465,468,519", "latest_author": "Story by Kaiu Shirai, Art by Posuka Demizu", "title_sort": "kaiu shirai x posuka demizu: beyond the promised neverland"}}, {"manga_series": {"id": 798, "updated_at": "2023-07-06T17:41:46.000-07:00", "manga_series_common_id": 798, "device_id": 4, "keyart": "img/manga_series_header/798-WSJ2021_issue42_PageHeader_2000x800_REVISED.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2458, "manga_imprint_id": null, "title": "PPPPPP", "synopsis": "Lucky Sonoda grew up loving the piano as part of the acclaimed Otogami family, but he was considered worthless compared to his renowned and talented siblings. After being abandoned by his famous father, Lucky\u2019s determined to make his way into the piano world with his own unorthodox style!", "tagline": "Strike the right chord with this music manga!", "rating": "t", "vanityurl": "pppppp", "copyright": "PPPPPP \u00a9 2021 by Mapollo 3/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/798-WSJ2021_issue42_PageHeader_2000x800_REVISED.jpg", "link_img": "img/manga_series_link_img/798-th-WSJ2021_Issue42_Thumbnail_400x320_REVISED.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377974, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 70, "num_chapters_free": 3, "chapter_latest_pub_date": 1677423510, "chapter_latest_num": 70.0, "chapter_last_num": 70.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/798-WSJ2021_issue42_PageHeader_2000x800_REVISED.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/798-th-WSJ2021_Issue42_Thumbnail_400x320_REVISED.jpg", "label": null, "recommended_series_ids": "7,757,304,450,124,454,399,129", "latest_author": "Story and Art by Mapollo 3", "title_sort": "pppppp"}}, {"manga_series": {"id": 823, "updated_at": "2023-01-05T12:59:07.000-08:00", "manga_series_common_id": 823, "device_id": 4, "keyart": "img/manga_series_header/823-Header_JJKNovels_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2331, "manga_imprint_id": null, "title": "Jujutsu Kaisen Novels", "synopsis": "Sorcery and demon curses abound in this collection of stories spun from the world of Jujutsu Kaisen.", "tagline": "To save\u00a0the world from demons,\u00a0Yuji Itadori may have to\u00a0become one himself!", "rating": "tp", "vanityurl": "jujutsu-kaisen-novels", "copyright": "JUJUTSU KAISEN YUKU NATSU TO KAERU AKI \u00a9 2019 by Gege Akutami, Ballad Kitaguni/SHUEISHA Inc.   JUJUTSU KAISEN YOAKE NO IBARAMICHI \u00a9 2020 by Gege Akutami, Ballad Kitaguni/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/823-Header_JJKNovels_2000x800.jpg", "link_img": "img/manga_series_link_img/823-th-Thumb_JJKNovels_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694024313, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/823-Header_JJKNovels_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/823-th-Thumb_JJKNovels_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,580,851,9,801,496,648,938,527,471,821,744", "latest_author": "Original Concept by Gege Akutami, Story by Ballad Kitaguni", "title_sort": "jujutsu kaisen novels"}}, {"manga_series": {"id": 820, "updated_at": "2023-01-30T13:04:03.000-08:00", "manga_series_common_id": 820, "device_id": 4, "keyart": "img/manga_series_header/820-Header_ThusSpokeRohanKishibe_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": null, "title": "Thus Spoke Rohan Kishibe", "synopsis": "JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor, and frenetic battles, and this spin-off featuring the popular Rohan Kishibe continues the tradition!", "tagline": "A spinoff of JoJo\u2019s Bizarre Adventure featuring everyone\u2019s favorite manga artist, Rohan Kishibe!", "rating": "tp", "vanityurl": "thus-spoke-rohan-kishibe", "copyright": "KISHIBE ROHAN WA UGOKANAI \u00a9 2013 by LUCKY LAND COMMUNICATIONS/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/820-Header_ThusSpokeRohanKishibe_2000x800.jpg", "link_img": "img/manga_series_link_img/820-th-Thumb_ThusSpokeRohanKishibe_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699998923, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 8, "num_chapters_free": 1, "chapter_latest_pub_date": 1673373570, "chapter_latest_num": 8.0, "chapter_last_num": 8.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/820-Header_ThusSpokeRohanKishibe_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/820-th-Thumb_ThusSpokeRohanKishibe_400x320.jpg", "label": null, "recommended_series_ids": "22,784,339,376,469,596,768,814", "latest_author": "Story and Art by Hirohiko Araki", "title_sort": "thus spoke rohan kishibe"}}, {"manga_series": {"id": 809, "updated_at": "2023-01-17T11:22:54.000-08:00", "manga_series_common_id": 809, "device_id": 4, "keyart": "img/manga_series_header/809-SHOWHA_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2461, "manga_imprint_id": null, "title": "Show-ha Shoten!", "synopsis": "Shy Azemichi Shijima has secretly been studying the art of comedy. His outgoing classmate Taiyo Higashikata has big dreams of being funny but no follow-through. When the two team up, they just might take the comedy world by storm!", "tagline": "A pair of dreamers want to rise to the top of the comedy world! Story by Akinari Asakura and art by Takeshi Obata (Death Note)!!", "rating": "t", "vanityurl": "show-ha-shoten", "copyright": "SHOW-HA SHOTEN! \u00a9 2021 by Akinari Asakura, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/809-SHOWHA_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/809-th-SHOWA_Thumbnail_400x320v5.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724449, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 26, "num_chapters_free": 6, "chapter_latest_pub_date": 1706799537, "chapter_latest_num": 26.0, "chapter_last_num": 26.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/809-SHOWHA_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/809-th-SHOWA_Thumbnail_400x320v5.jpg", "label": null, "recommended_series_ids": "825,7,9,700,124,451,798,258", "latest_author": "Story by Akinari Asakura, Art by Takeshi Obata", "title_sort": "show-ha shoten!"}}, {"manga_series": {"id": 790, "updated_at": "2023-01-17T11:59:34.000-08:00", "manga_series_common_id": 790, "device_id": 4, "keyart": "img/manga_series_header/790-WSJ2021_issue31_PageHeader_2000x800v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2449, "manga_imprint_id": null, "title": "Neru: Way of the Martial Artist", "synopsis": "Neru doesn\u2019t feel like he quite fits in, with his off-the-grid living and his obsession with martial arts. However, thanks to a chance encounter with Akebi, a high school girl who is adept at martial arts, he now finds himself immersed in a world of fighting. But Neru\u2019s spent his whole life training in isolation. How will he stack up against a whole school of experienced martial artists?!", "tagline": "A young martial artist finds his true path!", "rating": "t", "vanityurl": "neru-way-of-the-martial-artist", "copyright": "NERU: BUGEI DOUGYOU \u00a9 2021 by Minya Hiraga/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/790-WSJ2021_issue31_PageHeader_2000x800v2.jpg", "link_img": "img/manga_series_link_img/790-th-WSJ2021_issue31_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096082, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 3, "chapter_latest_pub_date": 1636901910, "chapter_latest_num": 18.0, "chapter_last_num": 18.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/790-WSJ2021_issue31_PageHeader_2000x800v2.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/790-th-WSJ2021_issue31_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "8,794,461,553,694,79,781", "latest_author": "Minya Hiraga", "title_sort": "neru: way of the martial artist"}}, {"manga_series": {"id": 138, "updated_at": "2023-09-13T13:38:09.000-07:00", "manga_series_common_id": 138, "device_id": 4, "keyart": "img/manga_series_header/138-SeriesHeaders_HunterxHunter_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 625, "manga_imprint_id": null, "title": "Hunter x Hunter", "synopsis": "Hunters are a special breed, dedicated to tracking down treasures, magical beasts, and even other people. But such pursuits require a license, and less than one in a hundred thousand can pass the grueling qualification exam. Those who do pass gain access to restricted areas, amazing stores of information, and the right to call themselves Hunters.", "tagline": "Plucky Gon\u2019s quest to find his dad leads him into a whole world of crazy adventure.", "rating": "tp", "vanityurl": "hunter-x-hunter", "copyright": "HUNTER X HUNTER \u00a9 POT98-22", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/138-SeriesHeaders_HunterxHunter_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/138-th-87_SeriesThumbnailsManga_HxH_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1696393420, "has_gns": true, "num_gns": 37, "has_chapters": true, "num_chapters": 400, "num_chapters_free": 6, "chapter_latest_pub_date": 1671980336, "chapter_latest_num": 400.0, "chapter_last_num": 400.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/138-SeriesHeaders_HunterxHunter_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/138-th-87_SeriesThumbnailsManga_HxH_400x320.jpg", "label": null, "recommended_series_ids": "448,8,9,540,399,1,5,248,260", "latest_author": "Yoshihiro Togashi", "title_sort": "hunter x hunter"}}, {"manga_series": {"id": 811, "updated_at": "2023-02-21T17:45:12.000-08:00", "manga_series_common_id": 811, "device_id": 4, "keyart": "img/manga_series_header/811-WSJ2021_issue50_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2462, "manga_imprint_id": null, "title": "Ayashimon", "synopsis": "When the Enma Syndicate\u2019s chairman dies, Japan\u2019s supernatural underworld is turned on its head, leaving gangs of ayashimon poised on the brink of war. Urara, the late chairman\u2019s daughter, has plans to come out on top, and she\u2019s found an unlikely ally to help make it happen\u2014Maruo, a human who dreams of being a manga hero.", "tagline": "Maruo dreams of becoming a manga protagonist as he punches his way into the monstrous world of the Ayashimon Yakuza. By the creator of Hell's Paradise.", "rating": "t", "vanityurl": "ayashimon", "copyright": "AYASHIMON \u00a9 2021 by Yuji Kaku/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/811-WSJ2021_issue50_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/811-th-WSJ2021_issue50_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1693415655, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 25, "num_chapters_free": 3, "chapter_latest_pub_date": 1653836310, "chapter_latest_num": 25.0, "chapter_last_num": 25.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/811-WSJ2021_issue50_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/811-th-WSJ2021_issue50_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "553,540,79,693", "latest_author": "Yuji Kaku", "title_sort": "ayashimon"}}, {"manga_series": {"id": 762, "updated_at": "2023-03-01T16:26:37.000-08:00", "manga_series_common_id": 762, "device_id": 4, "keyart": "img/manga_series_header/762-WSJ2021_issue20_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2437, "manga_imprint_id": null, "title": "Candy Flurry", "synopsis": "After the sudden appearance of sweets-empowered people, Tokyo is crushed by giant lollipops! Superhuman sweets users wreak havoc on what\u2019s left of Tokyo, but Recette, the candy police, aim to bring order to a lawless city. Tsumugi Minase, a lollipop wielder, keeps her powers to herself to avoid a case of mistaken identity. But with Recette officers patrolling the streets, Tsumugi's life might just melt into a sour mess!", "tagline": "After Tokyo's crushed by candy, sweets turn sour in this delectable manga!", "rating": "t", "vanityurl": "candy-flurry", "copyright": "AME NO FURU \u00a9 2021 by Ippon Takegushi, Santa Mitarashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/762-WSJ2021_issue20_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/762-th-WSJ2021_issue20_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096083, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1631458710, "chapter_latest_num": 19.0, "chapter_last_num": 19.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/762-WSJ2021_issue20_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/762-th-WSJ2021_issue20_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "8,703,627,5,781,693,753", "latest_author": "Story by Ippon Takegushi, Art by Santa Mitarashi", "title_sort": "candy flurry"}}, {"manga_series": {"id": 774, "updated_at": "2023-03-07T16:25:01.000-08:00", "manga_series_common_id": 774, "device_id": 4, "keyart": "img/manga_series_keyart/2641-ATMT_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2455, "manga_imprint_id": null, "title": "Akira Toriyama's Manga Theater", "synopsis": "From Akira Toriyama, the legendary manga creator of Dragon Ball, comes this special collection of short stories spanning the first few decades of his career. Serving as both a collection of his early works and a history of his life as a manga writer and illustrator, this giant tome is packed with everything you could ever want as a fan of classic shonen manga.", "tagline": "Action-packed short stories from the creator of Dragon Ball!", "rating": "tp", "vanityurl": "akira-toriyamas-manga-theater", "copyright": "TORIYAMA AKIRA MARUSAKU GEKIJOU \u00a9 1983 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1678235101, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 21, "num_chapters_free": 3, "chapter_latest_pub_date": 1640073570, "chapter_latest_num": 21.0, "chapter_last_num": 21.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6285-Header_AkiraToriyamaMangaTheater_B_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3054-Thumb_AkiraToriyamaMangaTheater_400x320.jpg", "label": null, "recommended_series_ids": "283,132,466,80,566", "latest_author": "Akira Toriyama", "title_sort": "akira toriyama's manga theater"}}, {"manga_series": {"id": 1, "updated_at": "2023-08-04T13:27:50.000-07:00", "manga_series_common_id": 1, "device_id": 4, "keyart": "img/manga_series_header/1-MangaHeader_Naruto_2000x800_v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": 1, "title": "Naruto", "synopsis": "Naruto is a young shinobi with an incorrigible knack for mischief. He's got a wild sense of humor, but Naruto is completely serious about his mission to be the world's greatest ninja!", "tagline": "The epic adventures of the world\u2019s greatest ninja!", "rating": "t", "vanityurl": "naruto", "copyright": "NARUTO \u00a9 1999 by Masashi Kishimoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/1-MangaHeader_Naruto_2000x800_v2.jpg", "link_img": "img/manga_series_link_img/1-th-SeriesThumbnailsManga_NAR_400x320_jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706810341, "has_gns": true, "num_gns": 72, "has_chapters": true, "num_chapters": 700, "num_chapters_free": 3, "chapter_latest_pub_date": 1505087979, "chapter_latest_num": 700.0, "chapter_last_num": 700.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/1-MangaHeader_Naruto_2000x800_v2.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1-th-SeriesThumbnailsManga_NAR_400x320_jpg", "label": null, "recommended_series_ids": "8,461,138,724,855,414,599", "latest_author": "Masashi Kishimoto", "title_sort": "naruto"}}, {"manga_series": {"id": 879, "updated_at": "2023-03-23T06:59:00.000-07:00", "manga_series_common_id": 879, "device_id": 4, "keyart": "img/manga_series_header/879-image003_1.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2509, "manga_imprint_id": null, "title": "Gokurakugai", "synopsis": "", "tagline": "Professional troubleshooters will take on any case\u2014if the price is right!", "rating": "t", "vanityurl": "gokurakugai", "copyright": "GOKURAKUGAI \u00a9 2022 by Yuto Sano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/879-image003_1.jpg", "link_img": "img/manga_series_link_img/879-th-image002_1.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724372, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 15, "num_chapters_free": 6, "chapter_latest_pub_date": 1701615510, "chapter_latest_num": 14.0, "chapter_last_num": 14.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/879-image003_1.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/879-th-image002_1.jpg", "label": null, "recommended_series_ids": "8,105,763,312", "latest_author": "Yuto Sano", "title_sort": "gokurakugai"}}, {"manga_series": {"id": 878, "updated_at": "2023-03-21T09:01:13.000-07:00", "manga_series_common_id": 878, "device_id": 4, "keyart": "img/manga_series_header/878-image003.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2506, "manga_imprint_id": null, "title": "Beat & Motion", "synopsis": "", "tagline": "What will it take for disillusioned artist Tatsu to shake off the past and pursue his dreams?", "rating": "t", "vanityurl": "beat-and-motion", "copyright": "BEAT & MOTION \u00a9 2023 by Naoki Fujita/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/878-image003.jpg", "link_img": "img/manga_series_link_img/878-th-image002.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707490809, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 26, "num_chapters_free": 6, "chapter_latest_pub_date": 1707490710, "chapter_latest_num": 25.1, "chapter_last_num": 25.1, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/878-image003.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/878-th-image002.jpg", "label": null, "recommended_series_ids": "825,7,757,840", "latest_author": "Naoki Fujita", "title_sort": "beat & motion"}}, {"manga_series": {"id": 887, "updated_at": "2023-04-06T22:33:24.000-07:00", "manga_series_common_id": 887, "device_id": 4, "keyart": "img/manga_series_header/887-WSJ2023_Hells_Paradise_Special_Edition_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "Hell\u2019s Paradise: Jigokuraku\u2014Side Story: Forest of Misfortune", "synopsis": "", "tagline": "Gabimaru learns that cultivating life might be a little more difficult than killing.", "rating": "tp", "vanityurl": "hells-paradise-jigokuraku-side-story-forest-of-misfortune", "copyright": "JIGOKURAKU \u00a9 2018 by Yuji Kaku/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/887-WSJ2023_Hells_Paradise_Special_Edition_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/887-th-WSJ2023_Hells_Paradise_Special_Edition_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1680879608, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1680879510, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/887-WSJ2023_Hells_Paradise_Special_Edition_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/887-th-WSJ2023_Hells_Paradise_Special_Edition_Thumbnail_400x320.jpg", "label": null, "latest_author": "Yuji Kaku", "title_sort": "hell\u2019s paradise: jigokuraku\u2014side story: forest of misfortune"}}, {"manga_series": {"id": 707, "updated_at": "2023-04-14T17:23:00.000-07:00", "manga_series_common_id": 707, "device_id": 4, "keyart": "img/manga_series_header/707-041220_PageHeader_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2397, "manga_imprint_id": null, "title": "Moriking", "synopsis": "Shota Aikawa loves bugs. His sister, Shoko, hates them. One summer, Shota takes on the responsibility of raising Moriking, a rhinoceros beetle. But when the larva emerges from its pupa as an attractive man with a horn and crown on his head, Shota\u2019s summer becomes a lot more interesting! And Shoko\u2019s a lot more miserable\u2026", "tagline": "The king of insects will sweep you off your feet! You're going to larva this manga!", "rating": "t", "vanityurl": "moriking", "copyright": "SHINRIN OHJA MORIKING \u00a9 2020 by Tomohiro Hasegawa/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/707-041220_PageHeader_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/707-th-041220_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1681518180, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 35, "num_chapters_free": 3, "chapter_latest_pub_date": 1610898570, "chapter_latest_num": 35.0, "chapter_last_num": 35.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/707-041220_PageHeader_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/707-th-041220_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "132,724,717,694,721,628,693", "latest_author": "Tomohiro Hasegawa", "title_sort": "moriking"}}, {"manga_series": {"id": 832, "updated_at": "2023-05-03T09:53:49.000-07:00", "manga_series_common_id": 832, "device_id": 4, "keyart": "img/manga_series_header/832-Header_TatsukiFujimotoBeforeChainsawMan_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2492, "manga_imprint_id": null, "title": "Tatsuki Fujimoto Before Chainsaw Man", "synopsis": "See the origins of the mad genius who created Chainsaw Man! This short story manga collection features Tatsuki Fujimoto's earliest work. It\u2019s rough, it\u2019s raw, and it\u2019s pure Tatsuki Fujimoto!", "tagline": "See the origins of Chainsaw Man mastermind Tatsuki Fujimoto!", "rating": "tp", "vanityurl": "tatsuki-fujimoto-before-chainsaw-man", "copyright": "TATSUKI FUJIMOTO TANPENSHU 17-21 \u00a9 2021 by Tatsuki Fujimoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/832-Header_TatsukiFujimotoBeforeChainsawMan_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/832-th-Thumb_TatsukiFujimotoBeforeChainsasMan_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1688418608, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 8, "num_chapters_free": 1, "chapter_latest_pub_date": 1683046770, "chapter_latest_num": 8.0, "chapter_last_num": 8.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/832-Header_TatsukiFujimotoBeforeChainsawMan_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/832-th-Thumb_TatsukiFujimotoBeforeChainsasMan_400x320.jpg", "label": null, "recommended_series_ids": "580,796,827,540,791", "latest_author": "Tatsuki Fujimoto", "title_sort": "tatsuki fujimoto before chainsaw man"}}, {"manga_series": {"id": 827, "updated_at": "2023-05-03T15:26:13.000-07:00", "manga_series_common_id": 827, "device_id": 4, "keyart": "img/manga_series_header/827-WSJ2022_GoodbyeEri_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2508, "manga_imprint_id": null, "title": "Goodbye, Eri", "synopsis": "Young filmmaker Yuta contemplates suicide after the death of his mother, but a chance meeting with a mysterious girl will alter his life in an explosive way.", "tagline": "An emotional tour de force that takes the manga medium to new heights! From Chainsaw Man creator Tatsuki Fujimoto!", "rating": "t", "vanityurl": "goodbye-eri", "copyright": "SAYONARA ERI \u00a9 2022 by Tatsuki Fujimoto/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/827-WSJ2022_GoodbyeEri_2000x800.jpg", "link_img": "img/manga_series_link_img/827-th-WSJ2022_GoodbyeEri_1200x630_1.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1695017939, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1649602738, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/827-WSJ2022_GoodbyeEri_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/827-th-WSJ2022_GoodbyeEri_1200x630_1.jpg", "label": null, "recommended_series_ids": "580,763,540,840,791", "latest_author": "Tatsuki Fujimoto", "title_sort": "goodbye, eri"}}, {"manga_series": {"id": 860, "updated_at": "2023-05-05T13:52:52.000-07:00", "manga_series_common_id": 860, "device_id": 4, "keyart": "img/manga_series_header/860-PageHeader_2000x800_1.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2498, "manga_imprint_id": null, "title": "Fabricant 100", "synopsis": "", "tagline": "After Fabricants killed his family, Ashibi makes a deal with the strongest one of them all to get his revenge!!", "rating": "t", "vanityurl": "fabricant-100", "copyright": "JINZO NINGEN 100 \u00a9 2022 by Daisuke Enoshima/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/860-PageHeader_2000x800_1.jpg", "link_img": "img/manga_series_link_img/860-th-Thumbnail_400x320_2.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1696574212, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 36, "num_chapters_free": 3, "chapter_latest_pub_date": 1693753110, "chapter_latest_num": 36.0, "chapter_last_num": 36.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/860-PageHeader_2000x800_1.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/860-th-Thumbnail_400x320_2.jpg", "label": null, "recommended_series_ids": "580,763,339,857,693", "latest_author": "Daisuke Enoshima", "title_sort": "fabricant 100"}}, {"manga_series": {"id": 861, "updated_at": "2023-05-07T09:50:22.000-07:00", "manga_series_common_id": 861, "device_id": 4, "keyart": "img/manga_series_header/861-WSJ2023_JiangshiX_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2503, "manga_imprint_id": null, "title": "Jiangshi X", "synopsis": "", "tagline": "A young daoshi monk tries to cleanse the world of evil Jiangshi!", "rating": "t", "vanityurl": "jiangshi-x", "copyright": "KYONSHI X \u00a9 2023 by Norihiko Kurazono/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/861-WSJ2023_JiangshiX_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/861-th-WSJ2023_JiangshiX_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707794515, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 34, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663510, "chapter_latest_num": 33.0, "chapter_last_num": 33.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/861-WSJ2023_JiangshiX_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/861-th-WSJ2023_JiangshiX_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "105,580,763,796,1", "latest_author": "Norihiko Kurazono", "title_sort": "jiangshi x"}}, {"manga_series": {"id": 763, "updated_at": "2023-06-01T14:29:27.000-07:00", "manga_series_common_id": 763, "device_id": 4, "keyart": "img/manga_series_header/763-Header_ChoujinX_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2438, "manga_imprint_id": null, "title": "Choujin X", "synopsis": "Best friends Tokio and Azuma do everything together, even if most of the time it feels like Tokio is just stumbling along in Azuma\u2019s cooler, more talented footsteps. But when they\u2019re attacked one night by a superhuman mutant called a choujin, Tokio finally has a chance to shine\u2014by turning into a choujin himself!", "tagline": "The latest from Sui Ishida, creator of Tokyo Ghoul! Sometimes to fight a monster, you must become one!", "rating": "tp", "vanityurl": "choujin-x", "copyright": "CHOUJIN X \u00a9 2021 by Sui Ishida/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/763-Header_ChoujinX_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/763-th-Thumb_ChoujinX_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707764206, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 63, "num_chapters_free": 6, "chapter_latest_pub_date": 1707188310, "chapter_latest_num": 48.3, "chapter_last_num": 48.3, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/763-Header_ChoujinX_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/763-th-Thumb_ChoujinX_400x320.jpg", "label": null, "recommended_series_ids": "762,9,540,724,728,781,371,519", "latest_author": "Sui Ishida", "title_sort": "choujin x"}}, {"manga_series": {"id": 889, "updated_at": "2023-06-08T15:36:41.000-07:00", "manga_series_common_id": 889, "device_id": 4, "keyart": "img/manga_series_header/889-WSJ2023_Issue23_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2514, "manga_imprint_id": null, "title": "Do Retry", "synopsis": "", "tagline": "A scrappy young war orphan refuses to stay down!", "rating": "t", "vanityurl": "do-retry", "copyright": "DO-RETRY \u00a9 2023 by Jun Kirarazaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/889-WSJ2023_Issue23_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/889-th-WSJ2023_Issue23_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724931, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1694962710, "chapter_latest_num": 19.0, "chapter_last_num": 19.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/889-WSJ2023_Issue23_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/889-th-WSJ2023_Issue23_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "711,546,454,693", "latest_author": "Jun Kirarazaka", "title_sort": "do retry"}}, {"manga_series": {"id": 886, "updated_at": "2023-06-08T15:38:09.000-07:00", "manga_series_common_id": 886, "device_id": 4, "keyart": "img/manga_series_header/886-WSJ2023_Issue19_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2511, "manga_imprint_id": null, "title": "Tenmaku Cinema", "synopsis": "", "tagline": "Hajime Shinichi's life gets a plot twist when he's possessed by the spirit of a deceased screenwriter! From the creators of Food Wars!", "rating": "t", "vanityurl": "tenmaku-cinema", "copyright": "TENMAKU CINEMA \u00a9 2023 by Yuto Tsukuda, Shun Saeki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/886-WSJ2023_Issue19_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/886-th-WSJ2023_IssueXX_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694358029, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 21, "num_chapters_free": 3, "chapter_latest_pub_date": 1694357910, "chapter_latest_num": 21.0, "chapter_last_num": 21.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/886-WSJ2023_Issue19_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/886-th-WSJ2023_IssueXX_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "878,304,124,809", "latest_author": "Story by Yuto Tsukuda, Art by Shun Saeki", "title_sort": "tenmaku cinema"}}, {"manga_series": {"id": 888, "updated_at": "2023-06-08T15:38:43.000-07:00", "manga_series_common_id": 888, "device_id": 4, "keyart": "img/manga_series_header/888-WSJ2023_Kill_Blue_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2512, "manga_imprint_id": null, "title": "Kill Blue", "synopsis": "", "tagline": "A graduate from the school of hard knocks, hit man Ogami faces his greatest challenge yet\u2026middle school!", "rating": "tp", "vanityurl": "kill-blue", "copyright": "KILL AO \u00a9 2023 by Tadatoshi Fujimaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/888-WSJ2023_Kill_Blue_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/888-th-WSJ2023_Kill_Blue_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663639, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 40, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663529, "chapter_latest_num": 40.0, "chapter_last_num": 40.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/888-WSJ2023_Kill_Blue_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/888-th-WSJ2023_Kill_Blue_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "227,627,739,632", "latest_author": "Tadatoshi Fujimaki", "title_sort": "kill blue"}}, {"manga_series": {"id": 825, "updated_at": "2023-07-03T21:08:38.000-07:00", "manga_series_common_id": 825, "device_id": 4, "keyart": "img/manga_series_header/825-WSJ2022_issue11_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2472, "manga_imprint_id": null, "title": "Akane-banashi", "synopsis": "Shinta Arakawa wants nothing more than to pass his shin\u2019uchi exam\u2014the test that would make him a top-rank headliner and master storyteller in the traditional Japanese art of rakugo. Akane Osaki, his daughter and biggest fan, spies on him while he practices and learns his routines for herself. When rakugo master Issho Arakawa expels everyone after the exam with no explanation, a fire is lit inside Akane. From that day forth, she has had one goal\u2014to avenge her father and prove his art was worthy of the title of shin\u2019uchi.", "tagline": "Akane takes on the world of rakugo to avenge her father!", "rating": "t", "vanityurl": "akane-banashi", "copyright": "AKANE BANASHI \u00a9 2022 by Yuki Suenaga, Takamasa Moue/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/825-WSJ2022_issue11_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/825-th-WSJ2022_issue11_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707724401, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 97, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663510, "chapter_latest_num": 97.0, "chapter_last_num": 97.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/825-WSJ2022_issue11_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/825-th-WSJ2022_issue11_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "7,450,124,798,809", "latest_author": "Story by Yuki Suenaga, Art by Takamasa Moue", "title_sort": "akane-banashi"}}, {"manga_series": {"id": 911, "updated_at": "2023-07-09T07:59:00.000-07:00", "manga_series_common_id": 911, "device_id": 4, "keyart": "img/manga_series_header/911-WSJ2023_Issue29_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2518, "manga_imprint_id": null, "title": "Martial Master Asumi", "synopsis": "Nito is living a quiet high school life while taking care of his disabled grandpa, but thanks to an encounter with a schoolmate striving to be a pro female MMA fighter, his life is about to flip. Sometimes, you just have to fight! This serious MMA story is an all-out battle!", "tagline": "When bullies force Nito\u2019s hand, he decides to stop running and use his secret martial arts skills to fight for his life!", "rating": "t", "vanityurl": "martial-master-asumi", "copyright": "ASUMI KAKERU \u00a9 2023 by Kawada/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/911-WSJ2023_Issue29_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/911-th-WSJ2023_Issue29_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663641, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 32, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663510, "chapter_latest_num": 32.0, "chapter_last_num": 32.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/911-WSJ2023_Issue29_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/911-th-WSJ2023_Issue29_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "450,454,694,249", "latest_author": "Kawada", "title_sort": "martial master asumi"}}, {"manga_series": {"id": 819, "updated_at": "2023-07-18T10:00:00.000-07:00", "manga_series_common_id": 819, "device_id": 4, "keyart": "img/manga_series_keyart/2749-RomanticKiller_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2481, "manga_imprint_id": null, "title": "Romantic Killer", "synopsis": "High schooler Anzu Hoshino has a great life. Every day she plays video games, pigs out on snacks, and pets her beloved cat. But this blissful existence is turned into a confusing mess when a magical creature transports her to an altered reality bereft of her favorite things. Now she\u2019s stuck with hot guys instead! How can she possibly survive in such an awful world?!", "tagline": "To save humanity, and her cat, Anzu must go\u2026on a date?", "rating": "t", "vanityurl": "romantic-killer", "copyright": "ROMANTIC KILLER \u00a9 2019 by Wataru Momose/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1690385450, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 38, "num_chapters_free": 3, "chapter_latest_pub_date": 1689699570, "chapter_latest_num": 38.0, "chapter_last_num": 38.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6372-Header_RomanticKiller_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3314-Thumb_RomanticKiller_400x320.jpg", "label": null, "recommended_series_ids": "757,530,795,632,492,753", "latest_author": "Wataru Momose", "title_sort": "romantic killer"}}, {"manga_series": {"id": 837, "updated_at": "2023-07-18T10:00:00.000-07:00", "manga_series_common_id": 837, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2499, "manga_imprint_id": null, "title": "Tista", "synopsis": "In New York City, the NYPD struggles to track down a serial killer known as Sister Militia, who has been targeting mobsters and other criminals in the Big Apple. No one knows who Sister Militia really is except a few residents of a Catholic orphanage. Her name is Tista\u2026", "tagline": "What price will Tista pay to save the people she loves?", "rating": "tp", "vanityurl": "tista", "copyright": "TISTA \u00a9 2007 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1690563955, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 9, "num_chapters_free": 2, "chapter_latest_pub_date": 1689699570, "chapter_latest_num": 9.0, "chapter_last_num": 9.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6436-Header_Tista_v3_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3535-Thumb_Tista_400x320.jpg", "label": null, "recommended_series_ids": "356,180,78,86,632", "latest_author": "Tatsuya Endo", "title_sort": "tista"}}, {"manga_series": {"id": 912, "updated_at": "2023-07-09T07:59:00.000-07:00", "manga_series_common_id": 912, "device_id": 4, "keyart": "img/manga_series_header/912-WSJ2023_Issue30_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2520, "manga_imprint_id": null, "title": "Ice-Head Gill", "synopsis": "In the land of ashen snow known as Great Ice, a young man named Gill Sol has been chased from the capital for some reason.  On northern Urchin island, Gill uses his axe skills to work for the lord Mela, but someone has come looking for him... Use your axe to defy destiny! The adventure of the ice boy now begins!", "tagline": "In an icy world, young Gill and his axe embark on a quest to defend his father's legacy.", "rating": "t", "vanityurl": "iceheadgill", "copyright": "ICE-HEAD GILL \u00a9 2023 by Ikuo Hachiya/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/912-WSJ2023_Issue30_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/912-th-WSJ2023_Issue30_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699801294, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 20, "num_chapters_free": 3, "chapter_latest_pub_date": 1699801110, "chapter_latest_num": 20.0, "chapter_last_num": 20.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/912-WSJ2023_Issue30_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/912-th-WSJ2023_Issue30_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "711,546,454,693", "latest_author": "Ikuo Hachiya", "title_sort": "ice-head gill"}}, {"manga_series": {"id": 913, "updated_at": "2023-08-04T11:01:18.000-07:00", "manga_series_common_id": 913, "device_id": 4, "keyart": "img/manga_series_header/913-WSJ2023_Wild_Strawberry_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2522, "manga_imprint_id": null, "title": "Wild Strawberry", "synopsis": "", "tagline": "Tokyo is taken over by a parasitic outbreak that turns people into human-eating plant monsters!", "rating": "tp", "vanityurl": "wild-strawberry", "copyright": "WILD STRAWBERRY \u00a9 2023 by Ire Yonemoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/913-WSJ2023_Wild_Strawberry_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/913-th-WSJ2023_Wild_Strawberry_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707404409, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 17, "num_chapters_free": 6, "chapter_latest_pub_date": 1707404310, "chapter_latest_num": 15.0, "chapter_last_num": 15.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/913-WSJ2023_Wild_Strawberry_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/913-th-WSJ2023_Wild_Strawberry_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "580,724,371,393", "latest_author": "Ire Yonemoto", "title_sort": "wild strawberry"}}, {"manga_series": {"id": 914, "updated_at": "2023-07-17T09:35:22.000-07:00", "manga_series_common_id": 914, "device_id": 4, "keyart": "img/manga_series_header/914-WSJ2023_Naruto_Gaiden_One_Shot_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "Naruto: The Whorl Within the Spiral", "synopsis": "", "tagline": "The world of Naruto returns with an all-new one-shot about his father Minato!", "rating": "t", "vanityurl": "naruto-the-whorl-within-the-spiral", "copyright": "NARUTO GAIDEN\uff5eUZU NO NAKA NO TSUMUJIKAZE\uff5e \u00a9 2023 by Masashi Kishimoto Scott/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/914-WSJ2023_Naruto_Gaiden_One_Shot_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/914-th-WSJ2023_Naruto_Gaiden_One_Shot_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1689611722, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1689519539, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/914-WSJ2023_Naruto_Gaiden_One_Shot_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/914-th-WSJ2023_Naruto_Gaiden_One_Shot_Thumbnail_400x320.jpg", "label": null, "latest_author": "Masashi Kishimoto", "title_sort": "naruto: the whorl within the spiral"}}, {"manga_series": {"id": 921, "updated_at": "2023-08-25T08:00:00.000-07:00", "manga_series_common_id": 921, "device_id": 4, "keyart": "img/manga_series_header/921-WSJ2023_ShojoNull_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2525, "manga_imprint_id": null, "title": "Shojo Null", "synopsis": "", "tagline": "When the Gijin robots start to display sentience in the 23rd century, humans will have to answer for their injustices!", "rating": "tp", "vanityurl": "shojo-null", "copyright": "SHOJO NULL \u00a9 2023 by Kanae Nakanishi, Akima/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/921-WSJ2023_ShojoNull_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/921-th-WSJ2023_ShojoNull_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707794336, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 28, "num_chapters_free": 6, "chapter_latest_pub_date": 1707490710, "chapter_latest_num": 16.1, "chapter_last_num": 16.1, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/921-WSJ2023_ShojoNull_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/921-th-WSJ2023_ShojoNull_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "763,722,553,887,519", "latest_author": "Story by Kanae Nakanishi, Art by Akima", "title_sort": "shojo null"}}, {"manga_series": {"id": 862, "updated_at": "2023-08-02T11:53:49.000-07:00", "manga_series_common_id": 862, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2267, "manga_imprint_id": null, "title": "Demon Slayer: Kimetsu no Yaiba\u2014Corps Records", "synopsis": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "tagline": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "rating": "t", "vanityurl": "demon-slayer-corps-records", "copyright": "KIMETSU NO YAIBA KOSHIKI FAN BOOK KISATSUTAI KENBUNROKU\u30fbNI \u00a9 2021 by Koyoharu Gotouge/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699999174, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5945-SeriesHeaders_DemonSlayer_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1880-SeriesThumbnailsManga_DemonSlayer_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,22,89,296,79,14,232,490,523,483,537,579,371,465,468,519", "latest_author": "Koyoharu Gotouge", "title_sort": "demon slayer: kimetsu no yaiba\u2014corps records"}}, {"manga_series": {"id": 922, "updated_at": "2023-09-13T13:38:47.000-07:00", "manga_series_common_id": 922, "device_id": 4, "keyart": "img/manga_series_header/922-WSJ2023_Boruto_TwoBlueVortex_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2238, "manga_imprint_id": null, "title": "Boruto: Two Blue Vortex", "synopsis": "", "tagline": "Boruto is back stronger than ever, but he faces his toughest opponent yet\u2014The Hidden Leaf Village!", "rating": "t", "vanityurl": "boruto-two-blue-vortex", "copyright": "BORUTO -TWO BLUE VORTEX- \u00a92023 by Masashi Kishimoto, Mikio Ikemoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/922-WSJ2023_Boruto_TwoBlueVortex_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/922-th-WSJ2023_Boruto_TwoBlueVortex_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706223133, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 6, "chapter_latest_pub_date": 1705589910, "chapter_latest_num": 6.0, "chapter_last_num": 6.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/922-WSJ2023_Boruto_TwoBlueVortex_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/922-th-WSJ2023_Boruto_TwoBlueVortex_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "461,138,1,856,5,599,260", "latest_author": "Creator/Supervisor: Masashi Kishimoto, Art by Mikio Ikemoto", "title_sort": "boruto: two blue vortex"}}, {"manga_series": {"id": 768, "updated_at": "2023-09-05T10:00:00.000-07:00", "manga_series_common_id": 768, "device_id": 4, "keyart": "img/manga_series_header/768-Header_JoJoGW_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": null, "title": "JoJo\u2019s Bizarre Adventure: Part 5--Golden Wind", "synopsis": "The legendary Shonen Jump series is now available in deluxe hardcover editions featuring color pages! JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles.", "tagline": "The highly-acclaimed fifth arc of JoJo\u2019s Bizarre Adventure shifts the action from Japan to Italy!", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-5", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by LUCKY LAND COMMUNICATIONS/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/768-Header_JoJoGW_2000x800.jpg", "link_img": "img/manga_series_link_img/768-th-Thumb_JoJoGW_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699998923, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 155, "num_chapters_free": 3, "chapter_latest_pub_date": 1693933170, "chapter_latest_num": 155.0, "chapter_last_num": 155.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/768-Header_JoJoGW_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/768-th-Thumb_JoJoGW_400x320.jpg", "label": null, "recommended_series_ids": "22,10,138,339,814", "latest_author": "Hirohiko Araki", "title_sort": "jojo\u2019s bizarre adventure: part 5--golden wind"}}, {"manga_series": {"id": 923, "updated_at": "2023-10-01T07:00:00.000-07:00", "manga_series_common_id": 923, "device_id": 4, "keyart": "img/manga_series_header/923-WSJ2023_Issue41_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2532, "manga_imprint_id": null, "title": "MamaYuyu", "synopsis": "", "tagline": "A lost young man sets out to learn what it means to be a real hero! ", "rating": "t", "vanityurl": "mamayuyu", "copyright": "MAMAYUYU \u00a9 2023 by Yoshihiko Hayashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/923-WSJ2023_Issue41_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/923-th-WSJ2023_Issue41_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663641, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 21, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663531, "chapter_latest_num": 21.0, "chapter_last_num": 21.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/923-WSJ2023_Issue41_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/923-th-WSJ2023_Issue41_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "448,461,922,784,912,287,750,781", "latest_author": "Yoshihiko Hayashi", "title_sort": "mamayuyu"}}, {"manga_series": {"id": 864, "updated_at": "2023-09-12T11:38:02.000-07:00", "manga_series_common_id": 864, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2331, "manga_imprint_id": null, "title": "Jujutsu Kaisen: The Official Guide: Anime Season 1", "synopsis": "The official companion to the first season of the hugely popular Jujutsu Kaisen anime.", "tagline": "To save\u00a0the world from demons,\u00a0Yuji Itadori may have to\u00a0become one himself!", "rating": "tp", "vanityurl": "jujutsu-kaisen-official-anime-guide-season-one", "copyright": "TV ANIME \"JUJUTSU KAISEN\" 1ST SEASON COMPLETE BOOK \u00a9 2021 by Gege Akutami/SHUEISHA Inc. \u00a9   Gege Akutami/Shueisha, JUJUTSU KAISEN Project", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1698905210, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6037-540_MangaHeaders_JuJutsuKaisen_2000x800_jpg_wm", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2258-540_th_WSJ_JuJutsuKaisen_400x320_jpg", "label": null, "recommended_series_ids": "8,293,691,580,851,9,801,496,648,938,527,471,821,744", "latest_author": "Original Story by Gege Akutami With the Jujutsu Kaisen Production Committee", "title_sort": "jujutsu kaisen: the official guide: anime season 1"}}, {"manga_series": {"id": 869, "updated_at": "2023-09-12T11:47:54.000-07:00", "manga_series_common_id": 869, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2375, "manga_imprint_id": null, "title": "Spy x Family: The Official Guide\u2014Eyes Only", "synopsis": "The official guide to the hit manga Spy x Family!", "tagline": "An action-packed comedy about a fake family that includes a spy, an assassin and a telepath!", "rating": "tp", "vanityurl": "spy-family--the-official-guide-eyes-only", "copyright": "SPY\u00d7FAMILY KOUSHIKI FANBOOK EYES ONLY \u00a9 2022 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699999224, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6087-632_SJ_SpyFamily_2000x800_jpg_jpeg_wm", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2376-632_th_SJ_SpyFamily_400x320_jpg_jpeg", "label": null, "recommended_series_ids": "356,530,180,217,78,86,837", "latest_author": "Created by Tatsuya Endo", "title_sort": "spy x family: the official guide\u2014eyes only"}}, {"manga_series": {"id": 826, "updated_at": "2023-09-12T11:54:40.000-07:00", "manga_series_common_id": 826, "device_id": 4, "keyart": "img/manga_series_header/826-WSJ2022_issue12_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2473, "manga_imprint_id": null, "title": "Earthchild", "synopsis": "Kareri Hoshifuri is an Earthchild, a special human imbued with powers by the earth itself. As an Earthchild, she spends all her time on classified missions to keep the planet safe. But one day, she happens to save the life of high schooler Reisuke Sawada, a stubborn guy who falls helplessly in love with her!", "tagline": "An unlikely romance has planet-sized consequences!", "rating": "t", "vanityurl": "earthchild", "copyright": "CHIKYU NO KO \u00a9 2022 by Hideo Shinkai/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/826-WSJ2022_issue12_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/826-th-WSJ2022_issue12_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1698131324, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 27, "num_chapters_free": 3, "chapter_latest_pub_date": 1662303510, "chapter_latest_num": 27.0, "chapter_last_num": 27.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/826-WSJ2022_issue12_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/826-th-WSJ2022_issue12_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "318,470,718,399,739,632", "latest_author": "Hideo Shinkai", "title_sort": "earthchild"}}, {"manga_series": {"id": 260, "updated_at": "2023-12-24T08:21:19.000-08:00", "manga_series_common_id": 260, "device_id": 4, "keyart": "img/manga_series_header/260-5809_SeriesHeaders_YuYuHakusho_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 640, "manga_imprint_id": 1, "title": "YuYu Hakusho", "synopsis": "Yusuke Urameshi was a tough teen delinquent until one selfless act changed his life...by ending it. When he died saving a little kid from a speeding car, the afterlife didn't know what to do with him, so it gave him a second chance at life. Now, Yusuke is a ghost with a mission, performing good deeds at the behest of Botan, the ferrywoman of the River Styx, and Koenma, the pacifier-sucking judge of the dead.", "tagline": "A delinquent\u2019s gotta do what he\u2019s gotta do\u2026in the afterlife. From the creator of Hunter x Hunter!", "rating": "t", "vanityurl": "yuyu-hakusho", "copyright": "YUYU HAKUSHO \u00a9 Yoshihiro Togashi", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/260-5809_SeriesHeaders_YuYuHakusho_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/260-th-101_SeriesThumbnailsManga_YYH_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1703434879, "has_gns": true, "num_gns": 19, "has_chapters": true, "num_chapters": 176, "num_chapters_free": 3, "chapter_latest_pub_date": 1694624370, "chapter_latest_num": 175.0, "chapter_last_num": 175.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/260-5809_SeriesHeaders_YuYuHakusho_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/260-th-101_SeriesThumbnailsManga_YYH_400x320.jpg", "label": null, "recommended_series_ids": "8,461,922,10,80,138,861,540,284,890,198", "latest_author": "Yoshihiro Togashi", "title_sort": "yuyu hakusho"}}, {"manga_series": {"id": 924, "updated_at": "2023-12-04T12:04:25.000-08:00", "manga_series_common_id": 924, "device_id": 4, "keyart": "img/manga_series_header/924-WSJ2023_Issue42_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2533, "manga_imprint_id": null, "title": "Kagurabachi", "synopsis": "", "tagline": "Chihiro's cursed past sends him down a quest of bloody vengeance!", "rating": "tp", "vanityurl": "kagurabachi", "copyright": "KAGURABACHI \u00a9 2023 by Takeru Hokazono/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/924-WSJ2023_Issue42_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/924-th-WSJ2023_Issue42_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663641, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 20, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663535, "chapter_latest_num": 20.0, "chapter_last_num": 20.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/924-WSJ2023_Issue42_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/924-th-WSJ2023_Issue42_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "356,553,540,888,739,750", "latest_author": "Takeru Hokazono", "title_sort": "kagurabachi"}}, {"manga_series": {"id": 925, "updated_at": "2023-10-15T07:00:00.000-07:00", "manga_series_common_id": 925, "device_id": 4, "keyart": "img/manga_series_header/925-WSJ2023_Issue43_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2538, "manga_imprint_id": null, "title": "Two on Ice", "synopsis": "", "tagline": "A self-taught figure skater chases the shadow of the prodigy who inspired him!", "rating": "t", "vanityurl": "two-on-ice", "copyright": "TWO ON ICE \u00a9 2023 by Elck Itsumo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/925-WSJ2023_Issue43_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/925-th-WSJ2023_Issue43_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663642, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663510, "chapter_latest_num": 19.0, "chapter_last_num": 19.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/925-WSJ2023_Issue43_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/925-th-WSJ2023_Issue43_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "825,757,450,454", "latest_author": "Elck Itsumo", "title_sort": "two on ice"}}, {"manga_series": {"id": 580, "updated_at": "2023-10-11T15:29:55.000-07:00", "manga_series_common_id": 580, "device_id": 4, "keyart": "img/manga_series_header/580-SJMangaHeaders_ChainsawMan_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2326, "manga_imprint_id": null, "title": "Chainsaw Man", "synopsis": "Denji was a small-time devil hunter just trying to survive in\u00a0a harsh world. After being killed on a job,\u00a0he is revived by his pet devil-dog Pochita and becomes something new and dangerous\u2014Chainsaw Man!", "tagline": "Broke young man + chainsaw demon = Chainsaw Man!", "rating": "tp", "vanityurl": "chainsaw-man", "copyright": "CHAINSAW MAN \u00a9 2018 by Tatsuki Fujimoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/580-SJMangaHeaders_ChainsawMan_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/580-th-WSJ_Chainsaw_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707780817, "has_gns": true, "num_gns": 14, "has_chapters": true, "num_chapters": 153, "num_chapters_free": 6, "chapter_latest_pub_date": 1706626710, "chapter_latest_num": 154.0, "chapter_last_num": 154.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/580-SJMangaHeaders_ChainsawMan_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/580-th-WSJ_Chainsaw_400x320.jpg", "label": null, "recommended_series_ids": "796,527,138,540,724,791,249,739", "latest_author": "Tatsuki Fujimoto", "title_sort": "chainsaw man"}}, {"manga_series": {"id": 937, "updated_at": "2023-11-29T06:59:00.000-08:00", "manga_series_common_id": 937, "device_id": 4, "keyart": "img/manga_series_header/937-WSJ2023_Dosgred_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2541, "manga_imprint_id": null, "title": "Dogsred", "synopsis": "", "tagline": "Rou once chased figure skating glory, now he chases redemption in the ice hockey rink.", "rating": "t", "vanityurl": "dogsred", "copyright": "DOGSRED \u00a9 2023 by Satoru Noda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/937-WSJ2023_Dosgred_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/937-th-WSJ2023_Dosgred_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706713210, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 6, "chapter_latest_pub_date": 1706713110, "chapter_latest_num": 18.0, "chapter_last_num": 18.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/937-WSJ2023_Dosgred_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/937-th-WSJ2023_Dosgred_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "757,498,450,454,911,925", "latest_author": "Satoru Noda", "title_sort": "dogsred"}}, {"manga_series": {"id": 938, "updated_at": "2023-11-07T14:18:17.000-08:00", "manga_series_common_id": 938, "device_id": 4, "keyart": "img/manga_series_header/938-WSJ2023_Dr_Stone_4D_Science_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2257, "manga_imprint_id": null, "title": "Dr. STONE: 4D Science", "synopsis": "", "tagline": "Senku and the Kingdom of Science return in this new limited series!", "rating": "t", "vanityurl": "dr-stone-4d-science", "copyright": "Dr. STONE \u00a9 2017 by Riichiro Inagaki, Boichi/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/938-WSJ2023_Dr_Stone_4D_Science_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/938-th-WSJ2023_Dr_Stone_4D_Science_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705691248, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 3, "num_chapters_free": 2, "chapter_latest_pub_date": 1703429933, "chapter_latest_num": 3.0, "chapter_last_num": 3.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/938-WSJ2023_Dr_Stone_4D_Science_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/938-th-WSJ2023_Dr_Stone_4D_Science_Thumbnail_400x320.jpg", "label": "Limited Series!", "recommended_series_ids": "8,461,546,496,648,10,138,1", "latest_author": "Story by Riichiro Inagaki, Art by Boichi", "title_sort": "dr. stone: 4d science"}}, {"manga_series": {"id": 812, "updated_at": "2023-11-08T15:59:09.000-08:00", "manga_series_common_id": 812, "device_id": 4, "keyart": "img/manga_series_header/812-WSJ2021_issue51_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2463, "manga_imprint_id": null, "title": "Protect Me, Shugomaru!", "synopsis": "When famous heiress Sanagi learns that a faceless assassin named Skull is after her head, she needs some protection! Unfortunately for her, the first thing that Shugomaru the bodyguard does is use a grenade to kill a bee. Talk about overkill! Sanagi\u2019s life may indeed be at risk\u2014not only from an assassin, but also from her own bodyguard!", "tagline": "Being a bodyguard isn't easy, especially when you\u2019re a danger to everyone around you!  Chapter 8 is age-gated and web-only.", "rating": "t", "vanityurl": "protect-me-shugomaru", "copyright": "MAMORE! SHUGOMARU \u00a9 2021 by Daiki Ihara/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/812-WSJ2021_issue51_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/812-th-WSJ2021_issue51_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1703578121, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 25, "num_chapters_free": 3, "chapter_latest_pub_date": 1654441110, "chapter_latest_num": 26.0, "chapter_last_num": 26.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/812-WSJ2021_issue51_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/812-th-WSJ2021_issue51_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "132,10,733,694,721,627,753", "latest_author": "Daiki Ihara", "title_sort": "protect me, shugomaru!"}}, {"manga_series": {"id": 626, "updated_at": "2023-11-16T09:23:36.000-08:00", "manga_series_common_id": 626, "device_id": 4, "keyart": "img/manga_series_header/626-SJMangaHeaders_FKen_v2_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2369, "manga_imprint_id": null, "title": "F-Ken", "synopsis": "", "tagline": "Special one-shot by Yusei Matsui, creator of Assassination Classroom!", "rating": "tp", "vanityurl": "f-ken", "copyright": "F-KEN \u00a9 2019 by Yusei Matsui/SHUEISHA Inc. ", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/626-SJMangaHeaders_FKen_v2_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/626-th-SJ_FKen_NoTag_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1700155416, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 0, "chapter_latest_pub_date": 1564948650, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/626-SJMangaHeaders_FKen_v2_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/626-th-SJ_FKen_NoTag_400x320_jpg", "label": null, "recommended_series_ids": "356,496,450,721,750", "latest_author": "Yusei Matsui", "title_sort": "f-ken"}}, {"manga_series": {"id": 18, "updated_at": "2023-12-11T10:50:46.000-08:00", "manga_series_common_id": 18, "device_id": 4, "keyart": "img/manga_series_keyart/42-dgrayman_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 615, "manga_imprint_id": 1, "title": "D.Gray-man", "synopsis": "Set in a fictional 19th century England, D.Gray-man is the story of Allen Walker, a 15-year-old boy who roams the earth in search of Innocence. Washed away to unknown parts of the world after The Great Flood, Innocence is the mysterious substance used to create weapons that obliterate demons known as akuma.", "tagline": "A cursed teenage boy saves mankind one soul at a time.", "rating": "tp", "vanityurl": "d-gray-man", "copyright": "D.GRAY-MAN \u00a9 2004 by Katsura Hoshino/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1702320646, "has_gns": true, "num_gns": 28, "has_chapters": true, "num_chapters": 245, "num_chapters_free": 3, "chapter_latest_pub_date": 1701194370, "chapter_latest_num": 245.0, "chapter_last_num": 245.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5554-Tier05_SeriesHeaders_DGrayman_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/79-Tier05_SeriesThumbnails_DGR_400x320.jpg", "label": null, "recommended_series_ids": "448,8,105,722,339,730,312,125", "latest_author": "Story and Art by Katsura Hoshino", "title_sort": "d.gray-man"}}, {"manga_series": {"id": 939, "updated_at": "2023-12-17T06:59:00.000-08:00", "manga_series_common_id": 939, "device_id": 4, "keyart": "img/manga_series_header/939-WSJ2023_Issue52_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2543, "manga_imprint_id": null, "title": "Green Green Greens", "synopsis": "", "tagline": "Will Haku go for the green when he discovers his passion for golf?", "rating": "t", "vanityurl": "green-green-greens", "copyright": "GREEN GREEN GREENS \u00a9 2023 by Kento Terasaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/939-WSJ2023_Issue52_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/939-th-WSJ2023_Issue52_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663642, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 10, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663510, "chapter_latest_num": 10.0, "chapter_last_num": 10.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/939-WSJ2023_Issue52_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/939-th-WSJ2023_Issue52_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "604,223,450,454,755,499,129", "latest_author": "Kento Terasaka", "title_sort": "green green greens"}}, {"manga_series": {"id": 940, "updated_at": "2024-01-22T11:27:48.000-08:00", "manga_series_common_id": 940, "device_id": 4, "keyart": "img/manga_series_header/940-WSJ2024_Issue01_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2544, "manga_imprint_id": null, "title": "Shadow Eliminators", "synopsis": "", "tagline": "A high school student\u2019s sense of justice is put to the test when otherworldly beings break the rules of his reality!", "rating": "t", "vanityurl": "shadow-eliminators", "copyright": "RUI RUI SENKI \u00a9 2023 by Kento Amemiya/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/940-WSJ2024_Issue01_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/940-th-WSJ2024_Issue01_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663642, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 9, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663530, "chapter_latest_num": 9.0, "chapter_last_num": 9.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/940-WSJ2024_Issue01_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/940-th-WSJ2024_Issue01_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "549,8,105,796,540,732,393,260", "latest_author": "Kento Amemiya", "title_sort": "shadow eliminators"}}, {"manga_series": {"id": 854, "updated_at": "2023-12-05T10:00:00.000-08:00", "manga_series_common_id": 854, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2513, "manga_imprint_id": null, "title": "Heart Gear", "synopsis": "Nearly 200 years after the destruction of humanity in World War III, Roue lives a happy life exploring the ruins of civilization with her \u201cuncle,\u201d a robot named Zett. But when their peaceful life is threatened, Roue must trust the mysterious robot Chrome to bring her family together again.", "tagline": "In a postapocalyptic future, a girl and an android travel the world in search of utopia.", "rating": "tp", "vanityurl": "heart-gear", "copyright": "HEART GEAR \u00a9 2019 by Tsuyoshi Takaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705907230, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 13, "num_chapters_free": 3, "chapter_latest_pub_date": 1701799170, "chapter_latest_num": 13.0, "chapter_last_num": 13.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6483-Header_HeartGear_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3665-Thumb_HeartGear_400x320.jpg", "label": null, "recommended_series_ids": "549,614,623,615,599", "latest_author": "Story and Art by Tsuyoshi Takaki", "title_sort": "heart gear"}}, {"manga_series": {"id": 748, "updated_at": "2023-12-05T10:00:00.000-08:00", "manga_series_common_id": 748, "device_id": 4, "keyart": "img/manga_series_header/748-Header_MHA_TeamUp_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: Team-Up Missions", "synopsis": "The ambitious Team-Up Missions Program pairs groups of aspiring heroes with pro heroes to go on action-packed missions! Although Izuku Midoriya and his U.A. High friends are thrilled to participate, there\u2019s just one catch\u2014there\u2019s no telling who will be teamed up with whom! From top heroes to students from other classes and schools, anyone could be on the same team.", "tagline": "The aspiring heroes of My Hero Academia team up with pro heroes for action-packed missions!", "rating": "a", "vanityurl": "my-hero-academia-team-up-missions", "copyright": "BOKU NO HERO ACADEMIA TEAM UP MISSION \u00a9 2019 by Kohei Horikoshi, Yoko Akiyama/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/748-Header_MHA_TeamUp_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/748-th-Thumb_MHA_TeamUp_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1702957577, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 27, "num_chapters_free": 2, "chapter_latest_pub_date": 1701799170, "chapter_latest_num": 23.0, "chapter_last_num": 23.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/748-Header_MHA_TeamUp_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/748-th-Thumb_MHA_TeamUp_400x320.jpg", "label": null, "recommended_series_ids": "792,700,399,793,520,249", "latest_author": "Story and Art by Yoko Akiyama, Original Concept by Kohei Horikoshi", "title_sort": "my hero academia: team-up missions"}}, {"manga_series": {"id": 829, "updated_at": "2023-12-01T18:22:49.000-08:00", "manga_series_common_id": 829, "device_id": 4, "keyart": "img/manga_series_header/829-WSJ2022_issue27_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2479, "manga_imprint_id": null, "title": "Aliens Area", "synopsis": "Within the vast emptiness of space, planets like Earth exist in a lawless zone known as Aliens Area. Without the means or the technology to defend themselves, the planet is left at the mercy of extraterrestrial threats. That\u2019s why it\u2019s up to the investigators of Foreign Affairs 5 to protect the citizens of Earth from the aliens who walk among them!", "tagline": "Aliens have infiltrated Earth and some of them are up to no good!", "rating": "t", "vanityurl": "aliens-area", "copyright": "ALIENS AREA \u00a9 2022 by Fusai Naba/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/829-WSJ2022_issue27_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/829-th-WSJ2022_issue27_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705997327, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 20, "num_chapters_free": 3, "chapter_latest_pub_date": 1666537110, "chapter_latest_num": 20.0, "chapter_last_num": 20.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/829-WSJ2022_issue27_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/829-th-WSJ2022_issue27_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "461,763,796,826,488,828", "latest_author": "Story and Art by Fusai Naba", "title_sort": "aliens area"}}, {"manga_series": {"id": 813, "updated_at": "2023-12-01T15:38:23.000-08:00", "manga_series_common_id": 813, "device_id": 4, "keyart": "img/manga_series_header/813-WSJ2021_issue52_PageHeader_2000x800_2_1.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2465, "manga_imprint_id": null, "title": "Doron Dororon", "synopsis": "", "tagline": "A wannabe monster slayer gets his chance when he meets a strange being.", "rating": "t", "vanityurl": "doron-dororon", "copyright": "DORON DORORON \u00a9 2021 by Gen Osuka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/813-WSJ2021_issue52_PageHeader_2000x800_2_1.jpg", "link_img": "img/manga_series_link_img/813-th-WSJ2021_issue52_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707290359, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 36, "num_chapters_free": 3, "chapter_latest_pub_date": 1661698710, "chapter_latest_num": 36.0, "chapter_last_num": 36.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/813-WSJ2021_issue52_PageHeader_2000x800_2_1.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/813-th-WSJ2021_issue52_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "8,105,580,796,546,722,540", "latest_author": "Gen Oosuka", "title_sort": "doron dororon"}}, {"manga_series": {"id": 851, "updated_at": "2023-12-04T16:44:20.000-08:00", "manga_series_common_id": 851, "device_id": 4, "keyart": "img/manga_series_header/851-Header_CSMBuddyStories_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2326, "manga_imprint_id": null, "title": "Chainsaw Man: Buddy Stories", "synopsis": "", "tagline": "Broke young man + chainsaw demon = Chainsaw Man!", "rating": "tp", "vanityurl": "chainsaw-man-buddy-stories", "copyright": "CHAINSAW MAN BUDDY STORIES \u00a9 2021 by Tatsuki Fujimoto, Sakaku Hishikawa/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/851-Header_CSMBuddyStories_2000x800.jpg", "link_img": "img/manga_series_link_img/851-th-Thumb_CSMBuddyStories_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1701737060, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/851-Header_CSMBuddyStories_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/851-th-Thumb_CSMBuddyStories_400x320.jpg", "label": null, "recommended_series_ids": "448,527,827,323,339,376,469,596,768,814,820,791,832,371,465,468,519", "latest_author": "Original Concept by Tatsuki Fujimoto, Written by Sakaku Hishikawa", "title_sort": "chainsaw man: buddy stories"}}, {"manga_series": {"id": 871, "updated_at": "2023-12-04T16:55:19.000-08:00", "manga_series_common_id": 871, "device_id": 4, "keyart": "img/manga_series_header/871-Header_SFFamilyPortrait_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2375, "manga_imprint_id": null, "title": "Spy x Family Novels", "synopsis": "Join the beloved cast of the best-selling Spy x Family as they embark on five exciting adventures!", "tagline": "An action-packed comedy about a fake family that includes a spy, an assassin and a telepath!", "rating": "a", "vanityurl": "spy-family-novels", "copyright": "SPY x FAMILY \u00a9 2019 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/871-Header_SFFamilyPortrait_2000x800.jpg", "link_img": "img/manga_series_link_img/871-th-Thumb_SFFamilyPortrait_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1703578107, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/871-Header_SFFamilyPortrait_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/871-th-Thumb_SFFamilyPortrait_400x320.jpg", "label": null, "recommended_series_ids": "356,530,180,217,78,86,837", "latest_author": "Original Concept by Tatsuya Endo, Written by Aya Yajima", "title_sort": "spy x family novels"}}, {"manga_series": {"id": 530, "updated_at": "2023-12-19T10:00:00.000-08:00", "manga_series_common_id": 530, "device_id": 4, "keyart": "img/manga_series_keyart/1801-KaguyaLIW_ComixologyBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2263, "manga_imprint_id": null, "title": "Kaguya-sama: Love Is War", "synopsis": "", "tagline": "Two geniuses. Two brains. Two hearts. One battle. Who will confess their love first\u2026?!", "rating": "t", "vanityurl": "kaguya-sama-love-is-war", "copyright": "KAGUYA-SAMA WA KOKURASETAI\uff5eTENSAITACHI NO REN'AI ZUNO SEN\uff5e \u00a9 2015 by Aka Akasaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704438317, "has_gns": true, "num_gns": 27, "has_chapters": true, "num_chapters": 271, "num_chapters_free": 3, "chapter_latest_pub_date": 1703008770, "chapter_latest_num": 271.0, "chapter_last_num": 271.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5883-SeriesHeaders_KaguyaSama_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1800-SeriesThumbnailsManga_KaguyaSama_v2_400x320.jpg", "label": null, "recommended_series_ids": "702,795,180,78,86,492", "latest_author": "Aka Akasaka", "title_sort": "kaguya-sama: love is war"}}, {"manga_series": {"id": 866, "updated_at": "2023-12-19T16:27:39.000-08:00", "manga_series_common_id": 866, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2516, "manga_imprint_id": null, "title": "Blade of the Moon Princess", "synopsis": "Defiant and vulgar, Princess Kaguya Takenouchi is not the heir to the moon\u2019s Silver Court that her mother\u2019s retainers had hoped for. But when the empress falls ill during a wave of terrorist attacks, Kaguya resolves to do right by her people and rise to the occasion.", "tagline": "The Silver Court heir will rise to reclaim her throne. From the creator of Spy x Family!", "rating": "t", "vanityurl": "blade-of-the-moon-princess", "copyright": "GEKKABIJIN \u00a9 2010 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707777656, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 8, "num_chapters_free": 2, "chapter_latest_pub_date": 1703008770, "chapter_latest_num": 8.0, "chapter_last_num": 8.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6525-Header_BladeMoonPrincess_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3676-Thumb_BladeMoonPrincess_400x320.jpg", "label": null, "recommended_series_ids": "470,461,138,1,599,632,750,837", "latest_author": "Tatsuya Endo", "title_sort": "blade of the moon princess"}}, {"manga_series": {"id": 941, "updated_at": "2024-01-25T06:59:00.000-08:00", "manga_series_common_id": 941, "device_id": 4, "keyart": "img/manga_series_header/941-WSJ2024_Kaiju_No_8_B_Side_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2411, "manga_imprint_id": null, "title": "Kaiju No. 8: B-Side", "synopsis": "", "tagline": "Kafka wants to clean up kaiju, but not literally! Will a sudden metamorphosis stand in the way of his dream?", "rating": "t", "vanityurl": "kaiju-no-8-b-side", "copyright": "KAIJU HACHI GO SIDE B \u00a9 2024 by Naoya Matsumoto, Keiji Ando, Kentaro Hidano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/941-WSJ2024_Kaiju_No_8_B_Side_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/941-th-WSJ2024_Kaiju_No_8_B_Side_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707404409, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 4, "num_chapters_free": 4, "chapter_latest_pub_date": 1707404310, "chapter_latest_num": 4.0, "chapter_last_num": 4.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/941-WSJ2024_Kaiju_No_8_B_Side_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/941-th-WSJ2024_Kaiju_No_8_B_Side_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "763,496,722,724,5,249,739,599,632", "latest_author": "Story by Naoya Matsumoto and Keiji Ando, Art by Kentaro Hidano", "title_sort": "kaiju no. 8: b-side"}}, {"manga_series": {"id": 875, "updated_at": "2023-12-26T10:00:00.000-08:00", "manga_series_common_id": 875, "device_id": 4, "keyart": "img/manga_series_header/875-Header_DSKimetsuAcademy_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2267, "manga_imprint_id": null, "title": "Demon Slayer: Kimetsu Academy", "synopsis": "Welcome to Kimetsu Academy, a school attended by the most exceptional students you\u2019ve ever seen! This comedic spin-off of international smash hit Demon Slayer: Kimetsu no Yaiba pits Tanjiro, Nezuko, and all the rest of the Demon Slayer Corps against the trials and tribulations of student life.", "tagline": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "rating": "t", "vanityurl": "demon-slayer-kimetsu-academy", "copyright": "KIMETSU GAKUEN! \u00a9 2021 by Koyoharu Gotouge, Natsuki Hokami/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/875-Header_DSKimetsuAcademy_2000x800.jpg", "link_img": "img/manga_series_link_img/875-th-Thumb_DSKimetsuAcademy_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707723055, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 5, "num_chapters_free": 3, "chapter_latest_pub_date": 1703613570, "chapter_latest_num": 5.0, "chapter_last_num": 5.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/875-Header_DSKimetsuAcademy_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/875-th-Thumb_DSKimetsuAcademy_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,22,89,296,79,14,232,490,523,483,537,579,371,465,468,519", "latest_author": "Original Concept by Koyoharu Gotouge, Story and Art by Natsuki Hokami", "title_sort": "demon slayer: kimetsu academy"}}, {"manga_series": {"id": 694, "updated_at": "2024-01-05T06:59:00.000-08:00", "manga_series_common_id": 694, "device_id": 4, "keyart": "img/manga_series_header/694-012620_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2392, "manga_imprint_id": null, "title": "Mashle: Magic and Muscles", "synopsis": "In the magic realm, magic is everything\u2014everyone can use it, and one\u2019s skill determines their social status . Deep in the forest, oblivious to the ways of the world, lives Mash. Thanks to his daily training, he\u2019s become a fitness god. When Mash is discovered, he has no choice but to enroll in magic school where he must beat the competition without revealing his secret\u2014he can\u2019t use magic!", "tagline": "Can muscles crush magic?!", "rating": "t", "vanityurl": "mashle", "copyright": "MASHLE \u00a9 2020 by Hajime Komoto/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/694-012620_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/694-th-012620_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707778005, "has_gns": true, "num_gns": 14, "has_chapters": true, "num_chapters": 163, "num_chapters_free": 3, "chapter_latest_pub_date": 1704466738, "chapter_latest_num": 162.1, "chapter_last_num": 162.1, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/694-012620_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/694-th-012620_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "703,138,540,717,732,739,712,693", "latest_author": "Hajime Komoto", "title_sort": "mashle: magic and muscles"}}, {"manga_series": {"id": 324, "updated_at": "2024-01-08T08:51:43.000-08:00", "manga_series_common_id": 324, "device_id": 4, "keyart": "img/manga_series_keyart/1049-WT_201409GN01_brick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1854, "manga_imprint_id": 1, "title": "World Trigger", "synopsis": "Destroy thy Neighbor! A gate to another dimension has burst open, and invincible monsters called Neighbors invade Earth. Osamu Mikumo may not be the best among the elite warriors who co-opt other-dimensional technology to fight back, but along with his Neighbor friend Yuma, he\u2019ll do whatever it takes to defend life on Earth as we know it.", "tagline": "You thought your neighbors were bad\u2026but at least they\u2019re not aliens trying to kill you!", "rating": "t", "vanityurl": "world-trigger", "copyright": "WORLD TRIGGER \u00a9 2013 by Daisuke Ashihara/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706816825, "has_gns": true, "num_gns": 25, "has_chapters": true, "num_chapters": 239, "num_chapters_free": 6, "chapter_latest_pub_date": 1706799510, "chapter_latest_num": 239.0, "chapter_last_num": 239.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5557-Tier06_SeriesHeaders_WorldTrigger_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/353-SeriesThumbnailsManga_WTG_400x320.jpg", "label": null, "recommended_series_ids": "703,648,466,724,126", "latest_author": "Daisuke Ashihara", "title_sort": "world trigger"}}, {"manga_series": {"id": 890, "updated_at": "2024-01-09T12:58:34.000-08:00", "manga_series_common_id": 890, "device_id": 4, "keyart": "img/manga_series_header/890-WSJ2023_Issue24_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2515, "manga_imprint_id": null, "title": "Nue\u2019s Exorcist", "synopsis": "", "tagline": "A powerful spirit sealed in a room for 60 years awaits the right human to free her!", "rating": "t", "vanityurl": "nues-exorcist", "copyright": "NUE NO ONMYOJI \u00a9 2023 by Kota Kawae/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/890-WSJ2023_Issue24_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/890-th-WSJ2023_Issue24_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663640, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 37, "num_chapters_free": 6, "chapter_latest_pub_date": 1707663510, "chapter_latest_num": 37.0, "chapter_last_num": 37.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/890-WSJ2023_Issue24_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/890-th-WSJ2023_Issue24_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "8,105,861,371,260", "latest_author": "Kota Kawae", "title_sort": "nue\u2019s exorcist"}}, {"manga_series": {"id": 795, "updated_at": "2024-01-09T15:36:09.000-08:00", "manga_series_common_id": 795, "device_id": 4, "keyart": "img/manga_series_header/795-Kubo_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2452, "manga_imprint_id": null, "title": "Kubo Won\u2019t Let Me Be Invisible", "synopsis": "Junta Shiraishi blends into the background so much that even his classmates fail to spot him. His goal is to make the most of his high school years, but that pesky invisibility gets in the way\u2026until Nagisa Kubo notices him! Kubo\u2019s playful teasing kicks Shiraishi out of his comfort zone and begins a friendship\u2014or maybe something more?", "tagline": "You can't be invisible when the heroine has her eyes on you!", "rating": "tp", "vanityurl": "kubo-wont-let-me-be-invisible", "copyright": "KUBO SAN WA BOKU WO YURUSANAI \u00a9 2019 by Nene Yukimori/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/795-Kubo_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/795-th-Kubo_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707777712, "has_gns": true, "num_gns": 11, "has_chapters": true, "num_chapters": 144, "num_chapters_free": 3, "chapter_latest_pub_date": 1684256370, "chapter_latest_num": 78.0, "chapter_last_num": 144.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/795-Kubo_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/795-th-Kubo_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "757,265,475,717,180,632,464,492", "latest_author": "Story and Art by Nene Yukimori", "title_sort": "kubo won\u2019t let me be invisible"}}, {"manga_series": {"id": 730, "updated_at": "2024-01-16T10:00:00.000-08:00", "manga_series_common_id": 730, "device_id": 4, "keyart": "img/manga_series_keyart/2389-Moriarty_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2406, "manga_imprint_id": null, "title": "Moriarty the Patriot", "synopsis": "Before he was Sherlock\u2019s rival, Moriarty fought against the unfair class caste system in London by making sure corrupt nobility got their comeuppance. But even the most well-intentioned plans can spin out of control\u2014will Moriarty\u2019s dream of a more just and equal world turn him into a hero\u2026or a monster?", "tagline": "The untold story of Sherlock Holmes' greatest rival, Moriarty!", "rating": "tp", "vanityurl": "moriarty-the-patriot", "copyright": "YUKOKU NO MORIARTY \u00a9 2016 by Ryosuke Takeuchi, Hikaru Miyoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377869, "has_gns": true, "num_gns": 14, "has_chapters": true, "num_chapters": 56, "num_chapters_free": 1, "chapter_latest_pub_date": 1705427970, "chapter_latest_num": 56.0, "chapter_last_num": 56.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6133-Header_Moriarty_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2479-Thumb_Moriarty_400x320.jpg", "label": null, "recommended_series_ids": "448,105,18,700,627,451,471,519", "latest_author": "Storyboards by Ryosuke Takeuchi, Art by Hikaru Miyoshi, Based on the works of Sir Arthur Conan Doyle", "title_sort": "moriarty the patriot"}}, {"manga_series": {"id": 868, "updated_at": "2024-01-17T11:01:10.000-08:00", "manga_series_common_id": 868, "device_id": 4, "keyart": "img/manga_series_header/868-Header_MHAIllustrationGuide_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: The Official Easy Illustration Guide", "synopsis": "Midoriya inherits the superpower of the world\u2019s greatest hero, but greatness won\u2019t come easy.", "tagline": "Midoriya inherits the superpower of the world\u2019s greatest hero, but greatness won\u2019t come easy.", "rating": "a", "vanityurl": "my-hero-academia-official-easy-illustration-guide", "copyright": "BALL-PEN DE KAKERU! BOKU NO HERO ACADEMIA KANTAN ILLUST GUIDE \u00a9 2021 by Kohei Horikoshi, Mika Fujisawa/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/868-Header_MHAIllustrationGuide_2000x800.jpg", "link_img": "img/manga_series_link_img/868-th-Thumb_MHAIllustrationGuide_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705518070, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/868-Header_MHAIllustrationGuide_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/868-th-Thumb_MHAIllustrationGuide_400x320.jpg", "label": null, "recommended_series_ids": "461,922,496,648,938,10,80,299,446,466,566,249,391,471,821,589", "latest_author": "Created by Kohei Horikoshi, Illustrations by Mika Fujisawa", "title_sort": "my hero academia: the official easy illustration guide"}}, {"manga_series": {"id": 942, "updated_at": "2024-01-19T15:25:17.000-08:00", "manga_series_common_id": 942, "device_id": 4, "keyart": "img/manga_series_header/942-WSJ2024_MonstersOneShot_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2549, "manga_imprint_id": null, "title": "Monsters", "synopsis": "", "tagline": "A classic one-shot from the legendary creator of One Piece!", "rating": "t", "vanityurl": "monsters", "copyright": "WANTED! EIICHIRO ODA TANPENSHU \u00a9 1998 by Eiichiro Oda/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/942-WSJ2024_MonstersOneShot_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/942-th-WSJ2024_MonstersOneShot_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705946408, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 1, "chapter_latest_pub_date": 1705946310, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/942-WSJ2024_MonstersOneShot_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/942-th-WSJ2024_MonstersOneShot_Thumbnail_400x320.jpg", "label": null, "latest_author": "Eiichiro Oda", "title_sort": "monsters"}}, {"manga_series": {"id": 844, "updated_at": "2024-01-30T10:00:00.000-08:00", "manga_series_common_id": 844, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2505, "manga_imprint_id": null, "title": "Dark Gathering", "synopsis": "After a dangerous encounter with a malevolent spirit, Keitaro Gentoga wants nothing to do with the supernatural. Unfortunately for this reluctant ghost magnet, he\u2019s stuck helping Yayoi Hozuki, a strange young girl who\u2019s intent on capturing Japan\u2019s most terrifying ghosts and ghouls.", "tagline": "An unwilling magnet for the supernatural and a ghost-hunting girl join forces.", "rating": "tp", "vanityurl": "dark-gathering", "copyright": "DARK GATHERING \u00a9 2019 by Kenichi Kondo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707466004, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 2, "chapter_latest_pub_date": 1706637570, "chapter_latest_num": 19.0, "chapter_last_num": 19.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6437-Header_DarkGathering_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3536-Thumb_DarkGathering_400x320.jpg", "label": null, "recommended_series_ids": "105,754,18,312,393,744", "latest_author": "Story and Art by Kenichi Kondo", "title_sort": "dark gathering"}}, {"manga_series": {"id": 895, "updated_at": "2024-01-30T10:00:00.000-08:00", "manga_series_common_id": 895, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2534, "manga_imprint_id": null, "title": "Marriage Toxin", "synopsis": "Poison Master Hikaru Gero is about to take on his most challenging assignment yet\u2014getting married! But after training his entire life to become one of the world\u2019s deadliest assassins, Gero couldn\u2019t be more clueless when it comes to the art of dating. Thankfully, marriage swindler Mei Kinosaki knows everything there is to know about love, and together, this unlikely pair is going to do whatever it takes to get Gero hitched\u2014even if they have to take on the entire criminal underworld in the process!", "tagline": "Gero may be a master assassin, but he\u2019s not exactly killing it in the romance department!", "rating": "tp", "vanityurl": "marriage-toxin", "copyright": "MARRIAGETOXIN \u00a9 2022 by Joumyaku, Mizuki Yoda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377725, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 3, "chapter_latest_pub_date": 1706637570, "chapter_latest_num": 6.0, "chapter_last_num": 6.0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6610-Header_MarriageToxin_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3882-Thumb_MarriageToxin_400x320.jpg", "label": null, "recommended_series_ids": "356,627,739,616,849", "latest_author": "Story by Joumyaku, Art by Mizuki Yoda", "title_sort": "marriage toxin"}}, {"manga_series": {"id": 943, "updated_at": "2024-02-02T06:59:00.000-08:00", "manga_series_common_id": 943, "device_id": 4, "keyart": "img/manga_series_header/943-WSJ2024_AstroBaby_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2552, "manga_imprint_id": null, "title": "Astro Baby", "synopsis": "", "tagline": "Billy\u2019s come back home to protect those he loves from a parasitic alien infestation!", "rating": "tp", "vanityurl": "astro-baby", "copyright": "ASTRO BABY \u00a9 2024 by Shiro Moriya/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/943-WSJ2024_AstroBaby_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/943-th-WSJ2024_AstroBaby_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707490810, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 2, "num_chapters_free": 2, "chapter_latest_pub_date": 1707490710, "chapter_latest_num": 2.0, "chapter_last_num": 2.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/943-WSJ2024_AstroBaby_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/943-th-WSJ2024_AstroBaby_Thumbnail_400x320.jpg", "label": "New Series!", "latest_author": "Shiro Moriya", "title_sort": "astro baby"}}, {"manga_series": {"id": 953, "updated_at": "2024-02-11T06:59:00.000-08:00", "manga_series_common_id": 953, "device_id": 4, "keyart": "img/manga_series_header/953-WSJ2024_Issue11_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2553, "manga_imprint_id": null, "title": "Super Psychic Policeman Chojo", "synopsis": "", "tagline": "A psychic cop and his rookie partner tackle neighborhood crimes in their own wonky way!", "rating": "t", "vanityurl": "super-psychic-policeman-chojo", "copyright": "CHOUJUN! CHOUJOU SENPAI \u00a9 2024 by Shun Numa/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/953-WSJ2024_Issue11_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/953-th-WSJ2024_Issue11_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663610, "has_gns": false, "num_gns": 0, "has_chapters": true, "num_chapters": 1, "num_chapters_free": 1, "chapter_latest_pub_date": 1707663539, "chapter_latest_num": 1.0, "chapter_last_num": 1.0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/953-WSJ2024_Issue11_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/953-th-WSJ2024_Issue11_Thumbnail_400x320.jpg", "label": "New Series!", "latest_author": "Shun Numa", "title_sort": "super psychic policeman chojo"}}], "archive_info": {"ok": 1, "subscription_type": "sj", "archive_limit": 100, "archive_reset_seconds": 86400, "download_limit": 100, "download_expire_seconds": 604800}, "store_row_info": [{"type": "series_ids", "row_title": "What's Hot This Week! ", "series_ids": [249, 540, 924, 739, 953, 5, 399, 580]}, {"type": "series_ids", "row_title": "For the Love of Battle", "series_ids": [260, 580, 724, 198, 138, 922, 520, 540, 249]}, {"type": "series_ids", "row_title": "Jump Into a New Series!", "series_ids": [943, 937, 941, 953, 939, 925, 923, 940, 924]}, {"type": "series_ids", "row_title": "Anime Tie-ins!", "series_ids": [399, 693, 105, 546, 5, 496, 694]}, {"type": "series_ids", "row_title": "Fan Favorites!", "series_ids": [256, 519, 1, 9, 304, 471, 371, 461]}, {"type": "series_ids", "row_title": "Romance is in the Air!", "series_ids": [795, 530, 757, 475, 492, 180, 819, 265]}, {"type": "series_ids", "row_title": "Year of the Dragon", "series_ids": [703, 942, 80, 566, 10, 784, 466]}, {"type": "series_ids", "row_title": "They Came From Outer Space!", "series_ids": [362, 599, 488, 687, 648, 866, 943]}, {"type": "series_ids", "row_title": "The Way of the Blade", "series_ids": [448, 924, 79, 123, 8, 22, 941]}, {"type": "series_ids", "row_title": "Spies x Assassins x Detectives", "series_ids": [227, 751, 739, 837, 953, 627, 632, 895, 730]}], "announcement": {}, "header_promos": {"home_screen": [{"image_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6644-image003.jpg", "target_url": null}], "offer_screen": [{"image_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6028-SJsummer_SJsales_2000x800_jpg", "target_url": null}]}, "geo": "--"}