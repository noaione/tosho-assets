{"ok": 1, "data": [{"featured_section_series_id": "__not_defined__"}, {"featured_section_series": "__not_defined__"}, {"featured_section_title": "__not_defined__"}, {"featured_chapter_offset_start": 0}, {"featured_chapter_offset_end": -1}, {"manga": {"id": 15964, "manga_common_id": 15964, "device_id": 4, "published": true, "publication_date": "2018-12-25T00:11:19.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvblackandwhite/PBW08.zip", "description": "Team Plasma's King, N, has shaken Black's faith in his relationship with his Pok\u00e9mon. But just when Black is about to call it quits and go home, he gets a last-minute chance earn the final Pok\u00e9mon badge he needs to be eligible to compete in the Pok\u00e9mon League! Black's friends Iris and Cheren are competing too. Unfortunately, kind and thoughtful Cheren is starting to change...\n\nWill Black fufill his dream of winning the Pok\u00e9mon League?", "thumb": "manga/thumbs/thumb-63834-PokemonAdvBW_GN08_Web-4.jpg", "featured": false, "created_at": "2018-10-11T11:41:22.000-07:00", "updated_at": "2020-03-13T19:39:28.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 15965, "new": false, "manga_series_common_id": 574, "title": "Pok\u00e9mon Adventures: Black and White, Vol. 8", "volume": 8, "chapter": null, "parent_manga_common_id": null, "numpages": 219, "author": "Story by Hidenori Kusaka  Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-0601-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 22, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: Black and White", "series_vanityurl": "pokemon-adventures-black-and-white", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460844, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmadvblackandwhite08", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-63834-PokemonAdvBW_GN08_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 22, "epoch_pub_date": 1545725479, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: black and white", "new_pokemon": true}}, {"manga": {"id": 15965, "manga_common_id": 15965, "device_id": 4, "published": true, "publication_date": "2018-12-25T00:11:25.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvblackandwhite/PBW09.zip", "description": "Pok\u00e9mon Trainer Black meets White, a Pok\u00e9mon Trainer who runs a growing talent agency for performing Pok\u00e9mon. Will Black catch show biz fever too? Meanwhile, mysterious Team Plasma is urging everyone to release their beloved Pok\u00e9mon into the wild!\n\nThe Pok\u00e9mon League is under attack, and someone needs to save all the kidnapped gym leaders\u2026 But Black can\u2019t come to the rescue because he and Legendary Pok\u00e9mon Reshiram are battling N and Legendary Pok\u00e9mon Zekrom! Then Team Plasma leader Ghetsis absorbs one of our heroes into the Light Stone itself\u2026!", "thumb": "manga/thumbs/thumb-63838-PokemonAdvBW_GN09_Web-4.jpg", "featured": false, "created_at": "2018-10-11T11:43:29.000-07:00", "updated_at": "2020-06-07T23:26:45.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": false, "manga_series_common_id": 574, "title": "Pok\u00e9mon Adventures: Black and White, Vol. 9", "volume": 9, "chapter": null, "parent_manga_common_id": null, "numpages": 203, "author": "Story by Hidenori Kusaka  Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-0602-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: Black and White", "series_vanityurl": "pokemon-adventures-black-and-white", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460844, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmadvblackandwhite09", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-63838-PokemonAdvBW_GN09_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1545725485, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: black and white", "new_pokemon": true}}, {"manga": {"id": 16022, "manga_common_id": 16022, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:10:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM02.zip", "description": "Somewhere in this world, there is a temple created by the People of the Water. The Sea Temple contains a hidden treasure, the Sea Crown, but no one has ever seen it because the temple is protected by a secret mechanism. So it drifts through the vast ocean undetected, waiting... waiting...\n\nAsh and Pikachu learn about the legend and meet Jackie, a Pok\u00e9mon Ranger on a mission to protect a Manaphy egg and find the temple. The Phantom, a nefarious pirate, plans to obtain the Sea Crown and take over the world--but first he needs the Manaphy egg. What is the Sea Crown? How does Manaphy's mysterious power connect it to the Sea Temple? Can Ash help Jackie complete his mission?", "thumb": "manga/thumbs/thumb-64066-PokemonMovie_Ranger_Web-4.jpg", "featured": false, "created_at": "2018-11-15T11:43:35.000-08:00", "updated_at": "2020-07-10T09:51:55.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16027, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon Ranger and the Temple of the Sea", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 193, "author": "Makoto Mizobuchi", "issue_date": 0, "isbn13": "978-1-9747-0910-6", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460846, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmvierangersea01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64066-PokemonMovie_Ranger_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749400, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16023, "manga_common_id": 16023, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:11:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM01.zip", "description": "While touring Alamos Town, home of the Space-Time Towers, Ash and his friends discover that the town's special garden has been ransacked. Some of the townspeople immediately blame the destruction on Darkrai, a sinister-looking Pok\u00e9mon said to haunt the garden. But is Darkrai alone responsible for all the strange happenings around town? And what is its true nature? Will Ash and his friends discover the answers in time to save Alamos Town?", "thumb": "manga/thumbs/thumb-64070-PokemonMovie_Darkrai_Web-4.jpg", "featured": false, "created_at": "2018-11-15T11:54:41.000-08:00", "updated_at": "2014-12-31T16:00:00.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16027, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon: The Rise of Darkrai", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Ryo Takamisaki", "issue_date": 0, "isbn13": "978-1-9747-0911-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460846, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmvierisedarkrai01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64070-PokemonMovie_Darkrai_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749460, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16024, "manga_common_id": 16024, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:11:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM03.zip", "description": "Shaymin is a peaceful Gratitude Pok\u00e9mon, lives happily in forests and fields of flowers. But one day Shaymin is accidentally drawn into a battle between the Legendary Pok\u00e9mon Giratina and Dialga. Whisked away far from home, Shaymin is found by Ash, Dawn and Brock, who soon discover that this new Pok\u00e9mon is full of surprises! Of course Team Rocket wants to get their hands on Shaymin, and so does a mysterious man named Zero. Even Giratina is in hot pursuit of this little Pok\u00e9mon--and just what do Giratina and Shaymin have to do with the dimension known as the Reverse World?", "thumb": "manga/thumbs/thumb-64074-PokemonMovie_Giratina_Web-4.jpg", "featured": false, "created_at": "2018-11-15T14:59:25.000-08:00", "updated_at": "2020-07-10T09:52:10.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16027, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon: Giratina & the Sky Warrior!", "volume": 3, "chapter": null, "parent_manga_common_id": null, "numpages": 190, "author": "Makoto Hijioka", "issue_date": 0, "isbn13": "978-1-9747-0912-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460847, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmviegiratinaskywarrior01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64074-PokemonMovie_Giratina_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749460, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16025, "manga_common_id": 16025, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:11:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM04.zip", "description": "Long ago, the mighty Pok\u00e9mon Arceus was betrayed by a human it trusted. Now Arceus is back for revenge! Dialga, Palkia and Giratina must join forces to help Ash, Dawn and their new friends Kevin and Sheena stop Arceus from destroying humankind. But it may already be too late!", "thumb": "manga/thumbs/thumb-64078-PokemonMovie_Arceus_Web-4.jpg", "featured": false, "created_at": "2018-11-15T15:03:16.000-08:00", "updated_at": "2020-07-10T09:52:30.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16027, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon: Arceus and the Jewel of Life", "volume": 4, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Makoto Mizobuchi", "issue_date": 0, "isbn13": "978-1-9747-0913-7", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460847, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmviearceusjewellife01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64078-PokemonMovie_Arceus_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749460, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16026, "manga_common_id": 16026, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:11:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM05.zip", "description": "Ash and Pikachu travel to Crown City to watch the Pok\u00e9mon Baccer World Cup competition, but it\u2019s not all fun and games. The powerful Pok\u00e9mon Zoroark has attacked! Ash and his friends must solve an old mystery before they can stop Zoroark and save the people of Crown City!", "thumb": "manga/thumbs/thumb-64082-PokemonMovie_Zoroark_Web-4.jpg", "featured": false, "created_at": "2018-11-15T15:07:56.000-08:00", "updated_at": "2020-08-05T23:05:11.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16453, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon: the Movie: Zoroark: Master of Illusions", "volume": 5, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Momota Inoue", "issue_date": 0, "isbn13": "978-1-9747-0914-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460848, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmviezoroarkillusions01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64082-PokemonMovie_Zoroark_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749460, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16027, "manga_common_id": 16027, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:12:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM07.zip", "description": "Keldeo is determined to become a Sword of Justice, but to do so, Keldeo must defeat Kyurem, one of the most powerful Dragon-type Pok\u00e9mon in the world. Keldeo challenges Kyurem, unleashing a destructive force even Ash and Pikachu may be powerless to stop!", "thumb": "manga/thumbs/thumb-64086-PokemonMovie_Kyurem_Web-4.jpg", "featured": false, "created_at": "2018-11-15T15:24:57.000-08:00", "updated_at": "2020-07-10T09:53:23.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16032, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon the Movie: Kyurem vs. the Sword of Justice", "volume": 7, "chapter": null, "parent_manga_common_id": null, "numpages": 192, "author": "Momota Inoue", "issue_date": 0, "isbn13": "978-1-9747-0915-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460848, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmviekyuremswordjustice01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64086-PokemonMovie_Kyurem_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749520, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16028, "manga_common_id": 16028, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:12:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM08.zip", "description": "After being gone for 300 million years, the Pok\u00e9mon Genesect reappears in the world! When a group of Genesect try to take over the home of other Pok\u00e9mon, however, genetically modified Mewtwo engages them in a fierce battle! Will ExtremeSpeed be enough to win this fight?", "thumb": "manga/thumbs/thumb-64090-PokemonMovie_Genesect_Web-4.jpg", "featured": false, "created_at": "2018-11-15T15:35:14.000-08:00", "updated_at": "2020-07-10T09:53:42.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16027, "new": false, "manga_series_common_id": 576, "title": "Pokemon the Movie: Genesect and the Legend Awakened", "volume": 8, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Momota Inoue", "issue_date": 0, "isbn13": "978-1-9747-0916-8", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460848, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmviegenesectlegendawakened01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64090-PokemonMovie_Genesect_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749520, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16029, "manga_common_id": 16029, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:12:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM06.zip", "description": "Discover the spirit of victory!\n\nAsh and his friends visit the town of Eindoak, where they meet the Victory Pok\u00e9mon, Victini! But there is someone in the town who wants to trap Victini and use its powers for his own misguided plans. Can Ash awaken the Legendary Pok\u00e9mon Zekrom to help him save Victini?", "thumb": "manga/thumbs/thumb-64094-PokemonMovie_Victini_Web-4-OXNCiOz-QTRYykDfTTmzIg.jpg", "featured": false, "created_at": "2018-11-15T15:39:11.000-08:00", "updated_at": "2020-07-10T09:53:02.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16027, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon the Movie: White\u2014Victini and Zekrom", "volume": 6, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Momota Inoue", "issue_date": 0, "isbn13": "978-1-9747-0917-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460849, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmviewhitevictinizekrom01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64094-PokemonMovie_Victini_Web-4-OXNCiOz-QTRYykDfTTmzIg.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749520, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16030, "manga_common_id": 16030, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:13:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM10.zip", "description": "In a desert city by the sea, Ash, Pikachu and their friends meet the Mythical Pok\u00e9mon Hoopa, who can summon all sorts of things\u2014including people and Pok\u00e9mon\u2014through its magic rings. The little Mischief Pok\u00e9mon likes to use this talent to play harmless tricks on people\u2026but when its true power is released, it loses control and becomes the towering and terrifying Hoopa Unbound! Long ago, a brave hero stopped its rampage by confining its power in a special bottle. Now that the bottle has been rediscovered, Hoopa must confront its greatest fear! Can Ash help his new friend overcome the darkness within\u2014or will this dangerous struggle erupt into a clash of legends?", "thumb": "manga/thumbs/thumb-64098-PokemonMovie_Hoopa_Web-4.jpg", "featured": false, "created_at": "2018-11-15T15:56:59.000-08:00", "updated_at": "2020-07-10T09:54:51.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16027, "new": false, "manga_series_common_id": 576, "title": "Pokemon the Movie: Hoopa and the Clash of Ages", "volume": 10, "chapter": null, "parent_manga_common_id": null, "numpages": 189, "author": "Gin Kamimura", "issue_date": 0, "isbn13": "978-1-9747-0918-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460849, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmviehoopaclashages01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64098-PokemonMovie_Hoopa_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749580, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16031, "manga_common_id": 16031, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:10:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM11.zip", "description": "Ash meets the Mythical Pok\u00e9mon Volcanion when it crashes down from the sky, creating a cloud of dust\u2014and a mysterious force binds the two of them together! Volcanion despises humans and tries to get away, but it\u2019s forced to drag Ash along as it continues its rescue mission. They arrive in a city of cogs and gears, where a corrupt minister has stolen the ultimate invention: the Artificial Pok\u00e9mon Magearna, created 500 years ago. He plans to use its mysterious power to take control of this mechanical kingdom! Can Ash and Volcanion work together to rescue Magearna? One of the greatest battles in Pok\u00e9mon history is about to unfold!", "thumb": "manga/thumbs/thumb-64102-PokemonMovie_Volcanion_Web-4.jpg", "featured": false, "created_at": "2018-11-15T16:11:19.000-08:00", "updated_at": "2020-07-10T09:55:05.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16453, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon the Movie: Volcanion and the Mechanical Marvel", "volume": 11, "chapter": null, "parent_manga_common_id": null, "numpages": 193, "author": "Kemon Kawamoto", "issue_date": 0, "isbn13": "978-1-9747-0919-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460850, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmvievolcanionmechanicalmarvel01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64102-PokemonMovie_Volcanion_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1548749400, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 16032, "manga_common_id": 16032, "device_id": 4, "published": true, "publication_date": "2019-01-29T00:13:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM09.zip", "description": "In the underground Diamond Domain, where many Carbink live, the Mythical Pok\u00e9mon Diancie serves as Princess. The Heart Diamond that sustains the land is beginning to fall apart, and Diancie is not yet strong enough to create a new one. Can Ash and his friends help Diancie discover its true power and save the Diamond Domain?!", "thumb": "manga/thumbs/thumb-64106-PokemonMovie_Diancie_Web-4.jpg", "featured": false, "created_at": "2018-11-15T16:32:41.000-08:00", "updated_at": "2020-07-10T09:54:12.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16026, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon the Movie: Diancie and the Cocoon of Destruction", "volume": 9, "chapter": null, "parent_manga_common_id": null, "numpages": 197, "author": "Kenji Kitamura", "issue_date": 0, "isbn13": "978-1-9747-0920-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460850, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmviedianciecocoondestruction01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-64106-PokemonMovie_Diancie_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1548749580, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 18134, "manga_common_id": 18134, "device_id": 4, "published": true, "publication_date": "2019-06-11T00:10:00.000-07:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PTM12.zip", "description": "Ash and Pikachu arrive in Fula City at the start of its renowned Wind Festival and meet Margo, the mayor\u2019s daughter, and Dr. Hawthorn, a scientist. Through the magic of Dr. Hawthorn\u2019s virtual reality technology, our friends experience the history of the city firsthand and meet Mythical Pok\u00e9mon Zeraora and Legendary Pok\u00e9mon Lugia. Why did one of them fly off, never to be seen again\u2026? And will it return in the film Pok\u00e9mon the Movie: The Power of Us?!", "thumb": "manga/thumbs/thumb-72505-PokemonTheMovieThePowerOfUsZeraorasStory_Web-4.jpg", "featured": false, "created_at": "2019-04-26T11:12:08.000-07:00", "updated_at": "2020-07-10T09:55:32.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16027, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon the Movie: The Power of Us--Zeraora's Story", "volume": 12, "chapter": null, "parent_manga_common_id": null, "numpages": 123, "author": "Kemon Kawamoto", "issue_date": 0, "isbn13": "978-1-9747-1215-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 12, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460851, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmviethepowerofus01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-72505-PokemonTheMovieThePowerOfUsZeraorasStory_Web-4.jpg", "entitled": null, "new_following": null, "preview_pages": 12, "epoch_pub_date": 1560237000, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 20589, "manga_common_id": 20589, "device_id": 4, "published": true, "publication_date": "2021-04-13T00:10:58.000-07:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvblacktwowhitetwo/PB2W203.zip", "description": "Castelia City has been frozen over by Kyurem and is now locked in ice. White is still searching for the whereabouts of Black, who has been missing since the battle against Ghetsis. And Fennel has come up with a theory that the Light Stone is actually connected to the Pok\u00e9mon Dream World. Will Black, White, Blake and Whitley be able to team up in time to stop Ghetsis, Colress and Kyurem at the Giant Chasm?", "thumb": "manga/thumbs/thumb-82325-PokemonAdvB2W2_GN03_C1_Web-4-Y6peoQmxJppCDUk4wKngLg.jpg", "featured": false, "created_at": "2020-05-10T23:10:27.000-07:00", "updated_at": "2021-04-12T14:46:56.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 22544, "new": false, "manga_series_common_id": 575, "title": "Pok\u00e9mon Adventures: Black 2 & White 2, Vol. 3", "volume": 3, "chapter": null, "parent_manga_common_id": null, "numpages": 207, "author": "Story by Hidenori Kusaka   Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-2107-8", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: Black 2 & White 2", "series_vanityurl": "pokemon-adventures-black-2-white-2", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460851, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmadvblacktwowhitetwo03", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-82325-PokemonAdvB2W2_GN03_C1_Web-4-Y6peoQmxJppCDUk4wKngLg.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1618297858, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: black 2 & white 2", "new_pokemon": true}}, {"manga": {"id": 20830, "manga_common_id": 20830, "device_id": 4, "published": true, "publication_date": "2020-08-11T00:10:00.000-07:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PMC22.zip", "description": "When researchers discover a fossil of the Mythical Pok\u00e9mon Mew, they bring upon themselves a creation that goes against the very laws of nature: Mewtwo, a Legendary Pok\u00e9mon intended for use as a tool of destruction. But as Mewtwo becomes aware of its existence, it begins to resent its human creators and seeks revenge\u2014and Ash, Pikachu and their friends find themselves at the center of its rampage! With the future of the Pok\u00e9mon world at stake, will our heroes be able to overcome Mewtwo\u2019s challenge\u2026and will Mewtwo be able to find a new meaning for its life?", "thumb": "manga/thumbs/thumb-83289-PokemonTheMovieMewtwoStrikesBackEvolution_C1_Web-4-pvxxzhIKp-lYRUrM7S5dEA.jpg", "featured": false, "created_at": "2020-06-25T23:03:01.000-07:00", "updated_at": "2020-07-30T16:45:07.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon: Mewtwo Strikes Back\u2014Evolution", "volume": 14, "chapter": null, "parent_manga_common_id": null, "numpages": 172, "author": "Machito Gomi", "issue_date": 0, "isbn13": "978-1-9747-2208-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 17, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460852, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonmewtwoevolution01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-83289-PokemonTheMovieMewtwoStrikesBackEvolution_C1_Web-4-pvxxzhIKp-lYRUrM7S5dEA.jpg", "entitled": null, "new_following": null, "preview_pages": 17, "epoch_pub_date": 1597129800, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 22544, "manga_common_id": 22544, "device_id": 4, "published": true, "publication_date": "2021-08-10T00:11:01.000-07:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvblacktwowhitetwo/B2W204.zip", "description": "It\u2019s the exciting final volume of the Black 2 & White 2 arc! Blake catches up to Colress, the current leader of Team Plasma, while Whitley, accompanied by the reformed Team Plasma member N, corners Ghetsis, whose plan is to self-destruct, destroying everything around him. Both Trainers must defeat their enemies and save the world, but it won\u2019t be easy.\n\nCan the four Pok\u00e9dex holders\u2014Blake, Whitley, Black and White\u2014handle the greatest crisis ever to hit the Unova region?!", "thumb": "manga/thumbs/thumb-90145-PokemonAdvB2W2_GN04_C1_Web-4-rt8egAI3fcct2TgJh4fxVw.jpg", "featured": false, "created_at": "2021-05-10T23:16:55.000-07:00", "updated_at": "2021-07-27T18:12:12.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": false, "manga_series_common_id": 575, "title": "Pok\u00e9mon Adventures: Black 2 & White 2, Vol. 4", "volume": 4, "chapter": null, "parent_manga_common_id": null, "numpages": 122, "author": "Story by Hidenori Kusaka   Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-2881-7", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 12, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: Black 2 & White 2", "series_vanityurl": "pokemon-adventures-black-2-white-2", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460852, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmadvblacktwowhitetwo04", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-90145-PokemonAdvB2W2_GN04_C1_Web-4-rt8egAI3fcct2TgJh4fxVw.jpg", "entitled": null, "new_following": null, "preview_pages": 12, "epoch_pub_date": 1628579461, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: black 2 & white 2", "new_pokemon": true}}, {"manga": {"id": 22730, "manga_common_id": 22730, "device_id": 4, "published": true, "publication_date": "2022-01-18T00:12:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonpocketsunmoon/PPC05.zip", "description": "Litten, Rockruff, Popplio, Bewear and many more of your favorite Pok\u00e9mon of the Alola region, with classic favorites like Pikachu and Psyduck, romp through the pages of this hysterical collection of Pok\u00e9mon four-panel comics! Plus fun puzzles and creative projects!", "thumb": "manga/thumbs/thumb-90889-PokemonPocketComics_SunAndMoon_C1_Web-4-wb_Lojg09lNhPzmmNsK4XQ.jpg", "featured": false, "created_at": "2021-06-16T23:07:54.000-07:00", "updated_at": "2022-01-12T11:13:35.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": false, "manga_series_common_id": 773, "title": "Pok\u00e9mon Pocket Comics: Sun & Moon", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 190, "author": "Santa Harukaze", "issue_date": 0, "isbn13": "978-1-9747-2964-7", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Pocket Comics", "series_vanityurl": "pokemon-pocket-comics", "subscription_type": null, "rating": "a", "show_chapter": false, "show_volume": false, "rtl": false, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460853, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonpocketcomicssunmoon01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-90889-PokemonPocketComics_SunAndMoon_C1_Web-4-wb_Lojg09lNhPzmmNsK4XQ.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1642493520, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon pocket comics", "new_pokemon": true}}, {"manga": {"id": 22739, "manga_common_id": 22739, "device_id": 4, "published": true, "publication_date": "2021-11-09T00:10:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonjourneystheseries/PMJ01.zip", "description": "When Ash and Pikachu hitch a ride aboard the Legendary Pok\u00e9mon Lugia, they discover another kid is also on board! Meet Goh, who wants to catch every Pok\u00e9mon ever\u2014including Mew! Can Ash and Goh make their lofty dreams come true?", "thumb": "manga/thumbs/thumb-90925-PokemonJourneys_GN01_C1_Web-4-f0931vk3iK8cHLXal4wUSg.jpg", "featured": false, "created_at": "2021-06-16T23:18:55.000-07:00", "updated_at": "2022-06-28T16:56:37.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 22966, "new": false, "manga_series_common_id": 779, "title": "Pok\u00e9mon Journeys, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 192, "author": "Story and Art by Machito Gomi, Original Concept by Satoshi Tajiri, Junichi Masuda & Ken Sugimori, Supervised by Tsunekazu Ishihara", "issue_date": 0, "isbn13": "978-1-9747-2955-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Journeys: The Series", "series_vanityurl": "pokemon-journeys-the-series", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460854, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonjourneys01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-90925-PokemonJourneys_GN01_C1_Web-4-f0931vk3iK8cHLXal4wUSg.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1636445400, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon journeys: the series", "new_pokemon": true}}, {"manga": {"id": 22781, "manga_common_id": 22781, "device_id": 4, "published": true, "publication_date": "2022-02-08T00:11:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonthemoviemanga/PMJ01.zip", "description": "Hidden deep in a secret jungle, far from any humans, there is a Pok\u00e9mon paradise\u2014beautiful and peaceful, but governed by strict rules. Ten years ago, the Mythical Pok\u00e9mon Zarude found the abandoned baby Koko and decided to break the rules, raising him as its own child. Since then, Koko has been isolated from other humans\u2026until now.", "thumb": "manga/thumbs/thumb-91093-PokemonTheMovieSecretsOfTheJungleAnotherBeginning_C1_Web-4-K0MpmMD8f-yBnJqC1o8ZCw.jpg", "featured": false, "created_at": "2021-06-25T14:22:10.000-07:00", "updated_at": "2022-01-25T14:26:02.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 16022, "new": false, "manga_series_common_id": 576, "title": "Pok\u00e9mon the Movie: Secrets of the Jungle\u2014Another Beginning", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 126, "author": "Story and Art by Teruaki Mizuno, Original Concept by Satoshi Tajiri, Supervision by Tetsuo Yajima, Script by Atsuhiro Tomioka, Tetsuo Yajima", "issue_date": 0, "isbn13": "978-1-9747-2988-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 13, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon the Movie (manga)", "series_vanityurl": "pokemon-the-movie-manga", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": false, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460854, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmthemoviejungle01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-91093-PokemonTheMovieSecretsOfTheJungleAnotherBeginning_C1_Web-4-K0MpmMD8f-yBnJqC1o8ZCw.jpg", "entitled": null, "new_following": null, "preview_pages": 13, "epoch_pub_date": 1644307860, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon the movie (manga)", "new_pokemon": true}}, {"manga": {"id": 22798, "manga_common_id": 22798, "device_id": 4, "published": true, "publication_date": "2022-01-11T00:10:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvxy/PXY01.zip", "description": "Now it\u2019s up to X to use the skills that made him champion to defeat the threat looming over Vaniville Town.\n\nCan the reclusive X and the determined Y help their friends ward off two Legendary Pok\u00e9mon and the mysterious Team Flare?!", "thumb": "manga/thumbs/thumb-91161-PokemonAdvXY_GN01_C1_Web-4--YWVvYzGYKNtHJ98uJ1Vpw.jpg", "featured": false, "created_at": "2021-06-29T23:11:58.000-07:00", "updated_at": "2021-12-21T10:22:03.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 23309, "new": false, "manga_series_common_id": 789, "title": "Pok\u00e9mon Adventures: X\u2022Y, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 303, "author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-2999-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: X\u2022Y", "series_vanityurl": "pokemon-adventures-x-y", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460854, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonadvxy01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-91161-PokemonAdvXY_GN01_C1_Web-4--YWVvYzGYKNtHJ98uJ1Vpw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1641888600, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: x\u2022y", "new_pokemon": true}}, {"manga": {"id": 22966, "manga_common_id": 22966, "device_id": 4, "published": true, "publication_date": "2022-03-08T00:10:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonjourneystheseries/PMJ02.zip", "description": "Ash takes part in the Pok\u00e9mon World Coronation Series to further his plans to become a Pok\u00e9mon Master! Meanwhile, Goh and his new partner Raboot continue to strengthen their bond. But will Raboot be willing to help Goh catch one of every type of Pok\u00e9mon?!", "thumb": "manga/thumbs/thumb-91833-PokmeonJourneys_GN02_C1_Web-4-i1b-CQANMeZ6fOmbg1rLJA.jpg", "featured": false, "created_at": "2021-07-15T00:26:49.000-07:00", "updated_at": "2022-06-28T16:56:31.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 23320, "new": false, "manga_series_common_id": 779, "title": "Pok\u00e9mon Journeys, Vol. 2", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 180, "author": "Story and Art by Machito Gomi, Original Concept by Satoshi Tajiri, Junichi Masuda & Ken Sugimori, Supervised by Tsunekazu Ishihara", "issue_date": 0, "isbn13": "978-1-9747-3166-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Journeys: The Series", "series_vanityurl": "pokemon-journeys-the-series", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460855, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonjourneys02", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-91833-PokmeonJourneys_GN02_C1_Web-4-i1b-CQANMeZ6fOmbg1rLJA.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1646727000, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon journeys: the series", "new_pokemon": true}}, {"manga": {"id": 23309, "manga_common_id": 23309, "device_id": 4, "published": true, "publication_date": "2022-05-10T00:10:00.000-07:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvxy/PXY02.zip", "description": "The mystery of Mega Evolution begins to unravel, and new Pok\u00e9mon join X and Y and their friends as they face an intensifying battle! Meanwhile, the headquarters of the Mega Evolution family, the Tower of Mastery, is under attack by a mysterious figure in a mechanical suit! Who is the masked marauder named Essentia?!", "thumb": "manga/thumbs/thumb-93205-PokemonAdvXY_GN02_C1_Web-4-qPmxdvH7LqL3A6U753-Mcw.jpg", "featured": false, "created_at": "2021-09-28T23:09:16.000-07:00", "updated_at": "2022-04-27T11:27:04.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 23883, "new": false, "manga_series_common_id": 789, "title": "Pok\u00e9mon Adventures: X\u2022Y, Vol. 2", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 198, "author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-3280-7", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: X\u2022Y", "series_vanityurl": "pokemon-adventures-x-y", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460855, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonadvxy02", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-93205-PokemonAdvXY_GN02_C1_Web-4-qPmxdvH7LqL3A6U753-Mcw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1652166600, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: x\u2022y", "new_pokemon": true}}, {"manga": {"id": 23320, "manga_common_id": 23320, "device_id": 4, "published": true, "publication_date": "2022-07-12T00:11:00.000-07:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonjourneystheseries/PMJ03_update.zip", "description": "Ash and Goh encounter Legendary Pok\u00e9mon, including Suicune and Eternatus, as they continue their investigation into the Dynamax phenomenon happening in the Galar region. But their biggest challenge involves one of the most powerful Legendary Pok\u00e9mon ever! Can Ash and Goh handle a battle against Mewtwo?!", "thumb": "manga/thumbs/thumb-93249-PokemonJourneys_GN03_C1_Web-4-gyTeC4sAtm-EEeks9waomw.jpg", "featured": false, "created_at": "2021-09-28T23:13:56.000-07:00", "updated_at": "2022-06-29T10:10:00.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 23926, "new": false, "manga_series_common_id": 779, "title": "Pok\u00e9mon Journeys, Vol. 3", "volume": 3, "chapter": null, "parent_manga_common_id": null, "numpages": 182, "author": "Story and Art by Machito Gomi, Original Concept by Satoshi Tajiri, Junichi Masuda & Ken Sugimori, Supervised by Tsunekazu Ishihara", "issue_date": 0, "isbn13": "978-1-9747-3331-6", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Journeys: The Series", "series_vanityurl": "pokemon-journeys-the-series", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460857, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonjourneys03", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-93249-PokemonJourneys_GN03_C1_Web-4-gyTeC4sAtm-EEeks9waomw.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1657609860, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon journeys: the series", "new_pokemon": true}}, {"manga": {"id": 23883, "manga_common_id": 23883, "device_id": 4, "published": true, "publication_date": "2022-09-13T00:10:22.000-07:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvxy/PXY03.zip", "description": "Two Pok\u00e9mon Trainers, Korrina and her grandfather Gurkinn, escape from the Tower of Mastery only to be confronted by Team Flare. Is the mysterious new Trainer who suddenly appears with a Gardevoir their friend or foe?! Meanwhile, X and his friends head for Cyllage City in search of Y\u2019s mother but encounter Yvette, Y\u2019s Sky Trainer school classmate, along the way.\n\nCan X and Y handle being dragged into a Sky Battle?!", "thumb": "manga/thumbs/thumb-95501-PokemonAdvXY_GN03_C1_Web-4-Z7aVXfVrUZ6KZGMZzHY3vw.jpg", "featured": false, "created_at": "2022-01-21T23:40:27.000-08:00", "updated_at": "2022-08-31T10:04:48.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 24818, "new": false, "manga_series_common_id": 789, "title": "Pok\u00e9mon Adventures: X\u2022Y, Vol. 3", "volume": 3, "chapter": null, "parent_manga_common_id": null, "numpages": 199, "author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-3496-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: X\u2022Y", "series_vanityurl": "pokemon-adventures-x-y", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460857, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonadvxy03", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-95501-PokemonAdvXY_GN03_C1_Web-4-Z7aVXfVrUZ6KZGMZzHY3vw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1663053022, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: x\u2022y", "new_pokemon": true}}, {"manga": {"id": 23926, "manga_common_id": 23926, "device_id": 4, "published": true, "publication_date": "2022-11-08T00:10:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonjourneystheseries/PMJ04.zip", "description": "In the final volume of Pok\u00e9mon Journeys, Ash progresses further in the Pok\u00e9mon World Coronation Series. If he can advance to Ultra Class, he\u2019ll become an even more powerful Trainer! Meanwhile, Goh prepares to join a group that could help him get the most elusive Pok\u00e9mon. Will Goh finally catch Mew?", "thumb": "manga/thumbs/thumb-95673-PokemonJourneys_GN04_C1_Web-4-kw8lr26PqIYti4GJE2BDIA.jpg", "featured": false, "created_at": "2022-01-23T23:27:45.000-08:00", "updated_at": "2022-10-26T07:45:50.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": false, "manga_series_common_id": 779, "title": "Pok\u00e9mon Journeys, Vol. 4", "volume": 4, "chapter": null, "parent_manga_common_id": null, "numpages": 187, "author": "Story and Art by Machito Gomi, Original Concept by Satoshi Tajiri, Junichi Masuda & Ken Sugimori, Supervised by Tsunekazu Ishihara", "issue_date": 0, "isbn13": "978-1-9747-3557-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Journeys: The Series", "series_vanityurl": "pokemon-journeys-the-series", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1668527868, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonjourneys04", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-95673-PokemonJourneys_GN04_C1_Web-4-kw8lr26PqIYti4GJE2BDIA.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1667895000, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon journeys: the series", "new_pokemon": true}}, {"manga": {"id": 24818, "manga_common_id": 24818, "device_id": 4, "published": true, "publication_date": "2023-01-10T00:10:24.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvxy/PXY04.zip", "description": "The Legendary Pok\u00e9mon Xerneas has transformed into a great tree, and whoever can possess it will also be in control of immense power! Meanwhile, Trainer Korrina has lost her battle, as well as her Key Stone. Feeling responsible for Korrina\u2019s defeat, X retreats once more into his home. Will X\u2019s friends ever get him to come back out of hiding again?!", "thumb": "manga/thumbs/thumb-99241-PokemonAdvXY_GN04_C1_Web-4-oH39EVQGZuDC2AfzF1ymGA.jpg", "featured": false, "created_at": "2022-06-15T23:08:26.000-07:00", "updated_at": "2022-12-27T10:30:41.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 25570, "new": false, "manga_series_common_id": 789, "title": "Pok\u00e9mon Adventures: X\u2022Y, Vol. 4", "volume": 4, "chapter": null, "parent_manga_common_id": null, "numpages": 202, "author": "Story by Hidenori Kusaka    Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-3727-7", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: X\u2022Y", "series_vanityurl": "pokemon-adventures-x-y", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1674460859, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonadvxy04", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-99241-PokemonAdvXY_GN04_C1_Web-4-oH39EVQGZuDC2AfzF1ymGA.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1673338224, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: x\u2022y", "new_pokemon": true}}, {"manga": {"id": 25531, "manga_common_id": 25531, "device_id": 4, "published": true, "publication_date": "2023-05-02T00:11:00.000-07:00", "expiration_date": 0, "free": false, "url": "manga/shojobeat/myspecialone/MSO02.zip", "description": "Introverted high schooler Sahoko gathers her courage and confesses her love to the nation\u2019s top idol, Kouta Kirigaya! But he tells her he won\u2019t ever have a special someone\u2026 Not long after, Kirigaya is hit with a scandal and ends up staying with Sahoko\u2019s family!", "thumb": "manga/thumbs/thumb-102093-MySpecialOne_GN02_C1_Website-4-A_oxeea0VjAQfj5mDKqcmA.jpg", "featured": true, "created_at": "2022-09-21T23:07:56.000-07:00", "updated_at": "2023-04-19T13:49:47.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 25684, "new": false, "manga_series_common_id": 835, "title": "My Special One, Vol. 2", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 175, "author": "Story and Art by Momoko Koda", "issue_date": 0, "isbn13": "978-1-9747-3913-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "My Special One", "series_vanityurl": "my-special-one", "subscription_type": "vm", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704096084, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.myspecialone02", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-102093-MySpecialOne_GN02_C1_Website-4-A_oxeea0VjAQfj5mDKqcmA.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1683011460, "epoch_exp_date": null, "series_title_sort": "my special one", "new_pokemon": false}}, {"manga": {"id": 25559, "manga_common_id": 25559, "device_id": 4, "published": true, "publication_date": "2023-05-02T00:10:00.000-07:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/onepunchman/OPM25.zip", "description": "In an underground labyrinth, Puri-Puri Prisoner encounters Garo, who is now stronger than ever! Meanwhile, Saitama teams up with the hero Flash while both are lost underground. On the surface, Nyaan toys with Class-A heroes until Drive Knight appears!", "thumb": "manga/thumbs/thumb-102205-OnePunchMan_GN25_C1_Website-4-P2khxYD97evrhIt04xfuFQ.jpg", "featured": true, "created_at": "2022-09-26T23:12:04.000-07:00", "updated_at": "2023-04-19T13:55:26.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 26268, "new": false, "manga_series_common_id": 249, "title": "One-Punch Man, Vol. 25", "volume": 25, "chapter": null, "parent_manga_common_id": null, "numpages": 192, "author": "Story by ONE, Art by Yusuke Murata", "issue_date": 0, "isbn13": "978-1-9747-3923-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "One-Punch Man", "series_vanityurl": "one-punch-man", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1683221233, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.onepunchman25", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-102205-OnePunchMan_GN25_C1_Website-4-P2khxYD97evrhIt04xfuFQ.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1683011400, "epoch_exp_date": null, "series_title_sort": "one-punch man", "new_pokemon": false}}, {"manga": {"id": 25562, "manga_common_id": 25562, "device_id": 4, "published": true, "publication_date": "2023-05-02T00:15:00.000-07:00", "expiration_date": 0, "free": false, "url": "manga/shojobeat/skipbeat/SKB48.zip", "description": "Who is that masked man? Or is it masked men?! There\u2019s at least one cosplaying show biz executive running around Tokyo and maybe more\u2014and not even the president of LME knows exactly who they are or what they\u2019re doing in Japan. But Kyoko keeps running into them! Is drawing their attention a good thing, or is there something more than just a new drama afoot?!", "thumb": "manga/thumbs/thumb-102217-SkipBeat_GN48_C1_Website-4-Md2l-kNxj_Mh8oJerJ6e8w.jpg", "featured": true, "created_at": "2022-09-26T23:12:59.000-07:00", "updated_at": "2023-04-30T17:00:00.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": false, "manga_series_common_id": 17, "title": "Skip\u30fbBeat!, Vol. 48", "volume": 48, "chapter": null, "parent_manga_common_id": null, "numpages": 151, "author": "Story and Art by Yoshiki Nakamura", "issue_date": 0, "isbn13": "978-1-9747-3918-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 15, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Skip\u2022Beat!", "series_vanityurl": "skip-beat", "subscription_type": null, "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1685602945, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.skipbeat48", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-102217-SkipBeat_GN48_C1_Website-4-Md2l-kNxj_Mh8oJerJ6e8w.jpg", "entitled": null, "new_following": null, "preview_pages": 15, "epoch_pub_date": 1683011700, "epoch_exp_date": null, "series_title_sort": "skip\u2022beat!", "new_pokemon": false}}, {"manga": {"id": 25570, "manga_common_id": 25570, "device_id": 4, "published": true, "publication_date": "2023-05-09T09:51:53.000-07:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvxy/PXY05.zip", "description": "In Kalos, X prepares for a rematch against Blue, a senior Pok\u00e9dex holder. Meanwhile, the scheming Lysandre and Team Flare are up to no good at the mysterious Pok\u00e9mon Village. Plus, a Mega Evolution occurs, the powerful Sundial is uncovered, and the Order Pok\u00e9mon appears. What other new dangers await X, Y, and their friends?", "thumb": "manga/thumbs/thumb-102249-PokemonAdvXY_GN05_C1_Website-4-c2ksGqHEDJoqRjD7zypW1A.jpg", "featured": false, "created_at": "2022-09-27T23:07:11.000-07:00", "updated_at": "2023-04-19T13:59:15.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 26288, "new": false, "manga_series_common_id": 789, "title": "Pok\u00e9mon Adventures: X\u2022Y, Vol. 5", "volume": 5, "chapter": null, "parent_manga_common_id": null, "numpages": 202, "author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-3931-8", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: X\u2022Y", "series_vanityurl": "pokemon-adventures-x-y", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1694502488, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonadvxy05", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-102249-PokemonAdvXY_GN05_C1_Website-4-c2ksGqHEDJoqRjD7zypW1A.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1683651113, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: x\u2022y", "new_pokemon": true}}, {"manga": {"id": 26288, "manga_common_id": 26288, "device_id": 4, "published": true, "publication_date": "2023-09-12T00:08:12.000-07:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pokemonadvxy/PXY06.zip", "description": "The arrival of Mega Evolution Pok\u00e9mon, each with more than one Mega Evolution, causes a massive battle to break out at the Pok\u00e9mon Village! As the X\u2022Y arc comes to a clashing finale, the fate of the Kalos region hangs on the outcome.\n\nCan X and Y defeat Lysandre and save Kalos?!", "thumb": "manga/thumbs/thumb-105121-PokemonAdvXY_GN06_C1_Web-4-LBa3lXHzwIVnRnF5CtlBDg.jpg", "featured": false, "created_at": "2023-02-02T01:05:52.000-08:00", "updated_at": "2023-08-02T14:20:17.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": false, "manga_series_common_id": 789, "title": "Pok\u00e9mon Adventures: X\u2022Y, Vol. 6", "volume": 6, "chapter": null, "parent_manga_common_id": null, "numpages": 260, "author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-4159-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: X\u2022Y", "series_vanityurl": "pokemon-adventures-x-y", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1694502492, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pokemonadvxy06", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105121-PokemonAdvXY_GN06_C1_Web-4-LBa3lXHzwIVnRnF5CtlBDg.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1694502492, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: x\u2022y", "new_pokemon": true}}, {"manga": {"id": 26432, "manga_common_id": 26432, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:15.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/aliensarea/AAA01.zip", "description": "After losing his parents in a freak accident, high schooler Tatsumi Tatsunami is doing his best just to get by and provide for his younger siblings. But his life gets a whole lot more complicated when he\u2019s attacked by aliens! Saved by a mysterious man named Sharaku who belongs to the even more mysterious organization called Foreign Affairs 5, Tatsumi will have an important decision to make if he wants to figure out why these aliens are after his life!", "thumb": "manga/thumbs/thumb-105697-AliensArea_DigitalGN01_C1_Web-4-AznVmHTnLqerq7p-7O9YLA.jpg", "featured": false, "created_at": "2023-02-12T23:27:21.000-08:00", "updated_at": "2023-12-20T12:25:04.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39448, "new": true, "manga_series_common_id": 829, "title": "Aliens Area, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Story and Art by Fusai Naba", "issue_date": 0, "isbn13": "978-1-9747-3830-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Aliens Area", "series_vanityurl": "aliens-area", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997295, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.aliensarea01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105697-AliensArea_DigitalGN01_C1_Web-4-AznVmHTnLqerq7p-7O9YLA.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1705997295, "epoch_exp_date": null, "series_title_sort": "aliens area", "new_pokemon": false}}, {"manga": {"id": 39370, "manga_common_id": 39370, "device_id": 4, "published": true, "publication_date": "2024-01-09T00:09:44.000-08:00", "expiration_date": 0, "free": false, "url": "manga/sunday/case closed/CSC89.zip", "description": "UNIDENTIFIED FORENSIC OBJECTS\nEarly Christmas shopping turns less than jolly when the Junior Detective League stumbles on a murder at a department store. Rachel\u2019s self-proclaimed karate rival sends Mr. Moore on the trail of a UFO. And Officer Yumi has to solve a complex puzzle to find out how her boyfriend, Japan\u2019s top shogi champ, really feels about her. Meanwhile, Conan pursues an even more baffling mystery: the identity of \u201cMary,\u201d the reclusive little girl with connections to some of his most enigmatic allies\u2026", "thumb": "manga/thumbs/thumb-157449-CaseClosed_GN89_C1_Web-4-6UrzFd5I9IwG3jAEY_tnAg.jpg", "featured": false, "created_at": "2023-06-09T00:47:16.000-07:00", "updated_at": "2023-12-20T13:57:19.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39511, "new": true, "manga_series_common_id": 218, "title": "Case Closed, Vol. 89", "volume": 89, "chapter": null, "parent_manga_common_id": null, "numpages": 182, "author": "Story and Art by Gosho Aoyama", "issue_date": 0, "isbn13": "978-1-9747-4427-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Case Closed", "series_vanityurl": "case-closed", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1706205600, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.caseclosed89", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157449-CaseClosed_GN89_C1_Web-4-6UrzFd5I9IwG3jAEY_tnAg.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1704787784, "epoch_exp_date": null, "series_title_sort": "case closed", "new_pokemon": false}}, {"manga": {"id": 39371, "manga_common_id": 39371, "device_id": 4, "published": true, "publication_date": "2024-01-09T00:09:35.000-08:00", "expiration_date": 0, "free": false, "url": "manga/sunday/komicommunicate/KCC28.zip", "description": "Now that Komi and Tadano are an official couple, Komi\u2019s dad wants another chance to bond with his daughter\u2019s boyfriend, this time on a sauna date! It\u2019s just as awkward as it sounds, but Tadano manages to make things even more cringe when heat-induced delirium prompts him to ask Komi\u2019s dad the worst question in the history of questions\u2014how do you kiss a girl?", "thumb": "manga/thumbs/thumb-157453-KomiCantCommunicate_GN28_C1_Web-4-eRfCVTK1qMM4bUBo56DQHw.jpg", "featured": false, "created_at": "2023-06-09T00:50:56.000-07:00", "updated_at": "2023-12-20T13:59:34.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39505, "new": true, "manga_series_common_id": 600, "title": "Komi Can\u2019t Communicate, Vol. 28", "volume": 28, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Story and Art by Tomohito Oda", "issue_date": 0, "isbn13": "978-1-9747-4430-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Komi Can\u2019t Communicate", "series_vanityurl": "komi-cant-communicate", "subscription_type": "vm", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706217068, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.komi28", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157453-KomiCantCommunicate_GN28_C1_Web-4-eRfCVTK1qMM4bUBo56DQHw.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1704787775, "epoch_exp_date": null, "series_title_sort": "komi can\u2019t communicate", "new_pokemon": false}}, {"manga": {"id": 39372, "manga_common_id": 39372, "device_id": 4, "published": true, "publication_date": "2024-01-09T00:09:24.000-08:00", "expiration_date": 0, "free": false, "url": "manga/sunday/flymetothemoon/FMM21.zip", "description": "In the mountains, Tsukasa and Nasa find a final gift\u201a and a final puzzle\u201a left for them by Tokiko. Can Nasa unlock the high-tech secrets hidden in an antique clock? Or will Tsukasa manage to break things beyond repair? It\u2019s high time the couple finally had a talk with Kaguya, the girl genius who acts like she\u2019s new to this planet. Not that she\u2019ll do anything but drive Tsukasa up the wall.", "thumb": "manga/thumbs/thumb-157457-FlyMeToTheMoon_GN21_C1_Web-4-3d7oGynoYdnw9nQnLityng.jpg", "featured": false, "created_at": "2023-06-09T00:55:00.000-07:00", "updated_at": "2023-12-20T13:58:23.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39503, "new": true, "manga_series_common_id": 725, "title": "Fly Me to the Moon, Vol. 21", "volume": 21, "chapter": null, "parent_manga_common_id": null, "numpages": 194, "author": "Story and Art by Kenjiro Hata", "issue_date": 0, "isbn13": "978-1-9747-4428-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fly Me to the Moon", "series_vanityurl": "fly-me-to-the-moon", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704787764, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.flymetothemoon21", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157457-FlyMeToTheMoon_GN21_C1_Web-4-3d7oGynoYdnw9nQnLityng.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1704787764, "epoch_exp_date": null, "series_title_sort": "fly me to the moon", "new_pokemon": false}}, {"manga": {"id": 39379, "manga_common_id": 39379, "device_id": 4, "published": true, "publication_date": "2024-01-09T00:09:15.000-08:00", "expiration_date": 0, "free": false, "url": "manga/sunday/helck/HLK07.zip", "description": "The powered-up human army and the Empire\u2019s soldiers continue to clash in a destructive war. Azudra faces off against the Great Sage Mikaros while Winged Soldiers show up to confront Helck and Vermilio. When Helck hesitates, Vermilio stands her ground and takes matters into her own hands!", "thumb": "manga/thumbs/thumb-157485-Helck_GN07_C1_Web-4-wdTcGf3HUcNaMUT8DfwU7w.jpg", "featured": false, "created_at": "2023-06-09T01:03:05.000-07:00", "updated_at": "2023-12-20T13:58:58.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39486, "new": true, "manga_series_common_id": 833, "title": "Helck, Vol. 7", "volume": 7, "chapter": null, "parent_manga_common_id": null, "numpages": 209, "author": "Story and Art by Nanaki Nanao", "issue_date": 0, "isbn13": "978-1-9747-4429-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Helck", "series_vanityurl": "helck", "subscription_type": null, "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704787755, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.helck07", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157485-Helck_GN07_C1_Web-4-wdTcGf3HUcNaMUT8DfwU7w.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1704787755, "epoch_exp_date": null, "series_title_sort": "helck", "new_pokemon": false}}, {"manga": {"id": 39411, "manga_common_id": 39411, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:08:36.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shojobeat/natsume/NBF29.zip", "description": "When Natsume and his friend Tanuma help a young woman find her way through the woods, they end up having to take cover from a storm in a mysterious mansion! The shelter comes at a cost though, and the boys are cajoled into joining a s\u00e9ance to summon a yokai. But when a sudden power outage disrupts the ritual, Natsume, Tanuma, and Nyanko Sensei are faced with something far more strange than the errant yokai they were expecting!", "thumb": "manga/thumbs/thumb-157613-NatsumesBookOfFriends_GN29_C1_Web-4-F3Zva01I4sBXi2mHiJlanA.jpg", "featured": false, "created_at": "2023-06-12T00:10:07.000-07:00", "updated_at": "2024-01-10T14:33:37.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": true, "manga_series_common_id": 21, "title": "Natsume\u2019s Book of Friends, Vol. 29", "volume": 29, "chapter": null, "parent_manga_common_id": null, "numpages": 170, "author": "Yuki Midorikawa", "issue_date": 0, "isbn13": "978-1-9747-4455-8", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 16, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Natsume's Book of Friends", "series_vanityurl": "natsumes-book-of-friends", "subscription_type": null, "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1707206916, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.natsume29", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157613-NatsumesBookOfFriends_GN29_C1_Web-4-F3Zva01I4sBXi2mHiJlanA.jpg", "entitled": null, "new_following": null, "preview_pages": 16, "epoch_pub_date": 1707206916, "epoch_exp_date": null, "series_title_sort": "natsume's book of friends", "new_pokemon": false}}, {"manga": {"id": 39412, "manga_common_id": 39412, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:58.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizsig/ultraman/UTM19.zip", "description": "As Shinjiro\u2019s resolve to be Ultraman continues to waver, a chance meeting with an old family friend, as well as an encounter with the wild and deadly Valky, puts him on the path to discovering his reason to fight. But between a deadly new alien threat, Nackle\u2019s attempts to undermine Earthian faith in the Ultras, and the return of Temperor, will he find that reason before it\u2019s too late?", "thumb": "manga/thumbs/thumb-157617-Ultraman_GN19_C1_Web-4-2t4xWlH-1UCq_RbuJ7Meeg.jpg", "featured": false, "created_at": "2023-06-12T00:12:43.000-07:00", "updated_at": "2023-12-20T12:15:37.000-08:00", "price": "10.99", "list_price": "10.99", "next_manga_common_id": null, "new": true, "manga_series_common_id": 401, "title": "Ultraman, Vol. 19", "volume": 19, "chapter": null, "parent_manga_common_id": null, "numpages": 203, "author": "Story and Art by Eiichi Shimizu & Tomohiro Shimoguchi", "issue_date": 0, "isbn13": "978-1-9747-4439-8", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Ultraman", "series_vanityurl": "ultraman", "subscription_type": null, "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1705392538, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.ultraman19", "web_price": "10.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157617-Ultraman_GN19_C1_Web-4-2t4xWlH-1UCq_RbuJ7Meeg.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705392538, "epoch_exp_date": null, "series_title_sort": "ultraman", "new_pokemon": false}}, {"manga": {"id": 39414, "manga_common_id": 39414, "device_id": 4, "published": true, "publication_date": "2024-01-09T00:10:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizkids/yokaiwatch/YKW22.zip", "description": "Nate and his friends meet an assortment of nyan Yo-kai, including Kintaro, Odyssey, Melon and Origin!! Join the fun as Nate battles with feline spirits that are as dangerous as they are cute!", "thumb": "manga/thumbs/thumb-157625-YOKAIWATCH_GN22_C1_Web-4-JbYytYV0A8AA6ySiHAft3w.jpg", "featured": false, "created_at": "2023-06-12T00:15:35.000-07:00", "updated_at": "2023-12-20T14:00:42.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40602, "new": true, "manga_series_common_id": 422, "title": "YO-KAI WATCH, Vol. 22", "volume": 22, "chapter": null, "parent_manga_common_id": null, "numpages": 189, "author": "Story and Art by Noriyuki Konishi", "issue_date": 0, "isbn13": "978-1-9747-4432-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Yo-kai Watch", "series_vanityurl": "yo-kai-watch", "subscription_type": "vm", "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706205600, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.yokaiwatch22", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157625-YOKAIWATCH_GN22_C1_Web-4-JbYytYV0A8AA6ySiHAft3w.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1704787800, "epoch_exp_date": null, "series_title_sort": "yo-kai watch", "new_pokemon": false}}, {"manga": {"id": 39415, "manga_common_id": 39415, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:09:09.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/onepunchman/OPM27.zip", "description": "Psychos intends to fuse with Orochi, the Monster King, which would give them immense power against Tornado. Superalloy confronts Garo and experiences fear of his opponent\u2019s strength\u2026 Meanwhile, Saitama gets caught up in a cave-in in the Monster Association\u2019s underground labyrinth!", "thumb": "manga/thumbs/thumb-157629-OnePunchMan_GN27_C1_Web-4-A7HEVAJhltUS96b8s-3agg.jpg", "featured": false, "created_at": "2023-06-12T00:19:22.000-07:00", "updated_at": "2023-12-20T12:16:47.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40603, "new": true, "manga_series_common_id": 249, "title": "One-Punch Man, Vol. 27", "volume": 27, "chapter": null, "parent_manga_common_id": null, "numpages": 192, "author": "Story by ONE, Art by Yusuke Murata", "issue_date": 0, "isbn13": "978-1-9747-4441-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "One-Punch Man", "series_vanityurl": "one-punch-man", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1705392550, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.onepunchman27", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157629-OnePunchMan_GN27_C1_Web-4-A7HEVAJhltUS96b8s-3agg.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1705392549, "epoch_exp_date": null, "series_title_sort": "one-punch man", "new_pokemon": false}}, {"manga": {"id": 39417, "manga_common_id": 39417, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:09:12.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shojobeat/princefreya/PCF10.zip", "description": "Queen Mariam and the people of Asha have seized the upper hand against Lord Gleb and his Siguardian troops in the fight for their freedom\u2014but just when it looks as though victory is within their grasp, Emperor Dimitri himself arrives with reinforcements. If Freya is to have any hope of helping her people win this battle, she\u2019ll need to escape the clutches of the Indigo Knight before it\u2019s too late.", "thumb": "manga/thumbs/thumb-157637-PrinceFreya_GN10_C1_Web-4-mleFcmkiCzNiSzRLpQsmmw.jpg", "featured": false, "created_at": "2023-06-12T00:24:00.000-07:00", "updated_at": "2024-01-10T14:33:59.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": true, "manga_series_common_id": 701, "title": "Prince Freya, Vol. 10", "volume": 10, "chapter": null, "parent_manga_common_id": null, "numpages": 159, "author": "Keiko Ishihara", "issue_date": 0, "isbn13": "978-1-9747-4456-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 16, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Prince Freya", "series_vanityurl": "prince-freya", "subscription_type": null, "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206952, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.princefreya10", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157637-PrinceFreya_GN10_C1_Web-4-mleFcmkiCzNiSzRLpQsmmw.jpg", "entitled": null, "new_following": null, "preview_pages": 16, "epoch_pub_date": 1707206952, "epoch_exp_date": null, "series_title_sort": "prince freya", "new_pokemon": false}}, {"manga": {"id": 39419, "manga_common_id": 39419, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:36.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/howdowerelationship/HDW10.zip", "description": "Miwa and Saeko broke up in part because they couldn\u2019t meet halfway on their differing needs, so when their new relationships begin to show signs of turning rocky, they\u2019re both determined to find a way to compromise. But discovering a happy medium is harder than they thought, especially when no one seems to be happy at all with how things are turning out.", "thumb": "manga/thumbs/thumb-157645-HowDoWeRelationship_GN10_C1_Web-4-Bk6wDea1ylko2BbXy3yLdw.jpg", "featured": false, "created_at": "2023-06-12T00:26:16.000-07:00", "updated_at": "2023-12-20T12:20:40.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40704, "new": true, "manga_series_common_id": 709, "title": "How Do We Relationship?, Vol. 10", "volume": 10, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": "978-1-9747-4446-6", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415200, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.howdowerelationship10", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157645-HowDoWeRelationship_GN10_C1_Web-4-Bk6wDea1ylko2BbXy3yLdw.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1705997316, "epoch_exp_date": null, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 39420, "manga_common_id": 39420, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:53.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/undeadunluck/UDU14.zip", "description": "Nico has betrayed the Union in order to resurrect his beloved wife. Andy squares off against his former comrade, but just as he gains the upper hand, UMA Ghost intervenes. With the ability to attack Andy\u2019s soul and render the affected body part immobile, UMA Ghost proves a difficult foe. Will Andy find a way to prevail and restore Fuuko\u2019s soul to her body before she\u2019s lost forever?", "thumb": "manga/thumbs/thumb-157649-UndeadUnluck_GN14_C1_Web-4-uhpZcfVDR67zyjdafeAjtQ.jpg", "featured": false, "created_at": "2023-06-12T00:26:50.000-07:00", "updated_at": "2023-12-20T12:18:53.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39497, "new": true, "manga_series_common_id": 693, "title": "Undead Unluck, Vol. 14", "volume": 14, "chapter": null, "parent_manga_common_id": null, "numpages": 197, "author": "Story and Art by Yoshifumi Tozuka", "issue_date": 0, "isbn13": "978-1-9747-4443-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Undead Unluck", "series_vanityurl": "undead-unluck", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705392533, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.undeadunluck14", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157649-UndeadUnluck_GN14_C1_Web-4-uhpZcfVDR67zyjdafeAjtQ.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705392533, "epoch_exp_date": null, "series_title_sort": "undead unluck", "new_pokemon": false}}, {"manga": {"id": 39422, "manga_common_id": 39422, "device_id": 4, "published": true, "publication_date": "2024-01-09T00:09:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/mao/MAO15.zip", "description": "Just when it seems that the mystery of Sana\u2019s death has been solved, surprising details come to light that change everything. The identity of the zombie body that Byoki revived is finally revealed. Then, the gang helps Kamon investigate the peril that befalls his fianc\u00e9e and tracks the dissemination of his creation, the Seed of Haku.", "thumb": "manga/thumbs/thumb-157657-Mao_GN15_C1_Web-4-a98JEfdvmfN-rQUr_zdS-g.jpg", "featured": false, "created_at": "2023-06-12T00:28:35.000-07:00", "updated_at": "2023-12-20T14:00:03.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39499, "new": true, "manga_series_common_id": 778, "title": "Mao, Vol. 15", "volume": 15, "chapter": null, "parent_manga_common_id": null, "numpages": 190, "author": "Story and Art by Rumiko Takahashi", "issue_date": 0, "isbn13": "978-1-9747-4431-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Mao", "series_vanityurl": "mao", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704826220, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.mao15", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157657-Mao_GN15_C1_Web-4-a98JEfdvmfN-rQUr_zdS-g.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1704787740, "epoch_exp_date": null, "series_title_sort": "mao", "new_pokemon": false}}, {"manga": {"id": 39424, "manga_common_id": 39424, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:09:07.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/elusivesamurai/TES10.zip", "description": "Tokiyuki and his loyal retainers, the Elusive Warriors, take on the members of the Kanto Hisashiban, Takauji Ashikaga\u2019s stewards in charge of the defense of Kamakura. The members of the Hisashiban possess almost superhuman skills and abilities, as well as\u2026unique personalities. Kojiro faces off against Shibukawa, the most formidable of the Hisashiban warriors, in a duel he must win\u2014for if he loses, Tokiyuki\u2019s head will be forfeit! Tokiyuki himself must face the mad warrior Imagawa in a desperate contest of horsemanship to raise the morale of his entire army!", "thumb": "manga/thumbs/thumb-157665-ElusiveSamurai_GN10_C1_Web-4-AB8mOu3LIft_rCYWyiHv2Q.jpg", "featured": false, "created_at": "2023-06-12T00:30:13.000-07:00", "updated_at": "2024-01-10T14:35:28.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40560, "new": true, "manga_series_common_id": 750, "title": "The Elusive Samurai, Vol. 10", "volume": 10, "chapter": null, "parent_manga_common_id": null, "numpages": 197, "author": "Yusei Matsui", "issue_date": 0, "isbn13": "978-1-9747-4460-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "The Elusive Samurai", "series_vanityurl": "the-elusive-samurai", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206947, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.elusivesamurai10", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157665-ElusiveSamurai_GN10_C1_Web-4-AB8mOu3LIft_rCYWyiHv2Q.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1707206947, "epoch_exp_date": null, "series_title_sort": "elusive samurai", "new_pokemon": false}}, {"manga": {"id": 39425, "manga_common_id": 39425, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:25.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizsig/jojospartsix/JSO02.zip", "description": "Jotaro arrives to break Jolyne out of jail, but they fall right into the enemy\u2019s trap, leaving father and daughter to fight for their lives inside a dream while their real bodies are being dissolved. Then, their unknown enemy steals Jotaro\u2019s Stand and memories, effectively putting him in a state that might as well be death. But there\u2019s hope! Ermes discovers that someone is storing memories and Stands in discs, and she and Jolyne volunteer for a search-and-rescue mission to find her father\u2019s discs!", "thumb": "manga/thumbs/thumb-157669-JoJosBizarreAdventurePart06_GN02_C1_Web-4-2zF0lX3CuPIVePqwFZ_FtQ.jpg", "featured": false, "created_at": "2023-06-12T00:30:18.000-07:00", "updated_at": "2023-12-20T12:20:05.000-08:00", "price": "16.99", "list_price": "16.99", "next_manga_common_id": 39463, "new": true, "manga_series_common_id": 814, "title": "JoJo\u2019s Bizarre Adventure: Part 6--Stone Ocean, Vol. 2", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 393, "author": "Story and Art by Hirohiko Araki", "issue_date": 0, "isbn13": "978-1-9747-4445-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "JoJo\u2019s Bizarre Adventure: Part 6--Stone Ocean", "series_vanityurl": "jojos-bizarre-adventure-part-6", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997305, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.jojospartsix02", "web_price": "16.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157669-JoJosBizarreAdventurePart06_GN02_C1_Web-4-2zF0lX3CuPIVePqwFZ_FtQ.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705997305, "epoch_exp_date": null, "series_title_sort": "jojo\u2019s bizarre adventure: part 6--stone ocean", "new_pokemon": false}}, {"manga": {"id": 39426, "manga_common_id": 39426, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:45.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/showhashoten/SHS04.zip", "description": "Azemichi and Taiyo are One-Way Ticket to the Top, the final performers of the Wara-1 Koshien prelims! Between Azemichi\u2019s carefully scripted comedy and Taiyo\u2019s flawless acting, they\u2019ve got the perfect routine to win over the crowd. But despite having started off with the biggest laughs of the day, Azemichi draws a blank halfway through their routine and forgets his next line! Unless Azemichi and Taiyo can save their performance, they may have just lost their only chance at making their comedy dreams come true\u2026", "thumb": "manga/thumbs/thumb-157673-ShowhaShoten_GN04_C1_Web-4-ZpDr8zkxJteIc0glKFpfsw.jpg", "featured": false, "created_at": "2023-06-12T00:30:29.000-07:00", "updated_at": "2023-12-20T12:18:26.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40562, "new": true, "manga_series_common_id": 809, "title": "Show-ha Shoten!, Vol. 4", "volume": 4, "chapter": null, "parent_manga_common_id": null, "numpages": 210, "author": "Story by Akinari Asakura, Art by Takeshi Obata", "issue_date": 0, "isbn13": "978-1-9747-4442-8", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Show-ha Shoten!", "series_vanityurl": "show-ha-shoten", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705392525, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.showhashoten04", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157673-ShowhaShoten_GN04_C1_Web-4-ZpDr8zkxJteIc0glKFpfsw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705392525, "epoch_exp_date": null, "series_title_sort": "show-ha shoten!", "new_pokemon": false}}, {"manga": {"id": 39427, "manga_common_id": 39427, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:11.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizsig/tokyothesedays/TTD01.zip", "description": "On his final day as an editor, Shiozawa takes a train he\u2019s ridden hundreds of times to impart some last advice to a manga creator whose work he used to edit. Later, he is drawn to return to a bookshop at the request of a junior editor who wants his help dealing with an incorrigible manga creator who used to be edited by Shiozawa and now refuses to work with anyone else. For Shiozawa, Tokyo these days is full of memory and is cocooned in the inescapable bonds among manga creators, their editors, art, and life itself.", "thumb": "manga/thumbs/thumb-157677-TokyoTheseDays_GN01_C1_Web-4-1CoAejUZZB94gGxOycmvLg.jpg", "featured": false, "created_at": "2023-06-12T00:30:44.000-07:00", "updated_at": "2023-12-20T12:15:09.000-08:00", "price": "19.99", "list_price": "19.99", "next_manga_common_id": 40574, "new": true, "manga_series_common_id": 897, "title": "Tokyo These Days, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 216, "author": "Story and Art by Taiyo Matsumoto", "issue_date": 0, "isbn13": "978-1-9747-4438-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Tokyo These Days", "series_vanityurl": "tokyo-these-days", "subscription_type": null, "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705392491, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.tokyothesedays01", "web_price": "19.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157677-TokyoTheseDays_GN01_C1_Web-4-1CoAejUZZB94gGxOycmvLg.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705392491, "epoch_exp_date": null, "series_title_sort": "tokyo these days", "new_pokemon": false}}, {"manga": {"id": 39430, "manga_common_id": 39430, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:08:15.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shojobeat/inthenameofthemermaidprincess/IMP01_update20240205", "description": "Princess Mio is betrothed to Prince Chika. However, they\u2019ve never met, and he doesn\u2019t know her secret\u2014she\u2019s a mermaid! When her tutor, Yuri, takes her out of the castle to meet her subjects, Mio begins to accept her true self. But Yuri has a secret too\u2026 And when Mio tells her father, the king, she wants to live life openly as a mermaid, he punishes her. How can she stay true to herself?\n\nPlus, a bonus story about a royal subject with wings!", "thumb": "manga/thumbs/thumb-157689-InTheNameOfTheMermaidPrincess_GN01_C1_Web-4-IGfEpXljuHKdLaJnbDWpww.jpg", "featured": false, "created_at": "2023-06-12T00:31:05.000-07:00", "updated_at": "2024-02-05T12:36:58.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40481, "new": true, "manga_series_common_id": 899, "title": "In the Name of the Mermaid Princess, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 175, "author": "Story by Yoshino Fumikawa, Art by Miya Tashiro", "issue_date": 0, "isbn13": "978-1-9747-4453-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "In the Name of the Mermaid Princess", "series_vanityurl": "in-the-name-of-the-mermaid-princess", "subscription_type": null, "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206896, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.mermaidprincess01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157689-InTheNameOfTheMermaidPrincess_GN01_C1_Web-4-IGfEpXljuHKdLaJnbDWpww.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1707206895, "epoch_exp_date": null, "series_title_sort": "in the name of the mermaid princess", "new_pokemon": false}}, {"manga": {"id": 39431, "manga_common_id": 39431, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:26.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizsig/steelofthecelestialshadows/SCS01.zip", "description": "It is said that a samurai\u2019s spirit rests in their sword\u2014and Konosuke can\u2019t even pick one up thanks to a cruel curse that repels anything made of metal that gets near him. Destitute and hopeless, he decides to end it all. But when a beautiful and mysterious woman saves his life and his soul, it is the beginning of Ryudo\u2019s journey into a strange world of magic that exists a step away from his own.", "thumb": "manga/thumbs/thumb-157693-SteelOfTheCelestialShadows_GN01_C1_Web-4-FCVq0wDeqhzL7LJgwEhD2Q.jpg", "featured": false, "created_at": "2023-06-12T00:31:08.000-07:00", "updated_at": "2023-12-20T12:14:39.000-08:00", "price": "10.99", "list_price": "10.99", "next_manga_common_id": 39467, "new": true, "manga_series_common_id": 900, "title": "Steel of the Celestial Shadows, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 199, "author": "Story and Art by Daruma Matsuura", "issue_date": 0, "isbn13": "978-1-9747-4437-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Steel of the Celestial Shadows", "series_vanityurl": "steel-of-the-celestial-shadows", "subscription_type": null, "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705392506, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.steelofthecelestialshadows01", "web_price": "10.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157693-SteelOfTheCelestialShadows_GN01_C1_Web-4-FCVq0wDeqhzL7LJgwEhD2Q.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705392506, "epoch_exp_date": null, "series_title_sort": "steel of the celestial shadows", "new_pokemon": false}}, {"manga": {"id": 39435, "manga_common_id": 39435, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:36.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/darkgathering/DGT05.zip", "description": "Having captured the spirit of the H Castle Ruins, Keitaro, Eiko, and Yayoi next set their sights on Tokyo\u2019s infamous Old F Tunnel. But before they can brave their first Danger Rank S location, Yayoi takes them on a detour to collect another one of her Graduates\u2014the ghost of a soldier who, even in death, could not escape the pain of war.", "thumb": "manga/thumbs/thumb-157709-DarkGathering_GN05_C1_Web-4-s5glpz-Ov1BUFikHg4MDSw.jpg", "featured": false, "created_at": "2023-06-12T00:32:46.000-07:00", "updated_at": "2023-12-20T12:16:12.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39481, "new": true, "manga_series_common_id": 844, "title": "Dark Gathering, Vol. 5", "volume": 5, "chapter": null, "parent_manga_common_id": null, "numpages": 203, "author": "Story and Art by Kenichi Kondo", "issue_date": 0, "isbn13": "978-1-9747-4440-4", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Dark Gathering", "series_vanityurl": "dark-gathering", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706637600, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.darkgathering05", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157709-DarkGathering_GN05_C1_Web-4-s5glpz-Ov1BUFikHg4MDSw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1705392516, "epoch_exp_date": null, "series_title_sort": "dark gathering", "new_pokemon": false}}, {"manga": {"id": 39439, "manga_common_id": 39439, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:08:24.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shojobeat/myspecialone/MSO05.zip", "description": "Sahoko\u2019s handsome and dangerous classmate Akutagawa has found out about her relationship with Kouta! Not only that, Kouta and Akutagawa start a challenge\u2014with Sahoko as the prize?! When Kouta gets serious, his coolness is out of this world!", "thumb": "manga/thumbs/thumb-157725-MySpecialOne_GN05_C1_Web-4-LrOry6RWY-CYUVQ2757_Xw.jpg", "featured": false, "created_at": "2023-06-12T00:33:19.000-07:00", "updated_at": "2024-01-10T14:32:50.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40483, "new": true, "manga_series_common_id": 835, "title": "My Special One, Vol. 5", "volume": 5, "chapter": null, "parent_manga_common_id": null, "numpages": 175, "author": "Momoko Koda", "issue_date": 0, "isbn13": "978-1-9747-4454-1", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "My Special One", "series_vanityurl": "my-special-one", "subscription_type": "vm", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206904, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.myspecialone05", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157725-MySpecialOne_GN05_C1_Web-4-LrOry6RWY-CYUVQ2757_Xw.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1707206904, "epoch_exp_date": null, "series_title_sort": "my special one", "new_pokemon": false}}, {"manga": {"id": 39440, "manga_common_id": 39440, "device_id": 4, "published": true, "publication_date": "2024-01-16T00:08:29.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizsig/recordofragnarok/ROR09.zip", "description": "In the Valhalla arena, Raiden Tameemon stands ready to fight for humanity after unleashing his superhuman muscles. Representing the gods, Shiva the Destroyer is confident of his eventual victory. As the two are squaring off, Loki follows a hunch, seeking the secret of Volund, the power the Valkyries use to merge with the human heroes\u2019 weapons. What he finds is an insolent Buddha who might know something about it. But getting the answer might require an unsanctioned brawl between two rowdy groups of gods and human heroes!", "thumb": "manga/thumbs/thumb-157729-RecordOfRagnarok_GN09_C1_Web-4-xrsn7r3kEqTcYZ_wg8NKoQ.jpg", "featured": false, "created_at": "2023-06-12T00:33:29.000-07:00", "updated_at": "2023-12-20T12:12:14.000-08:00", "price": "10.99", "list_price": "10.99", "next_manga_common_id": 39487, "new": true, "manga_series_common_id": 769, "title": "Record of Ragnarok, Vol. 9", "volume": 9, "chapter": null, "parent_manga_common_id": null, "numpages": 175, "author": "Art by Azychika, Story by Shinya Umemura and Script by Takumi Fukui", "issue_date": 0, "isbn13": "978-1-9747-4436-7", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 17, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Record of Ragnarok", "series_vanityurl": "record-of-ragnarok", "subscription_type": null, "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705392509, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.recordofragnarok09", "web_price": "10.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157729-RecordOfRagnarok_GN09_C1_Web-4-xrsn7r3kEqTcYZ_wg8NKoQ.jpg", "entitled": null, "new_following": null, "preview_pages": 17, "epoch_pub_date": 1705392509, "epoch_exp_date": null, "series_title_sort": "record of ragnarok", "new_pokemon": false}}, {"manga": {"id": 39441, "manga_common_id": 39441, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:08:30.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shojobeat/rainbowdays/RBD08.zip", "description": "Nozomi may have been rejected (apparently) by Keiichi, but her feelings are stronger than ever. Newly determined to win his heart, she enters Seiryo High. Meanwhile, her older brother, Mattsun, has his own high school love troubles! As Natchan and the gang start their third year, they reminisce about how they all became friends\u2026", "thumb": "manga/thumbs/thumb-157733-RainbowDays_GN08_C1_Web-4-A5dn7plCaDgUEnXAq9KNbA.jpg", "featured": false, "created_at": "2023-06-12T00:33:41.000-07:00", "updated_at": "2024-01-10T14:34:21.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39489, "new": true, "manga_series_common_id": 824, "title": "Rainbow Days, Vol. 8", "volume": 8, "chapter": null, "parent_manga_common_id": null, "numpages": 201, "author": "Minami Mizuno", "issue_date": 0, "isbn13": "978-1-9747-4457-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Rainbow Days", "series_vanityurl": "rainbow-days", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206910, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.rainbowdays08", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157733-RainbowDays_GN08_C1_Web-4-A5dn7plCaDgUEnXAq9KNbA.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1707206910, "epoch_exp_date": null, "series_title_sort": "rainbow days", "new_pokemon": false}}, {"manga": {"id": 39443, "manga_common_id": 39443, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:08:47.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/chainsawman/CSM14.zip", "description": "Asa and Denji are going on a date to the aquarium! Asa just wants to seduce Denji to turn him into a weapon, but Denji might have other ideas. Will they ruin the date with their extreme social awkwardness, or will a surprise attack by a devil be the culprit?", "thumb": "manga/thumbs/thumb-157741-ChainsawMan_GN14_C1_Web-4-CP8EdpUSsw__QobUQjCwkw.jpg", "featured": false, "created_at": "2023-06-12T00:34:16.000-07:00", "updated_at": "2024-01-10T14:34:42.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40587, "new": true, "manga_series_common_id": 580, "title": "Chainsaw Man, Vol. 14", "volume": 14, "chapter": null, "parent_manga_common_id": null, "numpages": 185, "author": "Tatsuki Fujimoto", "issue_date": 0, "isbn13": "978-1-9747-4458-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Chainsaw Man", "series_vanityurl": "chainsaw-man", "subscription_type": "sj", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206927, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.chainsawman14", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157741-ChainsawMan_GN14_C1_Web-4-CP8EdpUSsw__QobUQjCwkw.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1707206927, "epoch_exp_date": null, "series_title_sort": "chainsaw man", "new_pokemon": false}}, {"manga": {"id": 39444, "manga_common_id": 39444, "device_id": 4, "published": true, "publication_date": "2024-02-06T00:08:58.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/dragonballsuper/DBS20.zip", "description": "Goku and Vegeta are both struggling to master their respective ultra forms, which they\u2019ll need to defeat Gas, now the strongest warrior in the universe. Can Granolah rejoin the battle and help turn things around? Later, back at home, a pair of superheroes are making headlines! Get ready for a new story arc set on Earth!", "thumb": "manga/thumbs/thumb-157745-DragonBallSuper_GN20_C1_Web-4-XSfhF8VMDO5VQHrj5rxLOw.jpg", "featured": false, "created_at": "2023-06-12T00:34:30.000-07:00", "updated_at": "2024-01-10T14:35:04.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40600, "new": true, "manga_series_common_id": 466, "title": "Dragon Ball Super, Vol. 20", "volume": 20, "chapter": null, "parent_manga_common_id": null, "numpages": 207, "author": "Story by Akira Toriyama, Art by Toyotarou", "issue_date": 0, "isbn13": "978-1-9747-4459-6", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Dragon Ball Super", "series_vanityurl": "dragon-ball-super", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707206938, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.dragonballsuper20", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157745-DragonBallSuper_GN20_C1_Web-4-XSfhF8VMDO5VQHrj5rxLOw.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1707206938, "epoch_exp_date": null, "series_title_sort": "dragon ball super", "new_pokemon": false}}, {"manga": {"id": 39448, "manga_common_id": 39448, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:42.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/aliensarea/AAA02.zip", "description": "Now that Tatsumi and Sharaku have defeated the assassin Maumoki, Tatsumi is finally ready to start training as a Foreign Affairs 5 recruit! His first mission? To brave a sweltering day in the sun while hunting for an extraterrestrial nest in a rice paddy. But when the mission takes an unexpected turn, Tatsumi might just learn that things aren\u2019t always what they seem\u2026", "thumb": "manga/thumbs/thumb-157761-AliensArea_DigitalGN02_C1_Web-4-lsRji_pB5-ER3SOPZ9LV9g.jpg", "featured": false, "created_at": "2023-06-12T00:35:58.000-07:00", "updated_at": "2023-12-20T12:25:26.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39450, "new": true, "manga_series_common_id": 829, "title": "Aliens Area, Vol. 2", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 175, "author": "Story and Art by Fusai Naba", "issue_date": 0, "isbn13": "978-1-9747-4450-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Aliens Area", "series_vanityurl": "aliens-area", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997322, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.aliensarea02", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157761-AliensArea_DigitalGN02_C1_Web-4-lsRji_pB5-ER3SOPZ9LV9g.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1705997322, "epoch_exp_date": null, "series_title_sort": "aliens area", "new_pokemon": false}}, {"manga": {"id": 39450, "manga_common_id": 39450, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:47.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/aliensarea/AAA03.zip", "description": "Sharaku organizes a meeting with the team leaders of Foreign Affairs 5 in order to take down the criminal organization A3. The meeting is fraught with red tape, but Tatsumi\u2019s memories may just hold the key they need to move forward. With an all-out war between Foreign Affairs 5 and A3 now looming, Foreign Affairs 5 will find themselves facing their most dangerous extraterrestrial threat yet in this epic conclusion!", "thumb": "manga/thumbs/thumb-157769-AliensArea_DigitalGN03_C1_Web-4-8o8aeV7R99Y0jTqwLWqPhQ.jpg", "featured": false, "created_at": "2023-06-12T00:36:04.000-07:00", "updated_at": "2023-12-20T12:25:46.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": null, "new": true, "manga_series_common_id": 829, "title": "Aliens Area, Vol. 3", "volume": 3, "chapter": null, "parent_manga_common_id": null, "numpages": 175, "author": "Story and Art by Fusai Naba", "issue_date": 0, "isbn13": "978-1-9747-4451-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Aliens Area", "series_vanityurl": "aliens-area", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997327, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.aliensarea03", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157769-AliensArea_DigitalGN03_C1_Web-4-8o8aeV7R99Y0jTqwLWqPhQ.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1705997327, "epoch_exp_date": null, "series_title_sort": "aliens area", "new_pokemon": false}}, {"manga": {"id": 39452, "manga_common_id": 39452, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:53.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/pppppp/PPP05.zip", "description": "Lucky\u2019s trying to win against Mimin Otogami by gaining more experience, but when he arrives at the concert hall, he\u2019s surprised to see Sorachika! Meanwhile, Meloli wants to protect her world, but to do so, she must\u2026", "thumb": "manga/thumbs/thumb-157777-PPPPPP_DigitalGN05_C1_Web-4-hOyjeZbrG3ALIqV1MWDpXg.jpg", "featured": false, "created_at": "2023-06-12T00:36:11.000-07:00", "updated_at": "2023-12-20T12:24:09.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39513, "new": true, "manga_series_common_id": 798, "title": "PPPPPP, Vol. 5", "volume": 5, "chapter": null, "parent_manga_common_id": null, "numpages": 191, "author": "Story and Art by Mapollo 3", "issue_date": 0, "isbn13": "978-1-9747-4449-7", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "PPPPPP", "series_vanityurl": "pppppp", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997333, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pppppp05", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157777-PPPPPP_DigitalGN05_C1_Web-4-hOyjeZbrG3ALIqV1MWDpXg.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1705997333, "epoch_exp_date": null, "series_title_sort": "pppppp", "new_pokemon": false}}, {"manga": {"id": 39453, "manga_common_id": 39453, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:08:58.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/highschoolfamily/HSF08.zip", "description": "Feline high schooler Gomez strikes up an unlikely friendship with Kayama and Kina, two fiercely independent delinquents from infamously gang-infested Nastee High. Ichiro\u2019s attempt to set this cool cat back on the straight and narrow falls on deaf ears, but what will happen when rumors about Gomez spur Nastee High\u2019s Big Four to launch an all-out attack on Happee High?!", "thumb": "manga/thumbs/thumb-157781-HighSchoolFamily_DIgitalGN08_C1_Web-4-Y24rwtmWMiBBQ-lU0iVq9g.jpg", "featured": false, "created_at": "2023-06-12T00:36:15.000-07:00", "updated_at": "2023-12-20T12:21:34.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39514, "new": true, "manga_series_common_id": 733, "title": "High School Family: Kokosei Kazoku, Vol. 8", "volume": 8, "chapter": null, "parent_manga_common_id": null, "numpages": 183, "author": "Story and Art by Ryo Nakama", "issue_date": 0, "isbn13": "978-1-9747-4447-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "High School Family: Kokosei Kazoku", "series_vanityurl": "high-school-family", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997338, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.highschoolfam08", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157781-HighSchoolFamily_DIgitalGN08_C1_Web-4-Y24rwtmWMiBBQ-lU0iVq9g.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1705997338, "epoch_exp_date": null, "series_title_sort": "high school family: kokosei kazoku", "new_pokemon": false}}, {"manga": {"id": 39455, "manga_common_id": 39455, "device_id": 4, "published": true, "publication_date": "2024-01-23T00:09:05.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonenjump/meandroboco/MRC10.zip", "description": "Motsuo faces his biggest challenge yet: thanking all the girls who gave him chocolate for Valentine\u2019s Day. Meanwhile, Roboco has her own battle to win\u2014getting more followers on social media. Sexy shots of her knees are sure to do the trick!", "thumb": "manga/thumbs/thumb-157789-MeAndRoboco_DigitalGN10_C1_Web-4-h7gh7MAcbk8jbbF4SaNe7Q.jpg", "featured": false, "created_at": "2023-06-12T00:36:24.000-07:00", "updated_at": "2023-12-20T12:23:08.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39515, "new": true, "manga_series_common_id": 721, "title": "Me & Roboco, Vol. 10", "volume": 10, "chapter": null, "parent_manga_common_id": null, "numpages": 181, "author": "Story and Art by Shuhei Miyazaki", "issue_date": 0, "isbn13": "978-1-9747-4448-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Me & Roboco", "series_vanityurl": "me-and-roboco", "subscription_type": "sj", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705997345, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.meandroboco10", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-157789-MeAndRoboco_DigitalGN10_C1_Web-4-h7gh7MAcbk8jbbF4SaNe7Q.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1705997345, "epoch_exp_date": null, "series_title_sort": "me & roboco", "new_pokemon": false}}, {"manga": {"id": 40480, "manga_common_id": 40480, "device_id": 4, "published": true, "publication_date": "2024-01-09T00:08:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/vizmedia/pkadvomegarubyalphasapphire/POS01.zip", "description": "While training with Sapphire and their friend Steven in Sea Mauville, Emerald is attacked by a mystery Pok\u00e9mon! Meanwhile, Ruby journeys to the Sky Pillar to earn the trust of Zinnia, the Lorekeeper of the reclusive Draconid tribe.\n\nCan three Hoenn Pok\u00e9dex holders stop a crisis of epic magnitude?", "thumb": "manga/thumbs/thumb-161889-PokemonAdvORAS_GN01_C1_Web-4-_HuacAK0aqzI3l0E-Q4c5Q.jpg", "featured": false, "created_at": "2023-10-05T23:28:21.000-07:00", "updated_at": "2024-01-10T13:12:07.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 40565, "new": false, "manga_series_common_id": 926, "title": "Pok\u00e9mon Adventures: Omega Ruby and Alpha Sapphire, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 146, "author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "issue_date": 0, "isbn13": "978-1-9747-4732-0", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 15, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Pok\u00e9mon Adventures: Omega Ruby and Alpha Sapphire", "series_vanityurl": "pokemon-adventures-omega-ruby-and-alpha-sapphire", "subscription_type": null, "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707464356, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.pkmadvomegarubyalphasapphire01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-161889-PokemonAdvORAS_GN01_C1_Web-4-_HuacAK0aqzI3l0E-Q4c5Q.jpg", "entitled": null, "new_following": null, "preview_pages": 15, "epoch_pub_date": 1704787680, "epoch_exp_date": null, "series_title_sort": "pok\u00e9mon adventures: omega ruby and alpha sapphire", "new_pokemon": true}}, {"manga": {"id": 41641, "manga_common_id": 41641, "device_id": 4, "published": true, "publication_date": "2024-02-10T16:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/vizmedia/persona5/persona5_78.1", "description": "", "thumb": "manga/thumbs/vizmedia/persona5/persona5_78.1/_android-WX4QM9x2elmWv3rFI5gPuw.jpg", "featured": false, "created_at": "2024-02-01T10:15:48.000-08:00", "updated_at": "2024-02-09T10:02:31.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 685, "title": "Chapter 78.1", "volume": null, "chapter": "78.1", "parent_manga_common_id": null, "numpages": 18, "author": "Story and Art by Hisato Murasaki   Based on the video game by Atlus", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Persona 5", "series_vanityurl": "persona-5", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707613208, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/persona5/persona5_78.1/_android-WX4QM9x2elmWv3rFI5gPuw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707613140, "epoch_exp_date": null, "series_title_sort": "persona 5", "new_pokemon": false}}, {"manga": {"id": 41640, "manga_common_id": 41640, "device_id": 4, "published": true, "publication_date": "2024-02-08T16:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/foolnight70", "description": "", "thumb": "manga/thumbs/new/chapter/foolnight70/_android-arBD4zCiA840rxp_IJL_PQ.jpg", "featured": false, "created_at": "2024-02-01T10:15:07.000-08:00", "updated_at": "2024-02-08T14:47:57.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 932, "title": "Chapter 70", "volume": null, "chapter": "70.0", "parent_manga_common_id": null, "numpages": 20, "author": "Kasumi Yasuda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fool Night", "series_vanityurl": "fool-night", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707440408, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/foolnight70/_android-arBD4zCiA840rxp_IJL_PQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707440340, "epoch_exp_date": null, "series_title_sort": "fool night", "new_pokemon": false}}, {"manga": {"id": 41428, "manga_common_id": 41428, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_84.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_84_android-kFdVyCoyG9ZSrEsRQQJk0A.jpg", "featured": false, "created_at": "2024-01-10T18:50:08.000-08:00", "updated_at": "2024-01-10T18:50:02.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41429, "new": false, "manga_series_common_id": 709, "title": "Chapter 84: Proof of Love", "volume": null, "chapter": "84.0", "parent_manga_common_id": 39419, "numpages": 18, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415208, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_84_android-kFdVyCoyG9ZSrEsRQQJk0A.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41429, "manga_common_id": 41429, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_85.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_85_android-o8uvie0IwAq1XvM5bWU7vw.jpg", "featured": false, "created_at": "2024-01-10T18:52:51.000-08:00", "updated_at": "2024-01-10T18:52:45.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41430, "new": false, "manga_series_common_id": 709, "title": "Chapter 85: Room to Talk", "volume": null, "chapter": "85.0", "parent_manga_common_id": 39419, "numpages": 18, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415208, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_85_android-o8uvie0IwAq1XvM5bWU7vw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41430, "manga_common_id": 41430, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_86.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_86_android-xd4TGRBjIsCNqhp6EAxKtw.jpg", "featured": false, "created_at": "2024-01-10T18:55:30.000-08:00", "updated_at": "2024-01-10T18:55:24.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41431, "new": false, "manga_series_common_id": 709, "title": "Chapter 86: As the Sun Sets", "volume": null, "chapter": "86.0", "parent_manga_common_id": 39419, "numpages": 18, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415208, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_86_android-xd4TGRBjIsCNqhp6EAxKtw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41431, "manga_common_id": 41431, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_87.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_87_android-c0SH_hQn2vrM2h1jrWWafQ.jpg", "featured": false, "created_at": "2024-01-10T18:58:22.000-08:00", "updated_at": "2024-01-10T18:58:16.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41432, "new": false, "manga_series_common_id": 709, "title": "Chapter 87: Eyes", "volume": null, "chapter": "87.0", "parent_manga_common_id": 39419, "numpages": 18, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415209, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_87_android-c0SH_hQn2vrM2h1jrWWafQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41432, "manga_common_id": 41432, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_88.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_88_android-7Sru_tJGFboRM_R1W93NGQ.jpg", "featured": false, "created_at": "2024-01-10T19:01:12.000-08:00", "updated_at": "2024-01-10T19:01:06.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41433, "new": false, "manga_series_common_id": 709, "title": "Chapter 88: Swallow the Heat", "volume": null, "chapter": "88.0", "parent_manga_common_id": 39419, "numpages": 18, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415209, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_88_android-7Sru_tJGFboRM_R1W93NGQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41433, "manga_common_id": 41433, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_89.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_89_android-dPHOGqz8SpOuj6VFSG1F2w.jpg", "featured": false, "created_at": "2024-01-10T19:04:03.000-08:00", "updated_at": "2024-01-10T19:03:56.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41434, "new": false, "manga_series_common_id": 709, "title": "Chapter 89: Thirsty", "volume": null, "chapter": "89.0", "parent_manga_common_id": 39419, "numpages": 18, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415209, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_89_android-dPHOGqz8SpOuj6VFSG1F2w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41434, "manga_common_id": 41434, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_90.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_90_android-4l3T4rXUWFKE9ZjdiYghOA.jpg", "featured": false, "created_at": "2024-01-10T19:06:53.000-08:00", "updated_at": "2024-01-10T19:06:46.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41435, "new": false, "manga_series_common_id": 709, "title": "Chapter 90: No Good Choices Tonight", "volume": null, "chapter": "90.0", "parent_manga_common_id": 39419, "numpages": 18, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415209, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_90_android-4l3T4rXUWFKE9ZjdiYghOA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41435, "manga_common_id": 41435, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_91.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_91_android-k36NgtzHUQdGkdrsc3jV1Q.jpg", "featured": false, "created_at": "2024-01-10T19:09:43.000-08:00", "updated_at": "2024-01-10T19:09:36.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41436, "new": false, "manga_series_common_id": 709, "title": "Chapter 91: Unripe Fruit", "volume": null, "chapter": "91.0", "parent_manga_common_id": 39419, "numpages": 18, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415209, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_91_android-k36NgtzHUQdGkdrsc3jV1Q.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41436, "manga_common_id": 41436, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_92.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_92_android-TDzw3W4JLjwiYDiSAcvg0A.jpg", "featured": false, "created_at": "2024-01-10T19:12:33.000-08:00", "updated_at": "2024-01-10T19:12:27.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41437, "new": false, "manga_series_common_id": 709, "title": "Chapter 92: For You", "volume": null, "chapter": "92.0", "parent_manga_common_id": 39419, "numpages": 18, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415209, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_92_android-TDzw3W4JLjwiYDiSAcvg0A.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41437, "manga_common_id": 41437, "device_id": 4, "published": true, "publication_date": "2024-02-08T10:00:00.000-08:00", "expiration_date": 1707415200, "free": true, "url": "manga/vizmedia/howdowerelationship/chapters/HDW10_93.zip", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_93_android--Hjosy69PIirb0jGqhEeEg.jpg", "featured": false, "created_at": "2024-01-10T19:15:16.000-08:00", "updated_at": "2024-01-10T19:15:10.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 38930, "new": false, "manga_series_common_id": 709, "title": "Chapter 93: Woven into Your Cells", "volume": null, "chapter": "93.0", "parent_manga_common_id": 39419, "numpages": 17, "author": "Story and Art by Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415211, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/thumb_39419_HDW10_93_android--Hjosy69PIirb0jGqhEeEg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707415200, "epoch_exp_date": 1707415200, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41633, "manga_common_id": 41633, "device_id": 4, "published": true, "publication_date": "2024-02-06T14:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/sunday/flymetothemoon/flymetothemoon259", "description": "", "thumb": "manga/thumbs/sunday/flymetothemoon/flymetothemoon259/_android-wD9v-wrMfAxplqzw2Swa7Q.jpg", "featured": false, "created_at": "2024-01-30T16:42:36.000-08:00", "updated_at": "2024-02-05T14:29:57.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 725, "title": "Chapter 259", "volume": null, "chapter": "259.0", "parent_manga_common_id": null, "numpages": 18, "author": "Kenjiro Hata", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fly Me to the Moon", "series_vanityurl": "fly-me-to-the-moon", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707260409, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/sunday/flymetothemoon/flymetothemoon259/_android-wD9v-wrMfAxplqzw2Swa7Q.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707260340, "epoch_exp_date": null, "series_title_sort": "fly me to the moon", "new_pokemon": false}}, {"manga": {"id": 41634, "manga_common_id": 41634, "device_id": 4, "published": true, "publication_date": "2024-02-06T14:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonensunday/frieren/FJE124", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE124/_android-sNy-zswSl_ASIkT7i6QqKw.jpg", "featured": false, "created_at": "2024-01-30T16:45:01.000-08:00", "updated_at": "2024-02-02T13:18:37.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 777, "title": "Chapter 124", "volume": null, "chapter": "124.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707260409, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE124/_android-sNy-zswSl_ASIkT7i6QqKw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707260340, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 41635, "manga_common_id": 41635, "device_id": 4, "published": true, "publication_date": "2024-02-06T14:59:00.000-08:00", "expiration_date": 1708469940, "free": true, "url": "manga/sunday/komicommunicate/Komi443", "description": "", "thumb": "manga/thumbs/sunday/komicommunicate/Komi443/_android-zf7Mu6g6haGBajHkqS8GoQ.jpg", "featured": false, "created_at": "2024-01-30T16:45:24.000-08:00", "updated_at": "2024-02-06T10:48:18.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 600, "title": "Chapter 443", "volume": null, "chapter": "443.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story and Art by Tomohito Oda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Komi Can\u2019t Communicate", "series_vanityurl": "komi-cant-communicate", "subscription_type": "vm", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707434372, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/sunday/komicommunicate/Komi443/_android-zf7Mu6g6haGBajHkqS8GoQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707260340, "epoch_exp_date": 1708469940, "series_title_sort": "komi can\u2019t communicate", "new_pokemon": false}}, {"manga": {"id": 41636, "manga_common_id": 41636, "device_id": 4, "published": true, "publication_date": "2024-02-06T14:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/sunday/sleepyprincess/sleepyprincessinthedemoncastle354.zip", "description": "", "thumb": "manga/thumbs/sunday/sleepyprincess/sleepyprincessinthedemoncastle354/_android-3f77RlMboWlHqab06eyvVQ.jpg", "featured": false, "created_at": "2024-01-30T16:46:09.000-08:00", "updated_at": "2024-02-06T09:44:22.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 541, "title": "Chapter 354", "volume": null, "chapter": "354.0", "parent_manga_common_id": null, "numpages": 10, "author": "Kagiji Kumanomata", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Sleepy Princess in the Demon Castle", "series_vanityurl": "sleepy-princess-in-the-demon-cas", "subscription_type": "vm", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707260409, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/sunday/sleepyprincess/sleepyprincessinthedemoncastle354/_android-3f77RlMboWlHqab06eyvVQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707260340, "epoch_exp_date": null, "series_title_sort": "sleepy princess in the demon castle", "new_pokemon": false}}, {"manga": {"id": 41631, "manga_common_id": 41631, "device_id": 4, "published": true, "publication_date": "2024-02-02T16:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/vizmedia/howdowerelationship/HDWR114", "description": "", "thumb": "manga/thumbs/vizmedia/howdowerelationship/HDWR114/_android-HnmhbkeqEr1EomXb6g7yyQ.jpg", "featured": false, "created_at": "2024-01-30T16:41:11.000-08:00", "updated_at": "2024-02-02T12:53:16.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 709, "title": "Chapter 114", "volume": null, "chapter": "114.0", "parent_manga_common_id": null, "numpages": 17, "author": "Tamifull", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "How Do We Relationship?", "series_vanityurl": "how-do-we-relationship", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707415200, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizmedia/howdowerelationship/HDWR114/_android-HnmhbkeqEr1EomXb6g7yyQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706921940, "epoch_exp_date": null, "series_title_sort": "how do we relationship?", "new_pokemon": false}}, {"manga": {"id": 41632, "manga_common_id": 41632, "device_id": 4, "published": true, "publication_date": "2024-02-02T16:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/sunday/iwanttoendthislovegame/lovegame48.zip", "description": "", "thumb": "manga/thumbs/sunday/iwanttoendthislovegame/lovegame48/_android-lc17Wh9IS0nJb90JzERruQ.jpg", "featured": false, "created_at": "2024-01-30T16:41:39.000-08:00", "updated_at": "2024-02-02T15:13:19.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 901, "title": "Chapter 48", "volume": null, "chapter": "48.0", "parent_manga_common_id": null, "numpages": 22, "author": "Yuki Domoto", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "I Want to End This Love Game", "series_vanityurl": "i-want-to-end-this-love-game", "subscription_type": "vm", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706922008, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/sunday/iwanttoendthislovegame/lovegame48/_android-lc17Wh9IS0nJb90JzERruQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706921940, "epoch_exp_date": null, "series_title_sort": "i want to end this love game", "new_pokemon": false}}, {"manga": {"id": 41518, "manga_common_id": 41518, "device_id": 4, "published": true, "publication_date": "2024-02-02T09:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/vizoriginals/statusroyale/Statusroyale9_verso", "description": "", "thumb": "manga/thumbs/vizoriginals/statusroyale/Statusroyale9_verso/_android-IdOu3JeWmpelhe3zZUYj7w.jpg", "featured": false, "created_at": "2024-01-18T09:45:41.000-08:00", "updated_at": "2024-01-31T10:00:52.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 896, "title": "Chapter 9", "volume": null, "chapter": "9.0", "parent_manga_common_id": 39423, "numpages": 36, "author": "Ru Xu", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Status Royale", "series_vanityurl": "status-royale", "subscription_type": "vm", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": false, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706896809, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/vizoriginals/statusroyale/Statusroyale9_verso/_android-IdOu3JeWmpelhe3zZUYj7w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706896740, "epoch_exp_date": null, "series_title_sort": "status royale", "new_pokemon": false}}, {"manga": {"id": 41590, "manga_common_id": 41590, "device_id": 4, "published": true, "publication_date": "2024-01-30T14:59:00.000-08:00", "expiration_date": 1708469940, "free": true, "url": "manga/sunday/flymetothemoon/flymetothemoon258", "description": "", "thumb": "manga/thumbs/sunday/flymetothemoon/flymetothemoon258/_android-wD_7V9yllM9D_pVwcWmalA.jpg", "featured": false, "created_at": "2024-01-22T14:27:24.000-08:00", "updated_at": "2024-01-30T12:57:49.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41633, "new": false, "manga_series_common_id": 725, "title": "Chapter 258", "volume": null, "chapter": "258.0", "parent_manga_common_id": null, "numpages": 18, "author": "Kenjiro Hata", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fly Me to the Moon", "series_vanityurl": "fly-me-to-the-moon", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707434301, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/sunday/flymetothemoon/flymetothemoon258/_android-wD_7V9yllM9D_pVwcWmalA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706655540, "epoch_exp_date": 1708469940, "series_title_sort": "fly me to the moon", "new_pokemon": false}}, {"manga": {"id": 41591, "manga_common_id": 41591, "device_id": 4, "published": true, "publication_date": "2024-01-30T14:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonensunday/frieren/FJE123", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE123/_android-zIWvmLdNIr8YaGUysHlNPg.jpg", "featured": false, "created_at": "2024-01-22T14:27:55.000-08:00", "updated_at": "2024-01-30T12:05:10.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41634, "new": false, "manga_series_common_id": 777, "title": "Chapter 123", "volume": null, "chapter": "123.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707260434, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE123/_android-zIWvmLdNIr8YaGUysHlNPg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706655540, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 41592, "manga_common_id": 41592, "device_id": 4, "published": true, "publication_date": "2024-01-30T14:59:00.000-08:00", "expiration_date": 1707865080, "free": true, "url": "manga/sunday/komicommunicate/komi442", "description": "", "thumb": "manga/thumbs/sunday/komicommunicate/komi442/_android-FcLF0unXy8XpzmjPYPulcg.jpg", "featured": false, "created_at": "2024-01-22T14:28:22.000-08:00", "updated_at": "2024-01-30T12:06:32.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41635, "new": false, "manga_series_common_id": 600, "title": "Chapter 442", "volume": null, "chapter": "442.0", "parent_manga_common_id": null, "numpages": 8, "author": "Story and Art by Tomohito Oda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Komi Can\u2019t Communicate", "series_vanityurl": "komi-cant-communicate", "subscription_type": "vm", "rating": "t", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707424930, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/sunday/komicommunicate/komi442/_android-FcLF0unXy8XpzmjPYPulcg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706655540, "epoch_exp_date": 1707865080, "series_title_sort": "komi can\u2019t communicate", "new_pokemon": false}}, {"manga": {"id": 41593, "manga_common_id": 41593, "device_id": 4, "published": true, "publication_date": "2024-01-30T14:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonensunday/mao/MAO217_R.zip", "description": "", "thumb": "manga/thumbs/shonensunday/mao/MAO217_R/_android-u8hMom8mlYE1lceLLir-hw.jpg", "featured": false, "created_at": "2024-01-22T14:28:46.000-08:00", "updated_at": "2024-01-30T14:15:40.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 778, "title": "Chapter 217", "volume": null, "chapter": "217.0", "parent_manga_common_id": null, "numpages": 18, "author": "Rumiko Takahashi", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Mao", "series_vanityurl": "mao", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706655609, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/mao/MAO217_R/_android-u8hMom8mlYE1lceLLir-hw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706655540, "epoch_exp_date": null, "series_title_sort": "mao", "new_pokemon": false}}, {"manga": {"id": 41483, "manga_common_id": 41483, "device_id": 4, "published": true, "publication_date": "2024-01-25T17:00:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/foolnight69.zip", "description": "", "thumb": "manga/thumbs/new/chapter/foolnight69/thumb_android-lNB0m1pIvXGvg8yGvXT9Jw.jpg", "featured": false, "created_at": "2024-01-12T14:13:06.000-08:00", "updated_at": "2024-01-25T09:26:36.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41640, "new": false, "manga_series_common_id": 932, "title": "Chapter 69", "volume": null, "chapter": "69.0", "parent_manga_common_id": null, "numpages": 22, "author": "Kasumi Yasuda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": "a", "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fool Night", "series_vanityurl": "fool-night", "subscription_type": "vm", "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707440408, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/foolnight69/thumb_android-lNB0m1pIvXGvg8yGvXT9Jw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706230800, "epoch_exp_date": null, "series_title_sort": "fool night", "new_pokemon": false}}, {"manga": {"id": 41484, "manga_common_id": 41484, "device_id": 4, "published": true, "publication_date": "2024-01-25T17:00:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/new/chapter/FoolNight_3.zip", "description": "", "thumb": "manga/thumbs/new/chapter/FoolNight_3/thumb_android-AwktqUYOT4OfcY3dnbIGGw.jpg", "featured": false, "created_at": "2024-01-17T11:37:20.000-08:00", "updated_at": "2024-01-22T10:02:45.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41485, "new": false, "manga_series_common_id": 932, "title": "Chapter 3", "volume": null, "chapter": "3.0", "parent_manga_common_id": null, "numpages": 32, "author": "Kasumi Yasuda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fool Night", "series_vanityurl": "fool-night", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706230925, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/FoolNight_3/thumb_android-AwktqUYOT4OfcY3dnbIGGw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706230800, "epoch_exp_date": null, "series_title_sort": "fool night", "new_pokemon": false}}, {"manga": {"id": 41485, "manga_common_id": 41485, "device_id": 4, "published": true, "publication_date": "2024-01-25T17:00:00.000-08:00", "expiration_date": 1706230800, "free": true, "url": "manga/new/chapter/FoolNight_4.zip", "description": "", "thumb": "manga/thumbs/new/chapter/FoolNight_4/thumb_android-OrCkk-oY6z3jGlnaUk6HqQ.jpg", "featured": false, "created_at": "2024-01-17T12:14:59.000-08:00", "updated_at": "2024-01-17T12:13:38.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41486, "new": false, "manga_series_common_id": 932, "title": "Chapter 4", "volume": null, "chapter": "4.0", "parent_manga_common_id": null, "numpages": 18, "author": "Kasumi Yasuda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fool Night", "series_vanityurl": "fool-night", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706230925, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/FoolNight_4/thumb_android-OrCkk-oY6z3jGlnaUk6HqQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706230800, "epoch_exp_date": 1706230800, "series_title_sort": "fool night", "new_pokemon": false}}, {"manga": {"id": 41486, "manga_common_id": 41486, "device_id": 4, "published": true, "publication_date": "2024-01-25T17:00:00.000-08:00", "expiration_date": 1706230800, "free": true, "url": "manga/new/chapter/FoolNight_5.zip", "description": "", "thumb": "manga/thumbs/new/chapter/FoolNight_5/thumb_android-MKGbvcnZq8rBTx47ZMtmig.jpg", "featured": false, "created_at": "2024-01-17T12:17:50.000-08:00", "updated_at": "2024-01-17T12:16:22.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41487, "new": false, "manga_series_common_id": 932, "title": "Chapter 5", "volume": null, "chapter": "5.0", "parent_manga_common_id": null, "numpages": 22, "author": "Kasumi Yasuda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fool Night", "series_vanityurl": "fool-night", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706230925, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/FoolNight_5/thumb_android-MKGbvcnZq8rBTx47ZMtmig.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706230800, "epoch_exp_date": 1706230800, "series_title_sort": "fool night", "new_pokemon": false}}, {"manga": {"id": 41487, "manga_common_id": 41487, "device_id": 4, "published": true, "publication_date": "2024-01-25T17:00:00.000-08:00", "expiration_date": 1706230800, "free": true, "url": "manga/new/chapter/FoolNight_6.zip", "description": "", "thumb": "manga/thumbs/new/chapter/FoolNight_6/thumb_android-gSS54fYjcdjiuFCkDVBrFw.jpg", "featured": false, "created_at": "2024-01-17T12:22:30.000-08:00", "updated_at": "2024-01-17T12:21:04.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41488, "new": false, "manga_series_common_id": 932, "title": "Chapter 6", "volume": null, "chapter": "6.0", "parent_manga_common_id": null, "numpages": 22, "author": "Kasumi Yasuda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fool Night", "series_vanityurl": "fool-night", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706230925, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/FoolNight_6/thumb_android-gSS54fYjcdjiuFCkDVBrFw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706230800, "epoch_exp_date": 1706230800, "series_title_sort": "fool night", "new_pokemon": false}}, {"manga": {"id": 41488, "manga_common_id": 41488, "device_id": 4, "published": true, "publication_date": "2024-01-25T17:00:00.000-08:00", "expiration_date": 1706230800, "free": true, "url": "manga/new/chapter/FoolNight_7.zip", "description": "", "thumb": "manga/thumbs/new/chapter/FoolNight_7/thumb_android-8LIwB-uLPbAUAh-BFoPuRA.jpg", "featured": false, "created_at": "2024-01-17T12:24:02.000-08:00", "updated_at": "2024-01-17T12:22:42.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41489, "new": false, "manga_series_common_id": 932, "title": "Chapter 7", "volume": null, "chapter": "7.0", "parent_manga_common_id": null, "numpages": 20, "author": "Kasumi Yasuda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fool Night", "series_vanityurl": "fool-night", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706230925, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/FoolNight_7/thumb_android-8LIwB-uLPbAUAh-BFoPuRA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706230800, "epoch_exp_date": 1706230800, "series_title_sort": "fool night", "new_pokemon": false}}, {"manga": {"id": 41489, "manga_common_id": 41489, "device_id": 4, "published": true, "publication_date": "2024-01-25T17:00:00.000-08:00", "expiration_date": 1706230800, "free": true, "url": "manga/new/chapter/FoolNight_8.zip", "description": "", "thumb": "manga/thumbs/new/chapter/FoolNight_8/thumb_android-jWANELV-pH4X1Tq533_5WQ.jpg", "featured": false, "created_at": "2024-01-17T12:29:29.000-08:00", "updated_at": "2024-01-17T12:27:34.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41490, "new": false, "manga_series_common_id": 932, "title": "Chapter 8", "volume": null, "chapter": "8.0", "parent_manga_common_id": null, "numpages": 30, "author": "Kasumi Yasuda", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Fool Night", "series_vanityurl": "fool-night", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706230925, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/new/chapter/FoolNight_8/thumb_android-jWANELV-pH4X1Tq533_5WQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706230800, "epoch_exp_date": 1706230800, "series_title_sort": "fool night", "new_pokemon": false}}, {"manga_series": {"id": 79, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 79, "device_id": 4, "keyart": "img/manga_series_header/79-SeriesHeaders_Nura_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1350, "manga_imprint_id": 1, "title": "Nura: Rise of the Yokai Clan", "synopsis": "While the day belongs to humans, the night belongs to yokai, supernatural creatures that thrive on human fear. Caught between these worlds is Rikuo Nura. He's three-quarters human, but his grandfather is none other than Nurarihyon, the supreme commander of the Nura clan, a powerful yokai consortium. So, Rikuo is an ordinary teenager three quarters of the time, until his yokai blood awakens. Then Rikuo transforms into the future leader of the Nura clan, leading a hundred demons.", "tagline": "The supernatural saga of a normal teenager by day, reluctant leader of a demon clan by night.", "rating": "t", "vanityurl": "nura-rise-of-the-yokai-clan", "copyright": "NURARIHYON NO MAGO \u00a9 2008 by Hiroshi Shiibashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/79-SeriesHeaders_Nura_v2_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560008, "has_gns": true, "num_gns": 25, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/79-SeriesHeaders_Nura_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/270-SeriesThumbnailsManga_NUR_400x320.jpg", "label": null, "recommended_series_ids": "8,461,722,1,790,371", "latest_author": "Hiroshi Shiibashi", "title_sort": "nura: rise of the yokai clan"}}, {"manga_series": {"id": 7, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 7, "device_id": 4, "keyart": "img/manga_series_keyart/36-bakuman_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1253, "manga_imprint_id": 1, "title": "Bakuman\u3002", "synopsis": "Average student Moritaka Mashiro enjoys drawing for fun. When his classmate and aspiring writer Akito Takagi discovers his talent, he begs Moritaka to team up with him as a manga-creating duo. But what exactly does it take to make it in the manga-publishing world?", "tagline": "By the creators of Death Note! The mystery behind manga making revealed! ", "rating": "t", "vanityurl": "bakuman", "copyright": "BAKUMAN\u3002\u00a9 2008 by Tsugumi Ohba, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560009, "has_gns": true, "num_gns": 20, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5487-Tier04_SeriesHeaders_BAK_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/245-SeriesThumbnailsManga_BAK_400x320.jpg", "label": null, "recommended_series_ids": "9,130,454,791,451,258,552,712", "latest_author": "Story by Tsugumi Ohba, Art by Takeshi Obata", "title_sort": "bakuman\u3002"}}, {"manga_series": {"id": 8, "updated_at": "2023-07-21T13:35:15.000-07:00", "manga_series_common_id": 8, "device_id": 4, "keyart": "img/manga_series_header/8-SeriesHeaders_Bleach_v3_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 657, "manga_imprint_id": 1, "title": "Bleach", "synopsis": "Ichigo Kurosaki never asked for the ability to see ghosts--he was born with the gift. When his family is attacked by a Hollow--a malevolent lost soul--Ichigo becomes a Soul Reaper, dedicating his life to protecting the innocent and helping the tortured spirits themselves find peace. Find out why Tite Kubo's Bleach has become an international manga smash-hit!", "tagline": "Part-time student, full-time Soul Reaper, Ichigo is one of the chosen few guardians of the afterlife.", "rating": "t", "vanityurl": "bleach", "copyright": "BLEACH \u00a9 2001 by Tite Kubo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/8-SeriesHeaders_Bleach_v3_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/8-th-691_th_106_SeriesThumbnailsManga_BLH_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1704096016, "has_gns": true, "num_gns": 74, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/8-SeriesHeaders_Bleach_v3_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/8-th-691_th_106_SeriesThumbnailsManga_BLH_400x320.jpg", "label": null, "recommended_series_ids": "794,703,763,466,138,540,724,249,371", "latest_author": "Tite Kubo", "title_sort": "bleach"}}, {"manga_series": {"id": 22, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 22, "device_id": 4, "keyart": "img/manga_series_keyart/40-claymore_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 613, "manga_imprint_id": 1, "title": "Claymore", "synopsis": "In a world where monsters called Yoma prey on humans and live among them in disguise, humanity's only hope is a new breed of warrior known as Claymores. Half human, half monster, these silver-eyed slayers possess supernatural strength but are condemned to fight their savage impulses or lose their humanity completely.", "tagline": "Sword-wielding women warriors are humanity\u2019s only defense against supernatural beings of appallingly destructive power.", "rating": "tp", "vanityurl": "claymore", "copyright": "CLAYMORE \u00a9 2001 by Norihiro Yagi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560009, "has_gns": true, "num_gns": 27, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5553-Tier05_SeriesHeaders_Claymore_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/78-Tier05_SeriesThumbnails_CLM_400x320.jpg", "label": null, "recommended_series_ids": "8,105,703,722,126,14,312", "latest_author": "Nobuhiro Yagi", "title_sort": "claymore"}}, {"manga_series": {"id": 18, "updated_at": "2023-12-11T10:50:46.000-08:00", "manga_series_common_id": 18, "device_id": 4, "keyart": "img/manga_series_keyart/42-dgrayman_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 615, "manga_imprint_id": 1, "title": "D.Gray-man", "synopsis": "Set in a fictional 19th century England, D.Gray-man is the story of Allen Walker, a 15-year-old boy who roams the earth in search of Innocence. Washed away to unknown parts of the world after The Great Flood, Innocence is the mysterious substance used to create weapons that obliterate demons known as akuma.", "tagline": "A cursed teenage boy saves mankind one soul at a time.", "rating": "tp", "vanityurl": "d-gray-man", "copyright": "D.GRAY-MAN \u00a9 2004 by Katsura Hoshino/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1702320646, "has_gns": true, "num_gns": 28, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5554-Tier05_SeriesHeaders_DGrayman_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/79-Tier05_SeriesThumbnails_DGR_400x320.jpg", "label": null, "recommended_series_ids": "448,8,105,722,339,730,312,125", "latest_author": "Story and Art by Katsura Hoshino", "title_sort": "d.gray-man"}}, {"manga_series": {"id": 9, "updated_at": "2023-10-27T14:13:49.000-07:00", "manga_series_common_id": 9, "device_id": 4, "keyart": "img/manga_series_header/9-SeriesHeaders_DeathNote_Manga_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 617, "manga_imprint_id": 1, "title": "Death Note", "synopsis": "Light Yagami is an ace student with great prospects--and he's bored out of his mind. But all that changes when he finds the Death Note, a notebook dropped by a rogue Shinigami death god. Any human whose name is written in the notebook dies, and now Light has vowed to use the power of the Death Note to rid the world of evil. But when criminals begin dropping dead, the authorities send the legendary detective L to track down the killer. With L hot on his heels, will Light lose sight of his noble goal\u2026or his life?", "tagline": "When Light Yagami finds a notebook giving him power over death, will he use it for good\u2014or evil?", "rating": "tp", "vanityurl": "death-note", "copyright": "DEATH NOTE \u00a9 2003 by Tsugumi Ohba, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/9-SeriesHeaders_DeathNote_Manga_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1704096017, "has_gns": true, "num_gns": 12, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/9-SeriesHeaders_DeathNote_Manga_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/80-SeriesThumbnailsManga_DNv3_400x320.jpg", "label": null, "recommended_series_ids": "7,448,549,700,138,339,540,371", "latest_author": "Story by Tsugumi Ohba, Art by Takeshi Obata", "title_sort": "death note"}}, {"manga_series": {"id": 10, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 10, "device_id": 4, "keyart": "img/manga_series_header/10-Dragonball_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": 1, "title": "Dragon Ball", "synopsis": "Dragon Ball introduces a young monkey-tailed boy named Goku (a wry update of the classic Chinese \"Monkey King\" legend), whose quiet life changes when he meets a girl named Bulma who is on a quest to collect seven \"Dragon Balls.\" If she gathers them all, an incredibly powerful dragon will appear and grant her one wish. But the precious orbs are scattered all over the world, and Bulma could use the help of a certain super-strong boy... (In Japan, Dragon Ball and Dragon Ball Z were originally a single 42-volume series. VIZ Media's Dragon Ball contains vols. 1-16 of the original Japanese Dragon Ball, from the beginning of the series to the climax of Goku's last fight with Piccolo.)", "tagline": "Goku and friends battle intergalactic evil in the greatest action-adventure-fantasy-comedy-fighting series ever!", "rating": "t", "vanityurl": "dragon-ball", "copyright": "DRAGON BALL \u00a9 1984 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/10-Dragonball_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1685749596, "has_gns": true, "num_gns": 16, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/10-Dragonball_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/84-SeriesThumbnailsManga_DBv2_400x320.jpg", "label": null, "recommended_series_ids": "461,132,496,466,80,566,724,249", "latest_author": "Akira Toriyama", "title_sort": "dragon ball"}}, {"manga_series": {"id": 25, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 25, "device_id": 4, "keyart": "img/manga_series_keyart/48-merupuri_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 578, "manga_imprint_id": 2, "title": "MeruPuri", "synopsis": "All high school freshman Airi Hoshina ever wanted was to someday live in a cozy home with a loving husband, and find joy in the little things in life. As a result, she makes it her daily mission to get to school on time because school legend has it that the longer one's non-tardy streak is, the better boyfriend one will find. But just when her daily routine is working like clockwork, an occurrence of fairytale proportions threatens to disrupt her grand plan.", "tagline": "", "rating": "t", "vanityurl": "merupuri", "copyright": "MERUPURI -M\u00c4RCHEN PRINCE- \u00a9 Matsuri Hino 2002/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1665693053, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5900-SeriesHeaders_MeruPuri_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/55-SeriesThumbnailsManga_MeruPuri_400x320.jpg", "label": null, "recommended_series_ids": "24,442,15,350,357,501,165", "latest_author": "Matsuri Hino", "title_sort": "merupuri"}}, {"manga_series": {"id": 1, "updated_at": "2023-08-04T13:27:50.000-07:00", "manga_series_common_id": 1, "device_id": 4, "keyart": "img/manga_series_header/1-MangaHeader_Naruto_2000x800_v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": 1, "title": "Naruto", "synopsis": "Naruto is a young shinobi with an incorrigible knack for mischief. He's got a wild sense of humor, but Naruto is completely serious about his mission to be the world's greatest ninja!", "tagline": "The epic adventures of the world\u2019s greatest ninja!", "rating": "t", "vanityurl": "naruto", "copyright": "NARUTO \u00a9 1999 by Masashi Kishimoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/1-MangaHeader_Naruto_2000x800_v2.jpg", "link_img": "img/manga_series_link_img/1-th-SeriesThumbnailsManga_NAR_400x320_jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706810341, "has_gns": true, "num_gns": 72, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/1-MangaHeader_Naruto_2000x800_v2.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1-th-SeriesThumbnailsManga_NAR_400x320_jpg", "label": null, "recommended_series_ids": "8,461,138,724,855,414,599", "latest_author": "Masashi Kishimoto", "title_sort": "naruto"}}, {"manga_series": {"id": 21, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 21, "device_id": 4, "keyart": "img/manga_series_keyart/52-natsume_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1179, "manga_imprint_id": 2, "title": "Natsume's Book of Friends", "synopsis": "Takashi Natsume can see the spirits and demons that hide from the rest of humanity. He has always been set apart from other people because of his gift, drifting from relative to relative, never fitting in. Now he's a troubled high school student who has come to live in the small town where his grandmother grew up. And there he discovers that he has inherited more than just the Sight from the mysterious Reiko.", "tagline": "Natsume has always been aware of the supernatural, but after he inherits a magic book, the supernatural is aware of him! ", "rating": "t", "vanityurl": "natsumes-book-of-friends", "copyright": "Natsume Yujincho \u00a9 Yuki Midorikawa 2005/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1707466329, "has_gns": true, "num_gns": 29, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5592-Tier07_Headers_Natsume_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/225-SeriesThumbnailsManga_NAT_400x320.jpg", "label": null, "recommended_series_ids": "91,472,284", "latest_author": "Yuki Midorikawa", "title_sort": "natsume's book of friends"}}, {"manga_series": {"id": 5, "updated_at": "2023-09-13T10:19:23.000-07:00", "manga_series_common_id": 5, "device_id": 4, "keyart": "img/manga_series_keyart/54-onepiece_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 630, "manga_imprint_id": 1, "title": "One Piece", "synopsis": "As a child, Monkey D. Luffy dreamed of becoming King of the Pirates. But his life changed when he accidentally gained the power to stretch like rubber\u2026at the cost of never being able to swim again! Years, later, Luffy sets off in search of the \"One Piece,\" said to be the greatest treasure in the world...", "tagline": "Join Monkey D. Luffy and his swashbuckling crew in their search for the ultimate treasure, the One Piece.", "rating": "t", "vanityurl": "one-piece", "copyright": "ONE PIECE \u00a9 1997 by Eiichiro Oda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707510220, "has_gns": true, "num_gns": 104, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5265-SeriesHeaders_OP_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/526-SeriesThumb_OP_400x320.png", "label": null, "recommended_series_ids": "496,80,647,724,694,520,624,739", "latest_author": "Eiichiro Oda", "title_sort": "one piece"}}, {"manga_series": {"id": 16, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 16, "device_id": 4, "keyart": "img/manga_series_keyart/56-otomen_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 913, "manga_imprint_id": 2, "title": "Otomen", "synopsis": "Asuka Masamune is a guy who loves girly things--sewing, knitting, making cute stuffed animals and reading shojo comics. But in a world where boys are expected to act manly, Asuka must hide his beloved hobbies and play the part of a masculine jock instead. Can Asuka ever show his true self to anyone, much less to Ryo Miyakozuka, the girl that he's falling for?", "tagline": "Some handsome, manly men have girly, cute hobbies!", "rating": "t", "vanityurl": "otomen", "copyright": "Otomen \u00a9 Aya Kanno 2006/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1644565960, "has_gns": true, "num_gns": 18, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5810-SeriesHeaders_Otomen_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/176-SeriesThumbnailsManga_OTM_400x320.jpg", "label": null, "recommended_series_ids": "237,148,13,385", "latest_author": "Aya Kanno", "title_sort": "otomen"}}, {"manga_series": {"id": 13, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 13, "device_id": 4, "keyart": "img/manga_series_keyart/58-ouran_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 580, "manga_imprint_id": 2, "title": "Ouran High School Host Club", "synopsis": "In this screwball romantic comedy, Haruhi, a poor girl at a rich kids' school, is forced to repay an $80,000 debt by working for the school's swankiest, all-male club--as a boy! There, she discovers just how wealthy the six members are and how different the rich are from everybody else!", "tagline": "The legendary, uproarious comedy about a down-to-earth girl enlisted to work in a lavish host club!", "rating": "t", "vanityurl": "ouran-high-school-host-club", "copyright": "Ouran Koko Host Club \u00a9 Bisco Hatori 2002/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1704096018, "has_gns": true, "num_gns": 18, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5463-Tier04_SeriesHeaders_OHS_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/57-SeriesThumbnailsManga_OHSv2_400x320.jpg", "label": null, "recommended_series_ids": "237,439,398,361,185", "latest_author": "Bisco Hatori", "title_sort": "ouran high school host club"}}, {"manga_series": {"id": 78, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 78, "device_id": 4, "keyart": "img/manga_series_header/78-SeriesHeaders_RosarioVampire_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 832, "manga_imprint_id": 5, "title": "Rosario+Vampire", "synopsis": "All-around average teenager Tsukune can't get accepted to any high school save one...but on his first day, he finds the rest of the student body doesn't appear average in the least. Best of all, the cutest girl on campus can't wait to fling her arms around his neck! Wait a sec'--are those her teeth around his neck too...? Tsukune's going to have one heck of a hickey when he gets home from Monster High! But does he have a chance in H-E-double-hockey-sticks of raising his grades at a school where the turf war isn't between the jocks and the nerds but the vampires and the werewolves?", "tagline": "Love bites when monster girls compete for the affection of one average human guy!", "rating": "tp", "vanityurl": "rosario-vampire", "copyright": "ROSARIO TO VAMPIRE \u00a9 2004 by Akihisa Ikeda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/78-SeriesHeaders_RosarioVampire_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1672560009, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/78-SeriesHeaders_RosarioVampire_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/154-SeriesThumbnailsManga_Rosario_400x320.jpg", "label": null, "recommended_series_ids": "449,356,448,105,703,722,732,86", "latest_author": "Akihisa Ikeda", "title_sort": "rosario+vampire"}}, {"manga_series": {"id": 14, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 14, "device_id": 4, "keyart": "img/manga_series_keyart/62-kenshin_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 595, "manga_imprint_id": 1, "title": "Rurouni Kenshin", "synopsis": "Action, romance, and historical intrigue help make Nobuhiro Watsuki's  Rurouni Kenshin, the tale of a wandering swordsman set against the backdrop of the Meiji Restoration, one of the most popular Shonen Jump titles among fans to date. Himura Kenshin, once an assassin (or  hitokiri) of ferocious power, now fights to protect the honor of those in need.", "tagline": "The battle to decide the fate of Meiji-era swordsmanship has begun!", "rating": "tp", "vanityurl": "rurouni-kenshin", "copyright": "RUROUNI KENSHIN \u00a9 1994 by Nobuhiro Watsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 28, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5664-Header_RurouniKenshin_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/68-SeriesThumbnailsManga_KEN_400x320.jpg", "label": null, "recommended_series_ids": "8,123,498,240,138,1,750", "latest_author": "Nobuhiro Watsuki", "title_sort": "rurouni kenshin"}}, {"manga_series": {"id": 24, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 24, "device_id": 4, "keyart": "img/manga_series_keyart/64-captive_hearts_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 842, "manga_imprint_id": 2, "title": "Captive Hearts", "synopsis": "Carefree Megumi Kuroishi was living a life of luxury until the day a girl named Suzuka Kogami walked into his life. All of a sudden, Megumi finds himself kneeling at Suzuka's feet and prostrating himself like a servant! What Megumi doesn't know (until that very moment anyway) is that his family is cursed to follow the orders of the Kogami family.", "tagline": "", "rating": "t", "vanityurl": "captive-hearts", "copyright": "Toraware no Minoue \u00a9 Matsuri Hino 1998/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1629312145, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5896-SeriesHeaders_CaptiveHearts_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/158-SeriesThumbnailsManga_CaptiveHeart_400x320.jpg", "label": null, "recommended_series_ids": "25,413,15,350,357,501,165", "latest_author": "Matsuri Hino", "title_sort": "captive hearts"}}, {"manga_series": {"id": 23, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 23, "device_id": 4, "keyart": "img/manga_series_keyart/66-toriko_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1251, "manga_imprint_id": 1, "title": "Toriko", "synopsis": "In a savage world ruled by the pursuit of the most delicious foods, it's either eat or be eaten! While searching for the tastiest foods imaginable, Gourmet Hunter Toriko travels the world with his bottomless stomach, facing every beast in his way.", "tagline": "Toriko is a Gourmet Hunter out to eat the world!", "rating": "t", "vanityurl": "toriko", "copyright": "TORIKO \u00a9 2008 by Mitsutoshi Shimabukuro/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 43, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5556-Tier06_SeriesHeaders_Toriko_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/244-SeriesThumbnailsManga_TOR_400x320.jpg", "label": null, "recommended_series_ids": "461,738,132,10,304", "latest_author": "Mitsutoshi Shimabukuro", "title_sort": "toriko"}}, {"manga_series": {"id": 15, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 15, "device_id": 4, "keyart": "img/manga_series_header/15-SeriesHeadersManga_VampireKnight_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 478, "manga_imprint_id": 2, "title": "Vampire Knight", "synopsis": "Cross Academy is attended by two groups of students: the Day Class and the Night Class. At twilight, when the students of the Day Class return to their dorm, they cross paths with the Night Class on their way to school. Yuki Cross and Zero Kiryu are the Guardians of the school, protecting the Day Class from the Academy's dark secret: the Night Class is full of vampires!", "tagline": "Meet your knights in shining darkness in this fan-favorite series about eternal love. ", "rating": "tp", "vanityurl": "vampire-knight", "copyright": "Vampire Knight \u00a9 Matsuri Hino 2004/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/15-SeriesHeadersManga_VampireKnight_2000x800.jpg", "link_img": "img/manga_series_link_img/15-th-SeriesThumbnailsManga_VampireKnight_400x320.jpg", "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1704096018, "has_gns": true, "num_gns": 19, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/15-SeriesHeadersManga_VampireKnight_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/15-th-SeriesThumbnailsManga_VampireKnight_400x320.jpg", "label": null, "recommended_series_ids": "24,188,392,25,442", "latest_author": "Matsuri Hino", "title_sort": "vampire knight"}}, {"manga_series": {"id": 81, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 81, "device_id": 4, "keyart": "img/manga_series_keyart/71-fairy_cube_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 768, "manga_imprint_id": 2, "title": "Fairy Cube", "synopsis": "Ian and Rin used to just see spirits. Now Ian is one. Using the Fairy Cube, Ian must figure out how to stop the lizard-spirit Tokage from taking over his life and destroying any chance he has of resurrection.", "tagline": "", "rating": "tp", "vanityurl": "fairy-cube", "copyright": "Fairy Cube \u00a9 Kaori Yuki 2005/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1629410732, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5888-SeriesHeaders_FairyCube_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/137-SeriesThumbnailsManga_FairyCube_400x320.jpg", "label": null, "recommended_series_ids": "160,172,85,622", "latest_author": "Kaori Yuki", "title_sort": "fairy cube"}}, {"manga_series": {"id": 80, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 80, "device_id": 4, "keyart": "img/manga_series_header/80-SeriesHeaders_DBZ_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": 1, "title": "Dragon Ball Z", "synopsis": "After years of training and adventure, Goku has become Earth's ultimate warrior. And his son, Gohan, shows even greater promise. But the stakes are increasing as even deadlier enemies threaten the planet. DRAGON BALL Z is the ultimate science fiction-martial arts manga.", "tagline": "Goku and friends battle intergalactic evil in the greatest action-adventure-fantasy-comedy-fighting series ever!", "rating": "a", "vanityurl": "dragon-ball-z", "copyright": "", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/80-SeriesHeaders_DBZ_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/74-SeriesThumbnailsManga_DBZ_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 26, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/80-SeriesHeaders_DBZ_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/74-SeriesThumbnailsManga_DBZ_400x320.jpg", "label": null, "recommended_series_ids": "461,648,466,566,138,724,414,249", "latest_author": "Akira Toriyama", "title_sort": "dragon ball z"}}, {"manga_series": {"id": 101, "updated_at": "2023-10-30T16:33:50.000-07:00", "manga_series_common_id": 101, "device_id": 4, "keyart": "img/manga_series_keyart/77-blackbird_940x332_v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1061, "manga_imprint_id": 2, "title": "Black Bird", "synopsis": "There is a world of myth and magic that intersects ours, and only a special few can see it. Misao Harada is one such person, and she wants nothing to do with magical realms. She just wants to have a normal high school life and maybe get a boyfriend. But she is the bride of demon prophecy, and her blood grants incredible powers, her flesh immortality. Now the demon realm is fighting over the right to her hand...or her life!", "tagline": "Misao is the bride of demon prophecy, and the demon realm is fighting over the right to her hand\u2026or her life!", "rating": "tp", "vanityurl": "black-bird", "copyright": "BLACK BIRD \u00a9 2007 Kanoko SAKURAKOUJI/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1698708830, "has_gns": true, "num_gns": 18, "has_chapters": true, "num_chapters": 74, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 72, "chapter_last_num": 72, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5628-Header_BlackBird_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/202-SeriesThumbnailsManga_BLB_400x320.jpg", "label": null, "recommended_series_ids": "99,754,146,720,169,742", "latest_author": "Kanoko Sakurakouji", "title_sort": "black bird"}}, {"manga_series": {"id": 84, "updated_at": "2023-10-27T16:54:20.000-07:00", "manga_series_common_id": 84, "device_id": 4, "keyart": "img/manga_series_keyart/80-ab_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 567, "manga_imprint_id": 2, "title": "Absolute Boyfriend", "synopsis": "Rejected way too many times by good-looking (and unattainable) guys, shy Riiko Izawa goes online and signs up for a free trial of a mysterious Nightly Lover \"\"figure.\"\" The very next day, a cute naked guy is delivered to her door, and he wants to be her boyfriend! Has Riiko died and gone to heaven? The cute guy turns out to be sweet, smart, a great cook, and lots more. And he looks like a million bucks, which is what he's going to cost Riiko if she doesn't return him in time...", "tagline": "Activate him with a kiss. Go all the way, and he\u2019s yours forever.", "rating": "tp", "vanityurl": "absolute-boyfriend", "copyright": "ZETTAI KARESHI \u00a9 2003 Yuu WATASE/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1698450860, "has_gns": true, "num_gns": 6, "has_chapters": true, "num_chapters": 35, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 35, "chapter_last_num": 35, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5908-SeriesHeader_AbsoluteBoyfriend_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/46-SeriesThumbnailsManga_AbsoluteBF_400x320.jpg", "label": null, "recommended_series_ids": "618,87,229,720,600,778,742", "latest_author": "Yuu Watase", "title_sort": "absolute boyfriend"}}, {"manga_series": {"id": 87, "updated_at": "2023-10-30T16:29:12.000-07:00", "manga_series_common_id": 87, "device_id": 4, "keyart": "img/manga_series_keyart/83-arata_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1216, "manga_imprint_id": 3, "title": "Arata: The Legend", "synopsis": "In a mythical world where humans and gods coexist, a ceremony marking the new governing princess is about to occur for the first time in 60 years. Only a girl from the Hime Clan may take this position, but the lack of females born to this family means that a boy called Arata must pose for the role. Meanwhile in modern-day Japan, a boy named Arata Hinohara is starting his new life in high school. He wants to put memories of his difficult past behind him, but things aren't going to be simple when he discovers a mysterious connection to the first Arata...", "tagline": "The first shonen series by acclaimed author Yuu Watase, creator of Fushigi Y\u00fbgi and Absolute Boyfriend!", "rating": "t", "vanityurl": "arata-the-legend", "copyright": "ARATAKANGATARI \u00a9 2009 Yuu WATASE/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1707377078, "has_gns": true, "num_gns": 24, "has_chapters": true, "num_chapters": 237, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 237, "chapter_last_num": 237, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5544-Tier06_SeriesHeaders_Arata_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/236-Tier06_SeriesThumbnails_ART_400x320.jpg", "label": null, "recommended_series_ids": "84,229,777,720,778,231,806", "latest_author": "Yuu Watase", "title_sort": "arata: the legend"}}, {"manga_series": {"id": 82, "updated_at": "2024-01-18T10:31:24.000-08:00", "manga_series_common_id": 82, "device_id": 4, "keyart": "img/manga_series_header/82-Header_Kekkaishi_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 527, "manga_imprint_id": 3, "title": "Kekkaishi", "synopsis": "By night, teenager Yoshimori Sumimura is a \"kekkaishi\"--a demon-hunter who specializes in creating magical barriers around his prey. By day, Yoshimori's got other demons to battle: an addiction to sweets and a seriously crotchety grandfather! Yoshimori's pretty neighbor and childhood friend, Tokine Yukimura, is also a kekkaishi, but their families are feuding over who is the true practitioner of the art.", "tagline": "Students by day, demon hunters by night!", "rating": "t", "vanityurl": "kekkaishi", "copyright": "KEKKAISHI \u00a9 2004 Yellow TANABE/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/82-Header_Kekkaishi_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1705603526, "has_gns": true, "num_gns": 35, "has_chapters": true, "num_chapters": 345, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 345, "chapter_last_num": 345, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/82-Header_Kekkaishi_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/16-SeriesThumbnailsManga_Kekkaishi_400x320.jpg", "label": null, "recommended_series_ids": "218,216,836,257,214,760,806", "latest_author": "Yellow Tanabe", "title_sort": "kekkaishi"}}, {"manga_series": {"id": 20, "updated_at": "2023-05-10T13:21:44.000-07:00", "manga_series_common_id": 20, "device_id": 4, "keyart": "img/manga_series_keyart/88-maoh_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1220, "manga_imprint_id": 3, "title": "Maoh: Juvenile Remix", "synopsis": "\"As crazy as your ideas might be, as long as you believe in yourself and tackle the issue head-on, you can even change the world.\" Ando is a high school student who has the power to make others say out loud what he's thinking. Inukai is the mysterious leader of a vigilante group called Grasshopper, which is at odds with the city's redevelopment plan. In this chaotic city, these two will come together to weave a story of courage, determination and confrontation.", "tagline": "What do you do when the city\u2019s savior is actually a devil in disguise\u2026?", "rating": "tp", "vanityurl": "maoh-juvenile-remix", "copyright": "MAOH JUVENILE REMIX \u00a9 2007 Kotaro ISAKA, Megumi OSUGA/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1688078669, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/88-maoh_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/238-SeriesThumbnailsManga_Maoh_v2_400x320.jpg", "label": null, "recommended_series_ids": "19,754,257,685,744", "latest_author": "Megumi Osuga", "title_sort": "maoh: juvenile remix"}}, {"manga_series": {"id": 96, "updated_at": "2023-05-10T13:21:45.000-07:00", "manga_series_common_id": 96, "device_id": 4, "keyart": "img/manga_series_keyart/91-oishinbo_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 901, "manga_imprint_id": 4, "title": "Oishinbo A la Carte", "synopsis": "As part of the celebrations for its 100th anniversary, the publishers of the T\u014dzai News have commissioned the creation of the \"Ultimate Menu,\" a model meal embodying the pinnacle of Japanese cuisine. This all-important task has been entrusted to journalist Yamaoka Shir\u014d, an inveterate cynic who possesses no initiative--but also an incredibly refined palate and an encyclopedic knowledge of food.", "tagline": "The best selling and most beloved food manga of all time! ", "rating": "t", "vanityurl": "oishinbo", "copyright": "OISHINBO A LA CARTE \u00a9 2006 Tetsu KARIYA, Akira HANASAKI/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1683750105, "has_gns": true, "num_gns": 7, "has_chapters": true, "num_chapters": 77, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 57, "chapter_last_num": 57, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5805-SeriesHeaders_Oshinbo_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/175-SeriesThumbnailsManga_OIS_v2_400x320.jpg", "label": null, "recommended_series_ids": "782,613,93,836,187", "latest_author": "Story by Tetsu Kariya, Art by Akira Hanasaki", "title_sort": "oishinbo a la carte"}}, {"manga_series": {"id": 103, "updated_at": "2024-01-16T14:59:04.000-08:00", "manga_series_common_id": 103, "device_id": 4, "keyart": "img/manga_series_header/103-Header_FushiYugiGenbuKaiden_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 556, "manga_imprint_id": 2, "title": "Fushigi Y\u00fbgi: Genbu Kaiden", "synopsis": "When schoolgirl Takiko Okuda attempts to destroy her father's translation of The Universe of the Four Gods, she is instead sucked into the story, becoming the Priestess of Genbu in an epic journey to find the seven Celestial Warriors!", "tagline": "Travel back to the mystical Universe of the Four Gods in this prequel to the hit series Fushigi Y\u00fbgi!", "rating": "tp", "vanityurl": "fushigi-yugi-genbu-kaiden", "copyright": "FUSHIGI YUGI GENBUKAIDEN \u00a9 2003 Yuu WATASE/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/103-Header_FushiYugiGenbuKaiden_2000x800.jpg", "link_img": "img/manga_series_link_img/103-th-Thumb_FYGenbuKaiden_400x320.jpg", "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1705445944, "has_gns": true, "num_gns": 12, "has_chapters": true, "num_chapters": 40, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 40, "chapter_last_num": 40, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/103-Header_FushiYugiGenbuKaiden_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/103-th-Thumb_FYGenbuKaiden_400x320.jpg", "label": null, "recommended_series_ids": "84,87,229,181,720,246,208,231", "latest_author": "Yuu Watase", "title_sort": "fushigi y\u00fbgi: genbu kaiden"}}, {"manga_series": {"id": 94, "updated_at": "2023-05-10T13:21:45.000-07:00", "manga_series_common_id": 94, "device_id": 4, "keyart": "img/manga_series_keyart/97-not_simple_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1163, "manga_imprint_id": 4, "title": "not simple", "synopsis": "Ian, a young man with a fractured family history, travels from Australia to England to America in the hope of realizing his dreams and reuniting with his beloved sister. His story unfolds backwards through the framing narrative of Jim, a reporter driven to capture Ian's experiences in a novel: not simple.", "tagline": "Complex, powerful, and emotionally wrenching, not simple is a novel told in visual form by one of the most acclaimed creators at work today.", "rating": "tp", "vanityurl": "not-simple", "copyright": "not simple \u00a9 2006 Natsume ONO/Shogakukan", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1683750105, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 14, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 13, "chapter_last_num": 13, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/97-not_simple_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/220-SeriesThumbnailsManga_NotSimple_400x320.jpg", "label": null, "recommended_series_ids": "91,92,836,186,822,228,713", "latest_author": "Natsume Ono", "title_sort": "not simple"}}, {"manga_series": {"id": 92, "updated_at": "2023-06-02T08:51:14.000-07:00", "manga_series_common_id": 92, "device_id": 4, "keyart": "img/manga_series_keyart/100-house_of_five_leaves_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1157, "manga_imprint_id": 4, "title": "House of Five Leaves", "synopsis": "Masterless samurai Akitsu Masanosuke is a skilled and loyal swordsman, but his na\u00efve, diffident nature has time and again caused him to be let go by the lords who have employed him. Hungry and desperate, he becomes a bodyguard for Yaichi, the charismatic leader of a gang called \"Five Leaves.\" Although disturbed by the gang's sinister activities, Masa begins to suspect that Yaichi's motivations are not what they seem. And despite his misgivings, the deeper he's drawn into the world of the Five Leaves, the more he finds himself fascinated by these devious, mysterious outlaws.", "tagline": "A many-sided tale of faith and betrayal, drama and intrigue, set in the world of old Edo.", "rating": "tp", "vanityurl": "house-of-five-leaves", "copyright": "SARAIYA GOYOU \u00a9 2006 Natsume ONO/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1685721074, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 57, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 57, "chapter_last_num": 57, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5915-SeriesHeader_HouseFiveLeaves_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/217-SeriesThumbnailsManga_HouseFiveLeaves_400x320.jpg", "label": null, "recommended_series_ids": "194,186,778,94,228,187", "latest_author": "Natsume Ono", "title_sort": "house of five leaves"}}, {"manga_series": {"id": 105, "updated_at": "2024-02-08T17:16:30.000-08:00", "manga_series_common_id": 105, "device_id": 4, "keyart": "img/manga_series_keyart/103-blue_exorcist_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1413, "manga_imprint_id": 5, "title": "Blue Exorcist", "synopsis": "Raised by Father Fujimoto, a famous exorcist, Rin Okumura never knew his real father. One day a fateful argument with Father Fujimoto forces Rin to face a terrible truth\u2014the blood of the demon lord Satan runs in Rin\u2019s veins! Rin swears to defeat Satan, but doing that means entering the mysterious True Cross Academy and becoming an exorcist himself. Can Rin fight demons and keep his infernal bloodline a secret? It won't be easy, especially when drawing his father\u2019s sword releases the demonic power within him!", "tagline": "Rin and his exorcist classmates are caught in a secret war against the forces of darkness. ", "rating": "tp", "vanityurl": "blue-exorcist", "copyright": "AO NO EXORCIST \u00a9 2009 by Kazue Kato/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1707441390, "has_gns": true, "num_gns": 28, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5392-SeriesHeader_Tier02_BEX_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/278-SeriesThumbnailsManga_BEX_400x320.jpg", "label": null, "recommended_series_ids": "8,546,722,540,732,312,781,371", "latest_author": "Kazue Kato", "title_sort": "blue exorcist"}}, {"manga_series": {"id": 99, "updated_at": "2023-06-14T10:54:13.000-07:00", "manga_series_common_id": 99, "device_id": 4, "keyart": "img/manga_series_keyart/106-backstage_prince_940x332_v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 660, "manga_imprint_id": 2, "title": "Backstage Prince", "synopsis": "Drawn into the exciting world of kabuki theatre, young Akari spends her time after school assisting the famous actor Shonosuke Ichimura. In the real world, however, this prince of kabuki is actually a high school cutie by the name of Ryusei Horiuchi.", "tagline": "Love blossoms backstage.", "rating": "t", "vanityurl": "backstage-prince", "copyright": "GAKUYAURA  OUJI \u00a9 2004 Kanoko SAKURAKOUJI/Shogakukan          KIWAMETSUKE GAKUYAURA  OUJI \u00a9 2006 Kanoko SAKURAKOUJI/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1686765253, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 10, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 6.1, "chapter_last_num": 6.1, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5909-SeriesHeader_BackstagePrince_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/107-SeriesThumbnailsManga_BckStgPrince_400x320.jpg", "label": null, "recommended_series_ids": "101,102,725,168,836,600,505,190", "latest_author": "Kanoko Sakurakouji", "title_sort": "backstage prince"}}, {"manga_series": {"id": 100, "updated_at": "2024-01-11T16:03:22.000-08:00", "manga_series_common_id": 100, "device_id": 4, "keyart": "img/manga_series_keyart/109-beast_master_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1151, "manga_imprint_id": 2, "title": "Beast Master", "synopsis": "Leo Aoi looks like a crazy animal with wild eyes, and he goes berserk whenever he feels threatened and sees blood. That doesn't stop animal-lover Yuiko Kubozuka from befriending him, however. In fact, Yuiko is the only person Leo will listen to when he has one of his violent fits...", "tagline": "Taming a beast was never this dangerous!", "rating": "tp", "vanityurl": "beast-master", "copyright": "BEAST MASTER \u00a9 2007 Kyousuke MOTOMI/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1705017802, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 9, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 6.2, "chapter_last_num": 6.2, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5801-SeriesHeaders_BeastMaster_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/214-SeriesThumbnailsManga_BSM_400x320.jpg", "label": null, "recommended_series_ids": "84,102,600,234,413,505,190,742", "latest_author": "Kyousuke Motomi", "title_sort": "beast master"}}, {"manga_series": {"id": 102, "updated_at": "2023-10-31T11:36:28.000-07:00", "manga_series_common_id": 102, "device_id": 4, "keyart": "img/manga_series_keyart/112-dengeki_daisy_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1303, "manga_imprint_id": 2, "title": "Dengeki Daisy", "synopsis": "After orphan Teru Kurebayashi loses her beloved older brother, she finds solace in the messages she exchanges with DAISY, an enigmatic figure who can only be reached through the cell phone her brother left her. Meanwhile, mysterious Tasuku Kurosaki always seems to be around whenever Teru needs help\u2026 Could DAISY be a lot closer than Teru thinks?\r\n", "tagline": "A romantic comedy about an orphan whose encounter with a mysterious hacker embroils her in espionage!", "rating": "tp", "vanityurl": "deneki-daisy", "copyright": "DENGEKI DAISY \u00a9 2007 Kyousuke MOTOMI/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1698777388, "has_gns": true, "num_gns": 16, "has_chapters": true, "num_chapters": 79, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 75.4, "chapter_last_num": 75.4, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5452-Tier04_SeriesHeaders_DGD_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/256-SeriesThumbnailsManga_DEN_400x320.jpg", "label": null, "recommended_series_ids": "100,135,600,413,541,141", "latest_author": "Kyousuke Motomi", "title_sort": "dengeki daisy"}}, {"manga_series": {"id": 104, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 104, "device_id": 4, "keyart": "img/manga_series_keyart/118-ai_ore_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1337, "manga_imprint_id": 2, "title": "Ai Ore!", "synopsis": "Mizuki is the female \"prince\" of her all-girls school and the lead guitarist in an all-girl rock band. Akira is the male \"princess\" of his all-boys school and wants to join her band. Love may be on his mind, but romance is difficult when everyone keeps mistaking Mizuki for a boy and Akira for a girl!", "tagline": "The boy (who looks like a girl) meets girl (who looks like a boy) romance!", "rating": "tp", "vanityurl": "ai-ore", "copyright": "Aiwo Utauyori Oreni Oborero! Volume 1-3 \u00a9 Mayu SHINJO 2010", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1629134294, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5800-SeriesHeaders_AiOre_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/265-SeriesThumbnailsManga_AIO_v2_400x320.jpg", "label": null, "recommended_series_ids": "188,264,268,168,16", "latest_author": "Mayu Shinjo", "title_sort": "ai ore!"}}, {"manga_series": {"id": 91, "updated_at": "2023-05-10T13:21:45.000-07:00", "manga_series_common_id": 91, "device_id": 4, "keyart": "img/manga_series_keyart/121-childrenofthesea_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1074, "manga_imprint_id": 4, "title": "Children of the Sea", "synopsis": "When Ruka was younger, she saw a ghost in the water at the aquarium where her dad works. Now she feels drawn toward the aquarium and the two mysterious boys she meets there, Umi and Sora. They were raised by dugongs and hear the same strange calls from the sea as she does.", "tagline": "Three sea-touched children are the only ones who can understand the strange message the oceans are sending.", "rating": "tp", "vanityurl": "children-of-the-sea", "copyright": "KAIJU NO KODOMO \u00a9 2007 Daisuke IGARASHI/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1683750105, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 43, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 43, "chapter_last_num": 43, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5631-Header_ChildrenOfTheSea_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/206-SeriesThumbnailsManga_COS_400x320.jpg", "label": null, "recommended_series_ids": "725,736,822,95,228,187,182", "latest_author": "Daisuke Igarashi", "title_sort": "children of the sea"}}, {"manga_series": {"id": 85, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 85, "device_id": 4, "keyart": "img/manga_series_keyart/124-guignol_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1269, "manga_imprint_id": 2, "title": "Grand Guignol Orchestra", "synopsis": "Lucille loves heading up the traveling Grand Orchestra, roving from town to town entertaining the masses and making money. But now the musicians have met their toughest audience: people infected with the Guignol Virus, turning them into zombie dolls intent on killing all humans!", "tagline": "", "rating": "tp", "vanityurl": "grand-guignol-orchestra", "copyright": "GUIGNOL KYUTEI GAKUDAN \u00a9 Kaori Yuki 2009/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1644564391, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5898-SeriesHeaders_GrandGuignol_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/249-SeriesThumbnailsManga_GrandGuignol_400x320.jpg", "label": null, "recommended_series_ids": "206,160,172,118,622", "latest_author": "Kaori Yuki", "title_sort": "grand guignol orchestra"}}, {"manga_series": {"id": 88, "updated_at": "2023-06-14T14:07:41.000-07:00", "manga_series_common_id": 88, "device_id": 4, "keyart": "img/manga_series_keyart/127-hydecloser_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1218, "manga_imprint_id": 3, "title": "Hyde & Closer", "synopsis": "Shunpei Closer is your average...well, slightly below average kid in junior high who finds himself in the middle of a great battle of dark sorcery. With cursed dolls coming after him one after another, Shunpei Closer's life is in danger! If that weren't enough, Hyde, the teddy bear given to him by his grandfather, suddenly comes alive to rescue him. With Hyde's help, can Shunpei save himself and live to see another day?", "tagline": "The magic journey of a boy and his chainsaw-wielding bear!", "rating": "tp", "vanityurl": "hyde-and-closer", "copyright": "JUHOU KAIKIN!! HYDE AND CLOSER \u00a9 2008 Haro ASO/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1686776861, "has_gns": true, "num_gns": 7, "has_chapters": true, "num_chapters": 60, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 60, "chapter_last_num": 60, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5924-SeriesHeader_HydeCloser_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/237-SeriesThumbnailsManga_HydeCloser_400x320.jpg", "label": null, "recommended_series_ids": "786,754,218,207,257,302,744", "latest_author": "Haro Aso", "title_sort": "hyde & closer"}}, {"manga_series": {"id": 93, "updated_at": "2023-05-10T13:21:45.000-07:00", "manga_series_common_id": 93, "device_id": 4, "keyart": "img/manga_series_keyart/130-igimat_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1207, "manga_imprint_id": 4, "title": "I'll Give It My All...Tomorrow", "synopsis": "This is the story of a forty-year-old salaryman who quits his job to pursue his dream of becoming a manga artist--and the family that has to put up with him. While not terribly unhappy, Shizuo Oguro can't fight the feeling that something in his life just isn't right, so he walks away from his stable (yet boring) day job to embark on a journey of self-discovery. Unfortunately for his family, this journey also involves playing video games all day while his teenage daughter and elderly father support him. Will Shizuo succeed in creating a true manga masterpiece, or will he be just another dropout living a life of slack?", "tagline": "Life begins at 40, whether you\u2019re ready for it or not.", "rating": "tp", "vanityurl": "ill-give-it-my-all-tomorrow", "copyright": "OREWAMADA HONKIDASHITENAIDAKE \u00a9 2007 Shunju AONO/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1683750105, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 30, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 28, "chapter_last_num": 28, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5916-SeriesHeader_IGiveItMyAll_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/234-SeriesThumbnailsManga_GiveItMyAll_400x320.jpg", "label": null, "recommended_series_ids": "754,83,148,836,96,228,98", "latest_author": "Shuju Aono", "title_sort": "i'll give it my all...tomorrow"}}, {"manga_series": {"id": 89, "updated_at": "2023-05-10T13:21:45.000-07:00", "manga_series_common_id": 89, "device_id": 4, "keyart": "img/manga_series_keyart/349-Inuyasha_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 526, "manga_imprint_id": 3, "title": "Inuyasha (VIZBIG Edition)", "synopsis": "Kagome is an ordinary modern schoolgirl living an ordinary life. Who would have thought the dried-up old well on the site of her family's shrine would be a gateway to Japan's ancient past? Drawn through the gate against her will, Kagome finds herself battling demons for control of what she thought was a worthless trinket but is actually a powerful magical gem, the Shikon Jewel! Together with an unlikely ally, the half demon Inuyasha, Kagome begins a quest to recover the shards of the Shikon Jewel and learn more about her link to the past.", "tagline": "Manga legend Rumiko Takahashi\u2019s epic time-traveling demon-fighting adventure in feudal Japan!", "rating": "tp", "vanityurl": "inuyasha-vizbig-edition", "copyright": "INUYASHA \u00a9 1997 Rumiko TAKAHASHI/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1704096019, "has_gns": true, "num_gns": 18, "has_chapters": true, "num_chapters": 558, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 558, "chapter_last_num": 558, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5432-Tier03_SeriesHeader_INY_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/15-SeriesThumbnailsManga_INY_v2_400x320.jpg", "label": null, "recommended_series_ids": "720,710,778,736,303,698,585,806", "latest_author": "Rumiko Takahashi", "title_sort": "inuyasha (vizbig edition)"}}, {"manga_series": {"id": 108, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 108, "device_id": 4, "keyart": "img/manga_series_header/108-PokemonAdv_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": null, "title": "Pok\u00e9mon Adventures", "synopsis": "All your favorite Pok\u00e9mon game characters jump out of the screen into the pages of this action-packed manga!\r\n", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-adventures", "copyright": "\u00a9 2009-2010 Pok\u00e9mon. \u00a9 1995-2010 Nintendo/Creatures Inc./GAME FREAK inc. TM and \u00ae and character names are trademarks of Nintendo. POCKET MONSTER SPECIAL \u00a9 1997 Hidenori KUSAKA, MATO/SHOGAKUKAN   \u00a9 2010-2011 Pok\u00e9mon. \u00a9 1995-2011 Nintendo/Creatures Inc./GAME FREAK inc. TM and \u00ae and character names are trademarks of Nintendo. POCKET MONSTER SPECIAL \u00a9 1997 Hidenori KUSAKA, Satoshi YAMAMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/108-PokemonAdv_2000x800.jpg", "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687295062, "has_gns": true, "num_gns": 29, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/108-PokemonAdv_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/64-SeriesThumbnailsManga_POK_400x320.jpg", "label": null, "latest_author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "title_sort": "pok\u00e9mon adventures"}}, {"manga_series": {"id": 111, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 111, "device_id": 4, "keyart": "img/manga_series_header/111-PokemonDiamondPearl_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": 7, "title": "Pok\u00e9mon Adventures: Diamond and Pearl/Platinum", "synopsis": "All your favorite Pok\u00e9mon game characters jump out of the screen into the pages of this action-packed manga!", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-adventures-diamond-and-p", "copyright": "\u00a92018 The Pok\u00e9mon Company International. \u00a91995-2008 Nintendo / Creatures Inc. / GAME FREAK inc. TM, \u00ae, and character names are trademarks of Nintendo. POCKET MONSTERS SPECIAL \u00a9 1997 Hidenori KUSAKA, Satoshi YAMAMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/111-PokemonDiamondPearl_2000x800.jpg", "link_img": "img/manga_series_link_img/111-th-Pokemon_Diamond_Platinum.jpg", "subscription_type": null, "imprint_id": 7, "imprint_title": "Vizkids", "mod_ts": 1674460839, "has_gns": true, "num_gns": 11, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/111-PokemonDiamondPearl_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/111-th-Pokemon_Diamond_Platinum.jpg", "label": null, "latest_author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "title_sort": "pok\u00e9mon adventures: diamond and pearl/platinum"}}, {"manga_series": {"id": 86, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 86, "device_id": 4, "keyart": "img/manga_series_header/86-SeriesHeaders_RosarioVampireSeason2_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 832, "manga_imprint_id": 5, "title": "Rosario+Vampire: Season II", "synopsis": "Average human teenager Tsukune accidentally enrolls at a boarding school for monsters--no, not jocks and popular kids, but bona fide werewolves, witches and unnameables out of his wildest nightmares! On the plus side, all the girls have a monster crush on him. On the negative side, all the boys are so jealous they want to kill him! And so do the girls he spurns, because he only has eyes for one of them--the far-from-average vampire Moka. On the plus side, Moka only has glowing red eyes for Tsukune. On the O-negative side, she also has a burning, unquenchable thirst for his blood...", "tagline": "An action-packed romantic comedy chock-full of monsters and cute girls in bikinis.", "rating": "tp", "vanityurl": "rosario-vampire-season-ii", "copyright": "ROSARIO TO VAMPIRE SEASON II \u00a9 2007 by Akihisa Ikeda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/86-SeriesHeaders_RosarioVampireSeason2_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/151-SeriesThumbnailsManga_RosarioVampire2_400x320.jpg", "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1676409616, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/86-SeriesHeaders_RosarioVampireSeason2_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/151-SeriesThumbnailsManga_RosarioVampire2_400x320.jpg", "label": null, "recommended_series_ids": "449,356,448,703,722,732,78", "latest_author": "Akihisa Ikeda", "title_sort": "rosario+vampire: season ii"}}, {"manga_series": {"id": 95, "updated_at": "2023-09-07T17:23:40.000-07:00", "manga_series_common_id": 95, "device_id": 4, "keyart": "img/manga_series_keyart/154-saturnapartments_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1205, "manga_imprint_id": 4, "title": "Saturn Apartments", "synopsis": "Far in the future, humankind has evacuated the earth in order to preserve it. Humans now reside in a gigantic structure that forms a ring around the earth, thirty-five kilometers up in the sky. The society of the Ring is highly stratified: the higher the floor, the greater the status. Mitsu, the lowly son of a window washer, has just graduated junior high. When his father disappears and is assumed dead, Mitsu must take on his father's occupation. As he struggles with the transition to working life, Mitsu's job treats him to an outsider's view into the living-room dioramas of the Saturn Apartments.", "tagline": "A touching, character-rich vision of an intriguing new world.", "rating": "t", "vanityurl": "saturn-apartments", "copyright": "DOSEI MANSION \u00a9 2006 Hisae IWAOKA/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1707464440, "has_gns": true, "num_gns": 7, "has_chapters": true, "num_chapters": 64, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 63.5, "chapter_last_num": 63.5, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/154-saturnapartments_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/233-SeriesThumbnailsManga_SaturnApt_400x320.jpg", "label": null, "recommended_series_ids": "218,91,777,93,97,187,98", "latest_author": "Hisae Iwaoka", "title_sort": "saturn apartments"}}, {"manga_series": {"id": 17, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 17, "device_id": 4, "keyart": "img/manga_series_keyart/357-SkipBeat-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 581, "manga_imprint_id": 2, "title": "Skip\u2022Beat!", "synopsis": "Kyoko Mogami followed her true love Sho to Tokyo to support him while he made it big as an idol. But he's casting her out now that he's famous! Kyoko won't suffer in silence--she's going to get her sweet revenge by beating Sho in show biz!", "tagline": "When Kyoko\u2019s heart is broken, she decides that revenge is a dish best served in the spotlight!", "rating": "t", "vanityurl": "skip-beat", "copyright": "Skip\u30fbBeat! \u00a9 Yoshiki Nakamura 2002/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1704096024, "has_gns": true, "num_gns": 48, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5466-Tier04_SeriesHeaders_SKB_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/58-SeriesThumbnailsManga_SKB_400x320.jpg", "label": null, "recommended_series_ids": "472,162,16,282", "latest_author": "Story and Art by Yoshiki Nakamura", "title_sort": "skip\u2022beat!"}}, {"manga_series": {"id": 97, "updated_at": "2023-09-07T12:58:01.000-07:00", "manga_series_common_id": 97, "device_id": 4, "keyart": "img/manga_series_keyart/159-solanin_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 951, "manga_imprint_id": 4, "title": "Solanin", "synopsis": "Meiko Inoue is a recent college grad working as an office lady in a job she hates. Her boyfriend Naruo is permanently crashing at her apartment because his job as a freelance illustrator doesn't pay enough for rent. And her parents in the country keep sending her boxes of veggies that just rot in her fridge. Straddling the line between her years as a student and the rest of her life, Meiko struggles with the feeling that she's just not cut out to be a part of the real world.", "tagline": "Will Meiko find her place in the world, or will the world force her to fit?", "rating": "tp", "vanityurl": "solanin", "copyright": "SOLANIN \u00a9 2006 Inio ASANO/Shogakukan", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1694116681, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 30, "num_chapters_free": 3, "chapter_latest_pub_date": 1688057970, "chapter_latest_num": 29, "chapter_last_num": 29, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5634-Header_Solanin_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/182-SeriesThumbnailsManga_SOL_400x320.jpg", "label": null, "recommended_series_ids": "531,688,443,709,834,98", "latest_author": "Inio Asano", "title_sort": "solanin"}}, {"manga_series": {"id": 106, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 106, "device_id": 4, "keyart": "img/manga_series_keyart/162-saiunkoku_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1335, "manga_imprint_id": 2, "title": "The Story of Saiunkoku", "synopsis": "Shurei Hong, destitute but of noble birth, has always dreamed of working as a civil servant in the imperial court of Saiunkoku, but women are barred from holding office. The emperor Ryuki, however, refuses to take command, leaving everything to his advisors. Shurei is asked to become a consort to the emperor to persuade the ne\u2019er-do-well ruler to govern.", "tagline": "", "rating": "t", "vanityurl": "the-story-of-saiunkoku", "copyright": "Saiunkoku Monogatari Volume 1-7 \u00a9 Kairi YURA 2006-2011 \u00a9 Sai YUKINO 2006-2011", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1675928345, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/162-saiunkoku_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/264-SeriesThumbnailsManga_Saiunkoku_400x320.jpg", "label": null, "recommended_series_ids": "103,181,720,238,473,355", "latest_author": "Story by Sai Yukino, Art by Kairi Yura", "title_sort": "story of saiunkoku"}}, {"manga_series": {"id": 98, "updated_at": "2023-09-07T16:29:18.000-07:00", "manga_series_common_id": 98, "device_id": 4, "keyart": "img/manga_series_keyart/165-www_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1165, "manga_imprint_id": 4, "title": "What a Wonderful World!", "synopsis": "What begins with a college dropout bored of her mediocre routine soon becomes a fantastic series of vignettes about the unexpected ways that lives intersect. Filled with magical realism in the face of the cold reality of modern life, at their core these stories are about discovering something precious in the chaos of existence.", "tagline": "A series of short stories that show life is never ordinary.", "rating": "tp", "vanityurl": "what-a-wonderful-world", "copyright": "SUBARASHII SEKAI \u00a9 2003 Inio ASANO/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1694129358, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 19, "chapter_last_num": 19, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5635-Header_WhatWonderfulWorld_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/221-SeriesThumbnailsManga_WWW_400x320.jpg", "label": null, "recommended_series_ids": "613,531,688,443,709,836,97,834", "latest_author": "Inio Asano", "title_sort": "what a wonderful world!"}}, {"manga_series": {"id": 83, "updated_at": "2024-01-12T11:45:36.000-08:00", "manga_series_common_id": 83, "device_id": 4, "keyart": "img/manga_series_keyart/168-crossgame_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1318, "manga_imprint_id": 3, "title": "Cross Game", "synopsis": "Cross Game is a moving drama that is heartfelt and true, yet in the brilliant hands of manga artist Mitsuru Adachi, delightfully flows with a light and amusing touch. The series centers around a boy named Ko, the family of four sisters who live down the street and the game of baseball. This poignant coming-of-age story will change your perception of what shonen manga can be.", "tagline": "This poignant coming-of-age story will change your perception of what shonen manga can be. About the game of life\u2026and baseball.", "rating": "t", "vanityurl": "cross-game", "copyright": "CROSS GAME \u00a9 2005 Mitsuru ADACHI/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1707464463, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 170, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 160, "chapter_last_num": 160, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5912-SeriesHeader_CrossGame_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/261-SeriesThumbnailsManga_CrossGame_400x320.jpg", "label": null, "recommended_series_ids": "250,836,600,614,236", "latest_author": "Mitsuru Adachi", "title_sort": "cross game"}}, {"manga_series": {"id": 113, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 113, "device_id": 4, "keyart": "img/manga_series_keyart/362-NGE_GN14-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 531, "manga_imprint_id": 6, "title": "Neon Genesis Evangelion", "synopsis": "Japan's most controversial anime series is over...but not the manga version of Neon Genesis Evangelion! Series co-creator Yoshiyuki Sadamoto's personal interpretation of the Evangelion characters and story is sure to intrigue new and old fans alike. In 2015, the \"Angels\" have returned, and Shinji Ikari, a fourteen year-old child of the new Earth, is forced by his father Gendo--commander of the secret organization NERV--to pilot the monstrous biomechanical weapon called \"Evangelion\" to match the Angels' fearsome power...", "tagline": "Books based on the landmark animated series that redefined the mecha genre.", "rating": "tp", "vanityurl": "neon-genesis-evangelion-stages", "copyright": "\u00a9 khara", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1665698790, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5399-SeriesHeader_Tier02_NGE_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/20-SeriesThumbnailsManga_NGE_400x320.jpg", "label": null, "recommended_series_ids": "307,318,19,401,269", "latest_author": "Story and Art by Yoshiyuki Sadamoto, Original Concept by khara * GAINAX", "title_sort": "neon genesis evangelion"}}, {"manga_series": {"id": 114, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 114, "device_id": 4, "keyart": "img/manga_series_keyart/174-gente_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1183, "manga_imprint_id": 4, "title": "Gente", "synopsis": "Buona sera! Welcome to Casetta dell'Orso, a quaint little restaurant in the heart of Rome. The food's delicious, but the handsome staff of bespectacled gentlemen is the real draw. Follow these dashing men home and witness their romances, heartaches, hopes and dreams in this delightfully whimsical continuation of Natsume Ono's beloved Ristorante Paradiso.", "tagline": "", "rating": "tp", "vanityurl": "gente", "copyright": "GENTE \u00a9 2007-2009 NATSUME ONO/OHTA PUBLISHING CO.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1629306772, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5942-SeriesHeaders_Gente_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/227-SeriesThumbnailsManga_Gente_400x320.jpg", "label": null, "recommended_series_ids": "115,97,555,228,187", "latest_author": "Natsume Ono", "title_sort": "gente"}}, {"manga_series": {"id": 115, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 115, "device_id": 4, "keyart": "img/manga_series_keyart/177-rispara_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1181, "manga_imprint_id": 4, "title": "Ristorante Paradiso", "synopsis": "At the age of 21, Nicoletta travels to Rome to find her mother, Olga, who abandoned her long ago. Nicoletta finds her at Casetta dell'Orso, a charming little restaurant owned by Olga's husband. The staff of bespectacled gentlemen welcomes Nicoletta warmly, but Olga's reception is not so pleasant. Olga has never told her husband that she ever had children--and he must never know.\r\n", "tagline": "", "rating": "tp", "vanityurl": "ristorante-paradiso", "copyright": "Ristorante Paradiso \u00a9 2006 NATSUME ONO/OHTA PUBLISHING CO.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1629744738, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/177-rispara_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/226-SeriesThumbnailsManga_Ristorante_400x320.jpg", "label": null, "recommended_series_ids": "186,96,97,555,187", "latest_author": "Natsume Ono", "title_sort": "ristorante paradiso"}}, {"manga_series": {"id": 117, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 117, "device_id": 4, "keyart": "img/manga_series_keyart/183-940x332DaveGuertinfirstflight.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2154, "manga_imprint_id": 6, "title": "Art For Hope", "synopsis": "Artists from all over the world contribute new pieces designed exclusively for Art for Hope, a joint charitable venture between VIZ Media and Autodesk to benefit Architecture for Humanity. All artists used Autodesk SketchBook to create their art. Participants include Eisner Award Winner Rob Guillory and Harvey Award Winner Lark Pien. The art book is presented in the Japanese reading format which reads from right to left.", "tagline": "", "rating": "a", "vanityurl": "art-for-hope", "copyright": "Art for Hope Compilation (c) 2011 VIZ Media, LLC. Individual Artwork is copyright of its respective artist.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1649888767, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/183-940x332DaveGuertinfirstflight.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/659-SeriesThumbnailsManga_ArtForHope_400x320.jpg", "label": null, "recommended_series_ids": "746,291,322,380", "latest_author": "Joel Enos", "title_sort": "art for hope"}}, {"manga_series": {"id": 118, "updated_at": "2023-09-07T17:10:32.000-07:00", "manga_series_common_id": 118, "device_id": 4, "keyart": "img/manga_series_keyart/186-earl_and_the_fairy_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1580, "manga_imprint_id": 2, "title": "The Earl and The Fairy", "synopsis": "Lydia Carlton is a fairy doctor,one of the few people with the ability to see the magical creatures who share our world. During one of her rare trips to London to visit her father, Lydia\u2019s quiet life is suddenly transformed when she is rescued from kidnappers by a mysterious young man!", "tagline": "Lydia can see fairies, but can she tell who the real villain is?", "rating": "t", "vanityurl": "the-earl-and-the-fairy", "copyright": "", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694131832, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 15, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 15, "chapter_last_num": 15, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5803-SeriesHeaders_EarlandFairy_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/298-SeriesThumbnailsManga_EaF_v2_400x320.jpg", "label": null, "recommended_series_ids": "146,777,720,778,505,230,806", "latest_author": "Ayuko", "title_sort": "earl and the fairy"}}, {"manga_series": {"id": 122, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 122, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": "com.vizmedia.android.wsja_yearly", "list_price": "25.99", "pb_property_id": null, "manga_imprint_id": 1, "title": "Weekly Shonen Jump", "synopsis": "Weekly Shonen Jump is a weekly digital manga magazine, available only on the VIZ Manga platform. Every week get new chapters of the world\u2019s most popular manga simultaneously with their publication in Japan! \r\n\r\nYou can try out the current issue or become a Weekly SJ Annual Member! Then read your issues at vizmanga.com or on the VIZ Manga iOS apps!", "tagline": "", "rating": "tp", "vanityurl": "weekly-shonen-jump", "copyright": "ALL YOU NEED IS KILL \u00a9 2014 by Hiroshi Sakurazaka, Ryosuke Takeuchi, yoshitoshi ABe, Takeshi Obata/SHUEISHA Inc; BAKUMAN. \u00a9 2008 by Tsugumi Ohba, Takeshi Obata/SHUEISHA Inc.; BENCH \u00a9 2010 by Masashi Kishimoto/SHUEISHA Inc.; BLACK CLOVER \u00a9 2015 by Yuki Tabata/SHUEISHA Inc.; BLEACH \u00a9 2001 by Tite Kubo/SHUEISHA Inc.; BOKU NO HERO ACADEMIA \u00a9 2014 by Kohei Horikoshi/SHUEISHA Inc.; AO NO EXORCIST \u00a9 2009 by Kazue Kato/SHUEISHA Inc.; BORUTO: NARUTO NEXT GENERATIONS \u00a9 2016 by Masashi Kishimoto, Mikio Ikemoto, Ukyo Kodachi/SHUEISHA Inc.;  CROSS MANAGE \u00a9 2012 by KAITO/SHUEISHA Inc.; DRAGON BALL \u00a9 1984 by BIRD STUDIO/SHUEISHA Inc.; E-ROBOT \u00a9 2014 by Ryohei Yamamoto/SHUEISHA Inc.; ELDLIVE \u00a9 2013 by Akira Amano/SHUEISHA Inc.; GAKKYU HOTEI \u00a9 2014 by Nobuaki Enoki, Takeshi Obata/SHUEISHA Inc.; JACO THE GALACTIC PATROLMAN \u00a9 2013 by BIRD STUDIO/SHUEISHA Inc.; HANA-NOCHI HARE \u00a9 2015 by Yoko Kamio \u2022 Leaf Production/SHUEISHA Inc.; HI-FI CLUSTER \u00a9 2014 by Ippei Goto/SHUEISHA Inc.; JUDOS \u00a9 2014 by Shinsuke Kondo/SHUEISHA Inc.; KAGAMIGAMI \u00a9 2015 by Toshiaki Iwashiro/SHUEISHA Inc.; KAIZONINGEN ROGGY \u00a9 2015 by Yu Miki/SHUEISHA Inc.; KINTOKI \u00a9 2010 by BIRD STUDIO/SHUEISHA Inc.; MARIO \u00a9 2013 by Masashi Kishimoto/SHUEISHA Inc.; NANI MADE KOROSERU \u00a9 2014 by NISIO ISIN, Akihisa Ikeda/SHUEISHA Inc.; NARUTO \u00a9 1999 by Masashi Kishimoto/SHUEISHA Inc.; NARUTO GAIDEN \u00a9 2015 by Masashi Kishimoto/SHUEISHA Inc.; NISEKOI \u00a9 2011 by Naoshi Komi/SHUEISHA Inc.; ONE PIECE \u00a9 1997 by Eiichiro Oda/SHUEISHA Inc.; ONE-PUNCH MAN \u00a9 2012 by ONE, Yusuke Murata/SHUEISHA Inc.; RKD-EK9 \u00a9 2014 by NISIO ISIN, Takeshi Obata/SHUEISHA Inc.; RUROUNI KENSHIN \u00a9 1994 by Nobuhiro Watsuki/SHUEISHA Inc.; SACHIE-CHAN GU \u00a9 2008 by Akira Toriyama, Masakazu Katsura/SHUEISHA Inc.;  SAKURAN (KARI) \u00a9 2013 by Toshiaki Iwashiro/SHUEISHA Inc.; SHIKIGAMI TWILIGHT DAYS \u00a9 2014 by Toshiaki Iwashiro/SHUEISHA Inc.; OWARI NO SERAPH \u00a9 2012 by Takaya Kagami, Yamato Yamamoto, Daisuke Furuya/SHUEISHA Inc.; SPORTING SALT \u00a9 2014 by Yuto Kubota/SHUEISHA Inc.; STEALTH SYMPHONY \u00a9 2014 by Ryohgo Narita, Yoichi Amano/SHUEISHA Inc.; TIME KILLERS KAZUE KATO TANPENSHU \u00a9 2011 by Kazue Kato/SHUEISHA Inc.; TOKYO GHOUL \u00a9 2011 by Sui Ishida/SHUEISHA Inc.; TORIKO \u00a9 2008 by Mitsutoshi Shimabukuro/SHUEISHA Inc.; ULTRA BATTLE SATELLITE \u00a9 2015 by Yusuke Utsumi/SHUEISHA Inc.; YU-GI-OH! ZEXAL \u00a9 2010 by Kazuki Takahashi, Shin Yoshida, Naohito Miyoshi/SHUEISHA Inc. Based on Animation TV series YU-GI-OH! ZEXAL \u00a9 1996 Kazuki Takahashi \u00a9 2011 NAS \u2022 TV TOKYO; WORLD TRIGGER \u00a9 2013 by Daisuke Ashihara/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": true, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/122-th-WSJ_400x320.png", "subscription_type": null, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707712948, "has_gns": true, "num_gns": 0, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6644-image003.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/122-th-WSJ_400x320.png", "label": null, "latest_author": "Kazue Kato, Yuki Tabata, Kohei Horikoshi, Taishi Tsutsui, Tatsuki Fujimoto, Riichiro Inagaki, Boichi, Tomohide Hirao, Mizuki Yoda, Eiichiro Oda, Takaya Kagami, Yamato Yamamoto, Daisuke Furuya, Yuto Tsukuda, Shun Saeki, Daisuke Ashihara, Kaiu Shirai, Posuka Demizu", "title_sort": "weekly shonen jump", "product_id_month": "com.vizmedia.android.wsja_monthly", "product_id_year": "com.viz.wsj_yearly.discontinued", "price_month": 2.99, "price_month_web": 2.99, "price_year": "null", "price_year_web": "null"}}, {"manga_series": {"id": 123, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 123, "device_id": 4, "keyart": "img/manga_series_keyart/201-busorenkin_940x322.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 612, "manga_imprint_id": 5, "title": "Buso Renkin", "synopsis": "Buso Renkin is the story of teenager Kazuki Muto, who dies trying to save a girl who was being attacked by an eerie monster. The next morning, however, Kazuki is left wondering whether it was all a dream. Lo and behold, the girl, the monster, and his death are all real! The girl, Tokiko Tsumura, was actually trying to slay the homunculus (a beast that can take the form of humans, and whose main source of food is people), but Kazuki got in her way. To revive Kazuki, Tokiko replaces his heart with a \"kakugane,\" an alchemic device that allows him to summon a lance with which to fight the monsters. It turns out that Tokiko is a member of the Alchemist Warriors, an organization sworn to protect the world from the diabolical creatures. Soon, Kazuki joins Tokiko in her quest to terminate the sinister being that creates and controls the homunculus.", "tagline": "A high school student\u2019s heroic act turns into an epic human vs. monster sword fight! ", "rating": "tp", "vanityurl": "buso-renkin", "copyright": "BUSOU RENKIN \u00a9 2003 by Nobuhiro Watsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1672560010, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5863-SeriesHeaders_BusoRenkin_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/77-SeriesThumbnailsManga_BusoRenkin_400x320.jpg", "label": null, "recommended_series_ids": "22,546,240,14", "latest_author": "Nobuhiro Watsuki", "title_sort": "buso renkin"}}, {"manga_series": {"id": 124, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 124, "device_id": 4, "keyart": "img/manga_series_header/124-SeriesHeaders_HikaruNoGoManga_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 624, "manga_imprint_id": 1, "title": "Hikaru no Go", "synopsis": "After stumbling across a haunted go board, Hikaru Shindo discovers that the spirit of a master player named Fujiwara-no-Sai has taken up residence in his consciousness. Sai awakens in Hikaru an untapped genius for the game, and soon the schoolboy is chasing his own dream--defeating the famed go prodigy Akira Toya!", "tagline": "Guided by the spirit of a master, young Hikaru Shindo strives to be the best at the ancient board game of go.", "rating": "a", "vanityurl": "hikaru-no-go", "copyright": "HIKARU-NO GO \u00a9 1998 by Yumi Hotta, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/124-SeriesHeaders_HikaruNoGoManga_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/124-th-SeriesThumbnailsManga_HikaruNoGo_400x320_jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560010, "has_gns": true, "num_gns": 23, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/124-SeriesHeaders_HikaruNoGoManga_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/124-th-SeriesThumbnailsManga_HikaruNoGo_400x320_jpg", "label": null, "recommended_series_ids": "318,7,9,700,450,440,129", "latest_author": "Story by Yumi Hotta and Art by Takeshi Obata", "title_sort": "hikaru no go"}}, {"manga_series": {"id": 125, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 125, "device_id": 4, "keyart": "img/manga_series_keyart/207-tegamibachi_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1072, "manga_imprint_id": 1, "title": "Tegami Bachi", "synopsis": "Amberground is locked in darkness. A man-made star casts only a dim light over the land. The pitch-black wilderness is infested with Gaichuu--colossal insects with metal exoskeletons. The Gaichuu make travel between the cities of Amberground extremely dangerous. But thankfully the Letter Bees, a brave corps of messengers, risk their lives in order to keep the hearts of Amberground connected.", "tagline": "A sci-fi fantasy series with heart.", "rating": "t", "vanityurl": "tegami-bachi", "copyright": "TEGAMIBACHI \u00a9 2006 by Hiroyuki Asada/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 20, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5598-Tier07_Headers_TegamiBachi_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/205-SeriesThumbnailsManga_TEG_400x320.jpg", "label": null, "recommended_series_ids": "22,18,312", "latest_author": "Hiroyuki Asada", "title_sort": "tegami bachi"}}, {"manga_series": {"id": 126, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 126, "device_id": 4, "keyart": "img/manga_series_header/126-SeriesHeaders_Psyren_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1291, "manga_imprint_id": 1, "title": "Psyren", "synopsis": "Ageha Yoshina just got transported to a warped alternate dimension where you've got to fight your way back to our world--or die trying.", "tagline": "Don\u2019t answer the phone unless you want to\u2026dial into DANGER!", "rating": "t", "vanityurl": "psyren", "copyright": "PSYREN \u00a9 2007 by Toshiaki Iwashiro/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/126-SeriesHeaders_Psyren_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560010, "has_gns": true, "num_gns": 16, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/126-SeriesHeaders_Psyren_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/255-SeriesThumbnailsManga_PSY_400x320.jpg", "label": null, "recommended_series_ids": "466,627,1", "latest_author": "Toshiaki Iwashiro", "title_sort": "psyren"}}, {"manga_series": {"id": 128, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 128, "device_id": 4, "keyart": "img/manga_series_header/128-MangaHeaders_YGOGX_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! GX", "synopsis": "Years after Yugi's legendary battles, the game is so popular that special institutions dedicated to the art of the Duel have sprung up all over the world. Join Jaden Yuki and his pals at the Academy for the adventures of the next generation of Yu-Gi-Oh!", "tagline": "The Next Generation of Duelist has arrived.", "rating": "a", "vanityurl": "yu-gi-oh-gx", "copyright": "YU-GI-OH! GX \u00a9 2005 by Kazuki Takahashi, Naoyuki Kageyama/SHUEISHA Inc. \u00a9 K. Takahashi \u00a9 NAS/TV TOKYO", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/128-MangaHeaders_YGOGX_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/128-th-SeriesThumbnailsManga_YGOGX_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/128-MangaHeaders_YGOGX_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/128-th-SeriesThumbnailsManga_YGOGX_400x320.jpg", "label": null, "recommended_series_ids": "466,80,611,414,133,326,247,286", "latest_author": "Naoyuki Kageyama", "title_sort": "yu-gi-oh! gx"}}, {"manga_series": {"id": 129, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 129, "device_id": 4, "keyart": "img/manga_series_keyart/219-pot_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 631, "manga_imprint_id": 1, "title": "The Prince of Tennis", "synopsis": "Four-time consecutive U.S. Junior tournament champ Ryoma Echizen comes to Seishun Academy to further his reign as The Prince of Tennis. His skill is matched only by his attitude--irking some but impressing all as he leads his team to the Nationals and beyond!", "tagline": "A tennis prodigy leads his club to victory at the national tournament.", "rating": "a", "vanityurl": "prince-of-tennis", "copyright": "THE PRINCE OF TENNIS \u00a9 1999 by Takeshi Konomi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1681844608, "has_gns": true, "num_gns": 42, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6465-Header_PrinceofTennisManga_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/92-SeriesThumbnailsManga_PoT_400x320.jpg", "label": null, "recommended_series_ids": "604,223,450,454,755", "latest_author": "Takeshi Konomi", "title_sort": "prince of tennis"}}, {"manga_series": {"id": 130, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 130, "device_id": 4, "keyart": "img/manga_series_header/130-SeriesHeaders_Genkaku_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1311, "manga_imprint_id": 5, "title": "Genkaku Picasso", "synopsis": "Hikari \u201cPicasso\u201d Hamura, a grouchy teenager with a talent for drawing, dies in a freak accident. The gods decide to revive him, but only on the condition that he use his artistic gift for the good of humanity. Picasso discovers that sketching a person\u2019s aura yields a surreal portrait of their psyche. Stranger still, Picasso can dive into these dreamscapes and help people by exploring their deepest emotions, memories and perceptions.\r\n ", "tagline": "Sometimes a picture can tell more than a thousand words.", "rating": "tp", "vanityurl": "genkaku-picasso", "copyright": "GENKAKU PICASSO \u00a9 2008 by Usamaru Furuya/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/130-SeriesHeaders_Genkaku_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1672560011, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/130-SeriesHeaders_Genkaku_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/258-SeriesThumbnailsManga_Genkaku_v2_400x320.jpg", "label": null, "recommended_series_ids": "7,721", "latest_author": "Usamaru Furuya", "title_sort": "genkaku picasso"}}, {"manga_series": {"id": 132, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 132, "device_id": 4, "keyart": "img/manga_series_keyart/228-dr_slump_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 620, "manga_imprint_id": 1, "title": "Dr. Slump", "synopsis": "When goofy inventor Senbei Norimaki creates a precocious robot named Arale, his masterpiece turns out to be more than he bargained for!", "tagline": "Robot girl hijinks from the creator of Dragon Ball!", "rating": "t", "vanityurl": "dr-slump", "copyright": "DR. SLUMP \u00a9 1980 by Akira Toriyama/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 18, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5730-Header_DrSlump_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/83-SeriesThumbnailsManga_DRS_400x320.jpg", "label": null, "recommended_series_ids": "10,466,362,717,721,235", "latest_author": "Akira Toriyama", "title_sort": "dr. slump"}}, {"manga_series": {"id": 133, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 133, "device_id": 4, "keyart": "img/manga_series_header/133-SeriesHeaders_YGO5D_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! 5D's", "synopsis": "In New Domino City, the hottest game in town is the Turbo Duel, fought from blazingly fast motorcycles called Duel Runners. On the outskirts of New Domino City, in a district known as Satellite, a new Turbo Duel hero emerges--Yusei Fudo! On his custom-built Duel Runner, Yusei takes on all challengers, fighting for his friends and the future of Satellite! \r\n\r\n ", "tagline": "Duelists, start your engines!", "rating": "t", "vanityurl": "yu-gi-oh-5d", "copyright": "YU-GI-OH! 5D\u2019s\u00a0\u00a9\u00a02009 by Masahiro Hikokubo, Masashi Sato/SHUEISHA Inc. \u00a9\u00a0K. Takahashi \u00a9\u00a0NAS\u30fbTV TOKYO", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/133-SeriesHeaders_YGO5D_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/231-SeriesThumbnailsManga_YGO5D_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1687913323, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/133-SeriesHeaders_YGO5D_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/231-SeriesThumbnailsManga_YGO5D_400x320.jpg", "label": null, "recommended_series_ids": "461,496,648,467,326,128,158,286", "latest_author": "Story by Masahiro Hikokubo, Art by Masashi Sato", "title_sort": "yu-gi-oh! 5d's"}}, {"manga_series": {"id": 134, "updated_at": "2023-05-25T13:14:41.000-07:00", "manga_series_common_id": 134, "device_id": 4, "keyart": "img/manga_series_keyart/234-stepping_on_roses_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1138, "manga_imprint_id": 2, "title": "Stepping on Roses", "synopsis": "Poor Sumi Kitamura\u2026 Her irresponsible older brother Eisuke keeps bringing home orphans for her to take care of even though they can barely afford their own basic needs! Just when Sumi's financial problems become dire, wealthy Soichiro Ashida enters her life with a bizarre proposition: he'll provide her with the money she so desperately needs if she agrees to marry him. But can Sumi fool high society into thinking she's a proper lady? Moreover, is it worth giving up everything for this sham of a marriage?", "tagline": "A rags-to-riches romance from the creator of Tail of the Moon!", "rating": "tp", "vanityurl": "stepping-on-roses", "copyright": "HADASHI DE BARA WO FUME \u00a9 2007 by Rinko Ueda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1688361519, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 56, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 56, "chapter_last_num": 56, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5856-SeriesHeaders_SteppingOnRoses_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/210-SeriesThumbnailsManga_StepRose_400x320.jpg", "label": null, "recommended_series_ids": "255,436,505,729,231,118,491,843", "latest_author": "Rinko Ueda", "title_sort": "stepping on roses"}}, {"manga_series": {"id": 135, "updated_at": "2023-05-10T13:21:46.000-07:00", "manga_series_common_id": 135, "device_id": 4, "keyart": "img/manga_series_keyart/237-kimi_ni_todoke_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1051, "manga_imprint_id": 2, "title": "Kimi ni Todoke: From Me to You", "synopsis": "Sawako Kuronuma is the perfect heroine...for a horror movie. Nicknamed \"Sadako\" after the haunting movie character, everyone is afraid to come near her for fear of being cursed. But underneath her scary exterior lies an ordinary teenager who just wants to make friends.", "tagline": "Sawako \u201cSadako\u201d Kuronuma is the perfect heroine\u2026for a horror movie.", "rating": "t", "vanityurl": "kimi-ni-todoke", "copyright": "KIMI NI TODOKE \u00a9 2005 by Karuho Shiina/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1704096020, "has_gns": true, "num_gns": 30, "has_chapters": true, "num_chapters": 124, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 123, "chapter_last_num": 123, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5543-Tier05_SeriesHeaders_KimiNi_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/197-Tier05_SeriesThumbnails_KNT_400x320.jpg", "label": null, "recommended_series_ids": "152,436,709,600,316,835,143,139", "latest_author": "Karuho Shiina", "title_sort": "kimi ni todoke: from me to you"}}, {"manga_series": {"id": 136, "updated_at": "2023-05-10T13:21:46.000-07:00", "manga_series_common_id": 136, "device_id": 4, "keyart": "img/manga_series_keyart/240-full_moon_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 573, "manga_imprint_id": 2, "title": "Full Moon", "synopsis": "Mitsuki loves singing, but a malignant tumor in her throat has prevented her from pursuing her passion. However, Mitsuki's life turns around when two fun-loving Shinigami appear to grant her a temporary reprieve from her illness--and give her singing career a magical jump-start.", "tagline": "Two Shinigami grant a dying girl her wish to become a pop star and find her lost love.", "rating": "t", "vanityurl": "full-moon", "copyright": "FULLMOON-WO SAGASHITE \u00a9 2001 by Arina Tanemura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1688000687, "has_gns": true, "num_gns": 7, "has_chapters": true, "num_chapters": 31, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 30, "chapter_last_num": 30, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5735-Header_FullMoon_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/52-SeriesThumbnailsManga_FLM_400x320.jpg", "label": null, "recommended_series_ids": "720,142,149,302,143,139,230,806", "latest_author": "Arina Tanemura", "title_sort": "full moon"}}, {"manga_series": {"id": 137, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 137, "device_id": 4, "keyart": "img/manga_series_keyart/243-crown_of_love_940x332_v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1144, "manga_imprint_id": 2, "title": "Crown of Love", "synopsis": "After a chance encounter, Hisayoshi \"Kumi\" Tajima falls madly in love with teen idol Rima Fujio. Bewitched by her beauty, he only wants to get closer to her. As a fan, he lives in a separate world. But if he becomes a fellow idol...", "tagline": "", "rating": "tp", "vanityurl": "crown-of-love", "copyright": "RENAI CROWN \u00a9 1998 by Yun KOUGA/SOBISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1628811848, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5940-SeriesHeaders_CrownOfLove_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1019-SeriesThumbnailsManga_CrownLove_400x320.jpg", "label": null, "recommended_series_ids": "104,156,420,559,17", "latest_author": "Yun Kouga", "title_sort": "crown of love"}}, {"manga_series": {"id": 138, "updated_at": "2023-09-13T13:38:09.000-07:00", "manga_series_common_id": 138, "device_id": 4, "keyart": "img/manga_series_header/138-SeriesHeaders_HunterxHunter_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 625, "manga_imprint_id": null, "title": "Hunter x Hunter", "synopsis": "Hunters are a special breed, dedicated to tracking down treasures, magical beasts, and even other people. But such pursuits require a license, and less than one in a hundred thousand can pass the grueling qualification exam. Those who do pass gain access to restricted areas, amazing stores of information, and the right to call themselves Hunters.", "tagline": "Plucky Gon\u2019s quest to find his dad leads him into a whole world of crazy adventure.", "rating": "tp", "vanityurl": "hunter-x-hunter", "copyright": "HUNTER X HUNTER \u00a9 POT98-22", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/138-SeriesHeaders_HunterxHunter_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/138-th-87_SeriesThumbnailsManga_HxH_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1696393420, "has_gns": true, "num_gns": 37, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/138-SeriesHeaders_HunterxHunter_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/138-th-87_SeriesThumbnailsManga_HxH_400x320.jpg", "label": null, "recommended_series_ids": "448,8,9,540,399,1,5,248,260", "latest_author": "Yoshihiro Togashi", "title_sort": "hunter x hunter"}}, {"manga_series": {"id": 139, "updated_at": "2023-05-10T13:21:46.000-07:00", "manga_series_common_id": 139, "device_id": 4, "keyart": "img/manga_series_keyart/249-gentlemans_alliance_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 669, "manga_imprint_id": 2, "title": "The Gentlemen's Alliance \u2020", "synopsis": "In return for a business loan of 50 million yen, the prestigious Kamiya family gave their daughter Haine away to the Otomiya family. Haine, now an Otomiya, is appointed to the student council of the exclusive Imperial Academy, a private school for the aristocracy. Even though Haine is of proper lineage to be on the council, she finds herself struggling to find her place among the many secrets of its elite members, especially those of the president who holds her heart--Shizumasa Togu, aka \"the Emperor.\"", "tagline": "Haine joins the student council at an elite academy to get to know the boy who rescued her long ago.", "rating": "tp", "vanityurl": "gentlemens-alliance", "copyright": "THE GENTLEMEN ALLIANCE -CROSS- \u00a9 2004 by Arina Tanemura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1688372236, "has_gns": true, "num_gns": 11, "has_chapters": true, "num_chapters": 47, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 47, "chapter_last_num": 47, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5736-Header_GentlemenAlliance_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/109-SeriesThumbnailsManga_GMA_400x320.jpg", "label": null, "recommended_series_ids": "136,142,600,149,302,145,143,230", "latest_author": "Arina Tanemura", "title_sort": "gentlemen's alliance \u2020"}}, {"manga_series": {"id": 141, "updated_at": "2023-06-14T10:57:29.000-07:00", "manga_series_common_id": 141, "device_id": 4, "keyart": "img/manga_series_keyart/255-ultra_maniac_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 584, "manga_imprint_id": 2, "title": "Ultra Maniac", "synopsis": "Nina Sakura isn't exactly your typical teenage girl. She's actually a transfer student from a witch school in another dimension. Now living in Japan, Nina is hoping to improve her GPA, make some new friends and spin a few love spells for her unsuspecting new classmates.", "tagline": "A young witch transfers schools to improve her GPA and spin spells for her unsuspecting new friends.", "rating": "a", "vanityurl": "ultra-maniac", "copyright": "ULTRA MANIAC \u00a9 2001 by Wataru Yoshizumi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1686765449, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 25, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 25, "chapter_last_num": 25, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/255-ultra_maniac_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/61-SeriesThumbnailsManga_UltraManiac_400x320.jpg", "label": null, "recommended_series_ids": "541,478,422", "latest_author": "Wataru Yoshizumi", "title_sort": "ultra maniac"}}, {"manga_series": {"id": 142, "updated_at": "2023-05-10T13:21:46.000-07:00", "manga_series_common_id": 142, "device_id": 4, "keyart": "img/manga_series_keyart/258-ion_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 789, "manga_imprint_id": 2, "title": "I.O.N  ", "synopsis": "Ion Tsuburagi chants the letters of her first name as a charm to bring good luck when she needs it. Then she meets Mikado Hourai, the president of the Psychic Powers Research Society at school, and touches a mysterious substance he's been developing. Now chanting \"I-O-N\" gives her telekinetic powers!", "tagline": "A sweet one-shot from the creator of Full Moon and The Gentlemen\u2019s Alliance +.", "rating": "t", "vanityurl": "ion", "copyright": "I\u30fbO\u30fbN \u00a9 1997 by Arina Tanemura/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1683750106, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 6, "chapter_last_num": 6, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5852-SeriesHeaders_ION_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/146-SeriesThumbnailsManga_ION_400x320.jpg", "label": null, "recommended_series_ids": "136,600,302,145,143,139,230", "latest_author": "Arina Tanemura", "title_sort": "i.o.n  "}}, {"manga_series": {"id": 143, "updated_at": "2023-05-10T13:21:46.000-07:00", "manga_series_common_id": 143, "device_id": 4, "keyart": "img/manga_series_keyart/261-short_tempered_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 853, "manga_imprint_id": 2, "title": "Short-Tempered Melancholic and Other Stories", "synopsis": "Short-Tempered Melancholic Kajika Yamano is a female ninja whose job is to protect her family's legendary weapon. But when a boy she has a crush on tells her she should be more ladylike, she vows to give up all ninja deeds. This Love is Nonfiction Yuri sends her pen pal Ryo a picture of herself--but it's really of her best friend Karin, who is prettier than she is. Now Ryo wants to meet her, so she has no choice but to send Karin instead! Rainy Afternoons are for Romantic Heroines Minori falls in love with Takato, a boy who shared his umbrella with her one rainy afternoon. Now she \"\"forgets\"\" her umbrella every time it rains in hopes of becoming closer to him. The Style of the Second Love Mana secretly likes her friend's boyfriend, but Nakamura, a younger boy, is determined to win Mana's heart.", "tagline": "A collection of short stories from the creator of Full Moon and The Gentlemen\u2019s Alliance +. ", "rating": "t", "vanityurl": "short-tempered", "copyright": "KANSHAKUDAMA NO YUUTSU \u00a9 1996 by Arina Tanemura/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1683750106, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 4, "num_chapters_free": 1, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 4, "chapter_last_num": 4, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5855-SeriesHeaders_ShortTempered_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/161-SeriesThumbnailsManga_STM_v2_400x320.jpg", "label": null, "recommended_series_ids": "765,777,136,142,145,541,231,139", "latest_author": "Arina Tanemura", "title_sort": "short-tempered melancholic and other stories"}}, {"manga_series": {"id": 144, "updated_at": "2023-09-07T16:15:06.000-07:00", "manga_series_common_id": 144, "device_id": 4, "keyart": "img/manga_series_keyart/264-devil_love_song_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1571, "manga_imprint_id": 2, "title": "A Devil and Her Love Song", "synopsis": "Meet Maria Kawai\u2014she\u2019s gorgeous and whip-smart, a girl who seems to have it all. But when she unleashes her sharp tongue, it\u2019s no wonder some consider her to be the very devil! Maria\u2019s difficult ways even get her kicked out of an elite school, but this particular fall may actually turn out to be her saving grace...", "tagline": "Maria is not afraid to speak her mind, but her tongue is a double-edged sword. ", "rating": "t", "vanityurl": "devil-and-her-love-song", "copyright": "AKUMA TO LOVE SONG \u00a9 2006 by Miyoshi Tomori/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694128506, "has_gns": true, "num_gns": 13, "has_chapters": true, "num_chapters": 92, "num_chapters_free": 3, "chapter_latest_pub_date": 1693501170, "chapter_latest_num": 91, "chapter_last_num": 91, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5848-SeriesHeaders_DevilHerLoveSong_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/292-SeriesThumbnailsManga_DLS_400x320.jpg", "label": null, "recommended_series_ids": "497,725,135,600,729,157,190,843", "latest_author": "Miyoshi Tomori", "title_sort": "devil and her love song"}}, {"manga_series": {"id": 145, "updated_at": "2023-09-07T17:29:17.000-07:00", "manga_series_common_id": 145, "device_id": 4, "keyart": "img/manga_series_keyart/267-sakura_hime_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1348, "manga_imprint_id": 2, "title": "Sakura Hime: The Legend of Princess Sakura ", "synopsis": "Sakura is the granddaughter of a mysterious moon princess who slew demons with her Blood Cherry Blossom sword. All her life Sakura has been forbidden to look at the full moon without knowing why. Then one night, unhappy over her impending marriage, Sakura gazes up at the moon, only to see a demon attacking her...", "tagline": "A magical princess must fight demons to protect the emperor\u2014her betrothed.", "rating": "t", "vanityurl": "sakura-hime", "copyright": "SAKURA-HIME KADEN \u00a9 2008 by Arina Tanemura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694132957, "has_gns": true, "num_gns": 12, "has_chapters": true, "num_chapters": 50, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 50, "chapter_last_num": 50, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5738-Header_SakuraHime_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/269-SeriesThumbnailsManga_SKH_400x320.jpg", "label": null, "recommended_series_ids": "146,765,777,778,685,302,230,806", "latest_author": "Arina Tanemura", "title_sort": "sakura hime: the legend of princess sakura "}}, {"manga_series": {"id": 146, "updated_at": "2023-10-30T17:00:31.000-07:00", "manga_series_common_id": 146, "device_id": 4, "keyart": "img/manga_series_keyart/270-dawn_of_arcana_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1443, "manga_imprint_id": 2, "title": "Dawn of the Arcana", "synopsis": "Princess Nakaba of Senan is forced to marry Prince Caesar of the enemy country Belquat, tantamount to becoming a hostage. While Caesar is pleasing to the eye, he is also selfish and possessive, telling Nakaba outright: \u201cYou are my property.\u201d With only her attendant Loki at her side, Nakaba must find a way to cope with her hostile surroundings, her fake marriage...and a mysterious power!", "tagline": "A princess is forced to marry the possessive prince of an enemy country!", "rating": "t", "vanityurl": "dawn-of-the-arcana", "copyright": "REIMEI NO ARCANA \u00a9 2009 Rei TOMA/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1698710431, "has_gns": true, "num_gns": 13, "has_chapters": true, "num_chapters": 53, "num_chapters_free": 2, "chapter_latest_pub_date": 1690477170, "chapter_latest_num": 53, "chapter_last_num": 53, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5802-SeriesHeaders_DawnArcana_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/280-SeriesThumbnailsManga_DoA_400x320.jpg", "label": null, "recommended_series_ids": "87,229,777,89,231,742,491,806", "latest_author": "Rei Toma", "title_sort": "dawn of the arcana"}}, {"manga_series": {"id": 148, "updated_at": "2023-06-02T09:37:29.000-07:00", "manga_series_common_id": 148, "device_id": 4, "keyart": "img/manga_series_keyart/276-fillac_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 707, "manga_imprint_id": 2, "title": "Fall In Love Like a Comic", "synopsis": "Rena Sakura is a high school student with a secret: she's a professional mangaka. And although she's never been on a date, that doesn't stop her from drawing steamy shojo scenes for Cha\u2764mi magazine. But when the gorgeous Tomoya Okita finds out her secret, she finds herself asking him out to get some real-life experience in love!", "tagline": "Rena moonlights as a mangaka. Now that her secret is out she might get some real-life experience in love!", "rating": "tp", "vanityurl": "fall-in-love-like-a-comic", "copyright": "MANGA  MITAINA  KOI SHITAI! \u00a9 2002 Chitose YAGAMI/Shogakukan, ZOKU \u30fbMANGA MITAINA  KOI SHITAI! \u00a9 2004 Chitose YAGAMI/Shogakukan ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1685723849, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 11, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 11, "chapter_last_num": 11, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5913-SeriesHeader_FallInLoveComic_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/122-SeriesThumbnailsManga_FallLikeComic_400x320.jpg", "label": null, "recommended_series_ids": "600,541,385,231,141", "latest_author": "Chitose Yagami", "title_sort": "fall in love like a comic"}}, {"manga_series": {"id": 149, "updated_at": "2023-05-10T13:21:46.000-07:00", "manga_series_common_id": 149, "device_id": 4, "keyart": "img/manga_series_keyart/279-mistress_fortune_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1347, "manga_imprint_id": 2, "title": "Mistress Fortune", "synopsis": "Fourteen-year-old Kisaki Tachibana has psychic powers. She works for PSI, a secret government agency that fights aliens. She's in love with her partner Giniro, but PSI won't allow operatives to get involved. Just when Kisaki thinks she may be getting closer to Giniro, she finds out she's going to be transferred to California!\r\n\r\n ", "tagline": "Kisaki uses her ESP to fight aliens\u2026in faraway California! ", "rating": "t", "vanityurl": "mistress-fortune", "copyright": "ZETTAI KAKUSEI TENSHI - MISTRESS_FORTUNE \u00a9 2008 by Arina Tanemura/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1683750106, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 5, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 5, "chapter_last_num": 5, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5854-SeriesHeaders_MistressFortune_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/268-SeriesThumbnailsManga_MIstressFortune_400x320.jpg", "label": null, "recommended_series_ids": "148,136,142,685,302,145,541,806", "latest_author": "Arina Tanemura", "title_sort": "mistress fortune"}}, {"manga_series": {"id": 152, "updated_at": "2023-05-10T13:21:46.000-07:00", "manga_series_common_id": 152, "device_id": 4, "keyart": "img/manga_series_keyart/288-high_school_debut_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 742, "manga_imprint_id": 2, "title": "High School Debut", "synopsis": "Hapless Haruna needs help finding a boyfriend! After failing to win the eye of any guy in high school, Haruna enlists the help of cute upperclassman Yoh to coach her on how to make herself more appealing to the male species. Yoh agrees, with one catch: Haruna had better not fall for him!", "tagline": "Can a junior-high jock turn into a high school sweetheart overnight?", "rating": "t", "vanityurl": "high-school-debut", "copyright": "KOKO DEBUT \u00a9 2003 by Kazune Kawahara", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1683750106, "has_gns": true, "num_gns": 13, "has_chapters": true, "num_chapters": 52, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 52, "chapter_last_num": 52, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5849-SeriesHeaders_HighSchoolDebut_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/131-SeriesThumbnailsManga_HSD_400x320.jpg", "label": null, "recommended_series_ids": "135,600,234,316,153,190", "latest_author": "Kazune Kawahara", "title_sort": "high school debut"}}, {"manga_series": {"id": 153, "updated_at": "2023-06-02T08:49:12.000-07:00", "manga_series_common_id": 153, "device_id": 4, "keyart": "img/manga_series_keyart/291-seiho_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1307, "manga_imprint_id": 2, "title": "Seiho Boys' High School! ", "synopsis": "Remote, lonely and surrounded by the ocean. This isn't Alcatraz we're talking about--it's Seiho Boys' High School, where the student body is rife with sexually frustrated hunks! How can these young men get girlfriends when they're stuck in the middle of nowhere? These are the stories of the students of Seiho High and the trouble they get into as they awkwardly pursue all girls who cross their paths.", "tagline": "In a high school nicknamed Alcatraz, how\u2019s a guy supposed to find love?", "rating": "tp", "vanityurl": "seiho-boys-high-school", "copyright": "MEN'S KOU \u00a9 2007 Kaneyoshi IZUMI/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1685720952, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 33, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 31, "chapter_last_num": 31, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/291-seiho_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/257-SeriesThumbnailsManga_Seiho_400x320.jpg", "label": null, "recommended_series_ids": "102,168,709,600,316,824,834", "latest_author": "Kaneyoshi Izumi", "title_sort": "seiho boys' high school! "}}, {"manga_series": {"id": 155, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 155, "device_id": 4, "keyart": "img/manga_series_keyart/297-h_c_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 758, "manga_imprint_id": 2, "title": "Honey and Clover", "synopsis": "Takemoto, a sophomore art student in Tokyo, thinks his greatest worries in life are finding ways to eat more meat and getting to class on time. But with friends like his, life is never going to be that tame.", "tagline": "", "rating": "tp", "vanityurl": "honey-and-clover", "copyright": "HONEY AND CLOVER \u00a9 2000 by Chica Umino/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1669708830, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5921-SeriesHeaders_HoneyClover_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/134-SeriesThumbnailsManga_HoneyClover_400x320.jpg", "label": null, "recommended_series_ids": "474,169,16,157", "latest_author": "Chica Umino", "title_sort": "honey and clover"}}, {"manga_series": {"id": 156, "updated_at": "2023-10-04T15:06:58.000-07:00", "manga_series_common_id": 156, "device_id": 4, "keyart": "img/manga_series_header/156-Header_HoneyHunt_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 958, "manga_imprint_id": 2, "title": "Honey Hunt", "synopsis": "Life's not easy when you're living in the shadow of your famous parents. Can shy Yura, the daughter of an award-winning composer and a world-renowned actress, find the courage to step out on her own now that her super-celebrity parents are getting divorced?", "tagline": "Find the courage to become a star!", "rating": "tp", "vanityurl": "honey-hunt", "copyright": "HONEY HUNT \u00a9 2007 Miki AIHARA/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/156-Header_HoneyHunt_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1696457218, "has_gns": true, "num_gns": 6, "has_chapters": true, "num_chapters": 30, "num_chapters_free": 3, "chapter_latest_pub_date": 1695920370, "chapter_latest_num": 30, "chapter_last_num": 30, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/156-Header_HoneyHunt_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/184-SeriesThumbnailsManga_HoneyHunt_400x320.jpg", "label": null, "recommended_series_ids": "101,168,505,134", "latest_author": "Miki Aihara", "title_sort": "honey hunt"}}, {"manga_series": {"id": 157, "updated_at": "2023-09-07T17:23:00.000-07:00", "manga_series_common_id": 157, "device_id": 4, "keyart": "img/manga_series_keyart/303-sand_chronicles_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 740, "manga_imprint_id": 2, "title": "Sand Chronicles ", "synopsis": "Twelve-year-old Ann and her divorced mother move from big city Tokyo to her mother's rural hometown. As the years pass, Ann learns to trust and depend on her new friends--Daigo and aristocratic siblings Fuji and Shika. But when Ann moves back to Tokyo to be with her father, will she be able to maintain a long-distance relationship with Daigo?", "tagline": "Can the sands of time heal all wounds?", "rating": "tp", "vanityurl": "sand-chronicles", "copyright": "SUNADOKEI \u00a9 2003 Hinako ASHIHARA/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694132580, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 24, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 24, "chapter_last_num": 24, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/303-sand_chronicles_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/130-SeriesThumbnailsManga_SandChronicle_400x320.jpg", "label": null, "recommended_series_ids": "725,709,836,600,848,169,182", "latest_author": "Hinako Ashihara", "title_sort": "sand chronicles "}}, {"manga_series": {"id": 158, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 158, "device_id": 4, "keyart": "img/manga_series_header/158-SeriesHeaders_YGOZexal_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! Zexal", "synopsis": "In a futuristic city, augmented reality Duels are all the rage. Duelists, using devices called D-Gazers, can interact with their environment and their opponents as never before. With more awesome monsters and unbelievable cards, the future of Yu-Gi-Oh! starts right here!", "tagline": "In a futuristic city, augmented reality Duels are all the rage!", "rating": "t", "vanityurl": "yu-gi-oh-zexal", "copyright": "YU-GI-OH! ZEXAL \u00a9\u00a02010 by Kazuki Takahashi, Shin Yoshida, Naohito Miyoshi/SHUEISHA Inc. \u00a9\u00a0K. Takahashi \u00a9\u00a0NAS\u30fbTV TOKYO", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/158-SeriesHeaders_YGOZexal_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/306-SeriesThumbnailsManga_YGOZexal_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/158-SeriesHeaders_YGOZexal_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/306-SeriesThumbnailsManga_YGOZexal_400x320.jpg", "label": null, "recommended_series_ids": "80,611,467,414,128,247,256,286", "latest_author": "Story by Shin Yoshida, Art by Naohito Miyoshi", "title_sort": "yu-gi-oh! zexal"}}, {"manga_series": {"id": 159, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 159, "device_id": 4, "keyart": "img/manga_series_keyart/309-zombiepowder_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 642, "manga_imprint_id": 1, "title": "ZOMBIEPOWDER.", "synopsis": "Somewhere in the desert lies the world's greatest treasure: the 12 Rings of the Dead, the only source of the mysterious substance Zombie Powder, which can raise the dead and grant eternal life. Into this world stalks Gamma Akutabi, a man with a metal arm and a six-foot chainsaw, cybernetically enhanced master of the legendary martial art . But it takes more than one man to find the ultimate prize. You need a team: super-gunman C.T. Smith, knife-slinging teenager Elwood, and brilliant (and impossibly big-breasted) journalist Wolfgangina. Against an army of crooks and killers, against runaway trains and superpowered madmen, they'll need all their skills...but the most dangerous thing in the west might be the Rings themselves... All volumes except the first also contain a bonus short story by Tite Kubo: Ultra Unholy Hearted Machine (vol. 2), Rune Master Urara (vol. 3), and Bad Shield United (vol. 4).", "tagline": "A team of super-skilled criminals roams a science-fiction Wild West, each with their own reason to hunt for the ultimate prize: the 12 Rings of the Dead, which can raise the dead and grant eternal life.", "rating": "tp", "vanityurl": "zombiepowder", "copyright": "ZOMBIEPOWDER. \u00a9 1999 by Tite Kubo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5938-SeriesHeaders_ZombiePowder_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/102-SeriesThumbnailsManga_ZombiePowder_v2_400x320.jpg", "label": null, "recommended_series_ids": "8,527,339,540,1,5,732,371", "latest_author": "Tite Kubo", "title_sort": "zombiepowder."}}, {"manga_series": {"id": 160, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 160, "device_id": 4, "keyart": "img/manga_series_keyart/409-godchild_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 508, "manga_imprint_id": 2, "title": "Godchild", "synopsis": "Deep in the heart of 19th century London, a young nobleman named Cain walks the shadowy cobblestone streets of the aristocratic society into which he was born. Forced to become an earl upon the untimely death of his father, Cain assumes the role of head of the Hargreaves, a noble family with a dark past. With Riff, his faithful manservant, and Mary Weather, his 10-year-old half sister, Cain investigates the mysterious crimes that seem to follow him wherever he goes.", "tagline": "", "rating": "tp", "vanityurl": "god-child", "copyright": "God Child \u00a9 Kaori Yuki 2001/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1629408383, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5903-SeriesHeaders_CainSaga_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/8-SeriesThumbnailsManga_TheCainSaga_400x320.jpg", "label": null, "recommended_series_ids": "81,85,559,622", "latest_author": "Kaori Yuki", "title_sort": "godchild"}}, {"manga_series": {"id": 161, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 161, "device_id": 4, "keyart": "img/manga_series_keyart/413-library_wars_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1242, "manga_imprint_id": 2, "title": "Library Wars", "synopsis": "In the near future, the federal government creates a committee to rid society of books it deems unsuitable. The libraries vow to protect their collections, and with the help of local governments, form a military group to defend themselves--the Library Forces!", "tagline": "All\u2019s fair in love and defending books!", "rating": "tp", "vanityurl": "library-wars", "copyright": "Toshokan Sensou LOVE&WAR \u00a9 Kiiro Yumi and Hiro Arikawa 2008/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1659650975, "has_gns": true, "num_gns": 15, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5665-Header_LibraryWars_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/243-SeriesThumbnailsManga_LBW_400x320.jpg", "label": null, "recommended_series_ids": "135,907,162,17,190", "latest_author": "Kiiro Yumi", "title_sort": "library wars"}}, {"manga_series": {"id": 163, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 163, "device_id": 4, "keyart": "img/manga_series_keyart/421-wild_ones_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 764, "manga_imprint_id": 2, "title": "Wild Ones", "synopsis": "When Sachie Wakamura lost her mother, her estranged grandfather showed up to take care of her. The only problem is that Grandpa is the head of a yakuza gang! Sachie tries to continue living her normal life, but she can't run far since Rakuto, one of the most popular guys in school, is part of her grandfather's gang and her new protector. Soon, Sachie finds herself falling for her bodyguard. But she's the granddaughter of Rakuto's boss, so he can never show his feelings for her. Can Sachie find a way to fit into her new family and seize her chance at romance?", "tagline": "", "rating": "t", "vanityurl": "wild-ones", "copyright": "Arakure \u00a9 Kiyo Fujiwara 2004/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1678998060, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/421-wild_ones_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/136-SeriesThumbnailsManga_WildOnes_400x320.jpg", "label": null, "recommended_series_ids": "24,479,180,217,355", "latest_author": "Kiyo Fujiwara", "title_sort": "wild ones"}}, {"manga_series": {"id": 164, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 164, "device_id": 4, "keyart": "img/manga_series_keyart/425-jiu_jiu_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1526, "manga_imprint_id": 2, "title": "Jiu Jiu", "synopsis": "Born into a family of \u201cHunters,\u201d Takamichi\u2019s destiny is to pursue and slay demons. When her twin brother is killed, she is saved from despair by a pair of Jiu Jiu\u2014shape-shifting familiars\u2014in the form of two wolf pups named Snow and Night. Now Takamichi is in high school and an active Hunter. Snow and Night can\u2019t wait to attend school in their human form to \u201cprotect\u201d her. But are they ready to go off leash...?", "tagline": "", "rating": "tp", "vanityurl": "jiu-jiu", "copyright": "JIUJIU \u00a9 Touya Tobina 2009/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1644563442, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5899-SeriesHeaders_JiuJiu_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/289-SeriesThumbnailsManga_JiuJiu_400x320.jpg", "label": null, "recommended_series_ids": "430,118,472,21", "latest_author": "Touya Tobina", "title_sort": "jiu jiu"}}, {"manga_series": {"id": 165, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 165, "device_id": 4, "keyart": "img/manga_series_keyart/430-wanted_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 844, "manga_imprint_id": 2, "title": "Wanted", "synopsis": "In the Mediterranean at end of the 17th century, former songstress Armeria disguises herself as a boy and boards the ship of the pirate Skulls--the man who kidnapped Luce, her first love. Captain Skulls is arrogant, violent, and a skirt chaser! And unfortunately for Armeria, he discovers she's a woman...", "tagline": "", "rating": "tp", "vanityurl": "wanted", "copyright": "WANTED \u00a9 Matsuri Hino 2002/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1569308826, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/430-wanted_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/159-SeriesThumbnailsManga_Wanted_400x320.jpg", "label": null, "recommended_series_ids": "118,25,442,453", "latest_author": "Matsuri Hino", "title_sort": "wanted"}}, {"manga_series": {"id": 168, "updated_at": "2023-09-07T16:25:32.000-07:00", "manga_series_common_id": 168, "device_id": 4, "keyart": "img/manga_series_keyart/442-hot_gimmick_940x332_v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 560, "manga_imprint_id": 2, "title": "Hot Gimmick (VIZBIG Edition)", "synopsis": "Miki Aihara turned the manga world upside down with her salacious, outrageous, and funny hit series. If you think being a teenager in America is hard, wait until you read Hot Gimmick. These Tokyo boys and girls are really messed up!", "tagline": "Hatsumi becomes Ryoki\u2019s slave, but can he ever capture her heart?", "rating": "tp", "vanityurl": "hot-gimmick-vb", "copyright": "HOT GIMMICK \u00a9 2001 Miki AIHARA/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694129132, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 55, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 54, "chapter_last_num": 54, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5851-SeriesHeaders_HotGimmick_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/40-SeriesThumbnailsManga_HGM_400x320.jpg", "label": null, "recommended_series_ids": "101,725,901,600,169,843", "latest_author": "Miki Aihara", "title_sort": "hot gimmick (vizbig edition)"}}, {"manga_series": {"id": 169, "updated_at": "2023-09-07T17:09:39.000-07:00", "manga_series_common_id": 169, "device_id": 4, "keyart": "img/manga_series_keyart/445-nana_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 579, "manga_imprint_id": 2, "title": "Nana", "synopsis": "Nana \"Hachi\" Komatsu hopes that moving to Tokyo will help her make a clean start and leave her capricious love life behind her. Nana Osaki, who arrives in the city at the same time, has plans to score big in the world of rock'n'roll. Although these two young women come from different backgrounds, they quickly become best friends in a whirlwind world of sex, music, fashion, gossip and all-night parties!", "tagline": "A chance meeting on a train to Tokyo sends two girls named Nana on a collision course with destiny!", "rating": "tp", "vanityurl": "nana", "copyright": "NANA \u00a9 1999 by Yazawa Manga Seisakusho/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1704096021, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 27, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 24, "chapter_last_num": 24, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6441-Header_Nana_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/56-SeriesThumbnailsManga_NANA_v2_400x320.jpg", "label": null, "recommended_series_ids": "497,754,709,505,157,97,98", "latest_author": "Ai Yazawa", "title_sort": "nana"}}, {"manga_series": {"id": 175, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 175, "device_id": 4, "keyart": "img/manga_series_keyart/470-Barrage-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1572, "manga_imprint_id": 1, "title": "Barrage", "synopsis": "Fresh from SJ Alpha comes an action-packed reimagining of The Prince and the Pauper! Spunky slum kid Astro gets the chance of a lifetime to end the chaos ripping apart his home planet when the playboy prince switches places with him. Now Astro has become Prince Barrage, a boy charged with the duty of restoring peace to the planet\u2026and given an all-powerful magical spear to do it!\r\n", "tagline": "From the creator of My Hero Academia, an action-packed reimagining of The Prince and the Pauper.", "rating": "t", "vanityurl": "barrage", "copyright": "SENSEI NO BARRAGE \u00a9 2012 by Kouhei Horikoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1702947312, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5929-SeriesHeaders_Barrage_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/293-SeriesThumbnailsManga_Barrage_400x320.jpg", "label": null, "recommended_series_ids": "470,466,399,520,180,599", "latest_author": "Kouhei Horikoshi", "title_sort": "barrage"}}, {"manga_series": {"id": 19, "updated_at": "2023-10-30T16:53:49.000-07:00", "manga_series_common_id": 19, "device_id": 4, "keyart": "img/manga_series_keyart/477-Bokurano-Bricks-v1-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1199, "manga_imprint_id": 4, "title": "Bokurano: Ours", "synopsis": "One summer, fifteen kids innocently wander into a nearby seaside cave. There they meet a strange man who invites them to play an exciting new video game. This game, he explains, pits one lone giant robot against a horde of alien invaders. To play the game, all they have to do is sign a simple contract. The game stops being fun when the kids find out the true purpose of their pact.", "tagline": "Saving the world is no child\u2019s play in this dark and chilling mecha manga series.", "rating": "tp", "vanityurl": "bokurano-ours", "copyright": "BOKURANO \u00a9 2004 Mohiro KITOH/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1698710029, "has_gns": true, "num_gns": 11, "has_chapters": true, "num_chapters": 65, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 65, "chapter_last_num": 65, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/477-Bokurano-Bricks-v1-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/230-SeriesThumbnailsManga_Bokurano_400x320.jpg", "label": null, "recommended_series_ids": "216,214,505,95,896,760,744", "latest_author": "Mohiro Kito", "title_sort": "bokurano: ours"}}, {"manga_series": {"id": 177, "updated_at": "2022-07-26T10:17:00.000-07:00", "manga_series_common_id": 177, "device_id": 4, "keyart": "img/manga_series_header/177-6350_Header_LiminalZone_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2384, "manga_imprint_id": 4, "title": "Junji Ito", "synopsis": "The Eisner Award-winning master of horror manga.", "tagline": "Welcome to the Ito-verse of cosmic horror. ", "rating": "tp", "vanityurl": "junji-ito", "copyright": "\u00a9 JI Inc./Asahi Shimbun Publications Inc", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/177-6350_Header_LiminalZone_2000x800.jpg", "link_img": "img/manga_series_link_img/177-th-3225_Thumb_LiminalZone_400x320_1.jpg", "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1707376857, "has_gns": true, "num_gns": 17, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/177-6350_Header_LiminalZone_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/177-th-3225_Thumb_LiminalZone_400x320_1.jpg", "label": null, "recommended_series_ids": "200,620,527,443,371,465,468,519", "latest_author": "Junji Ito", "title_sort": "junji ito"}}, {"manga_series": {"id": 178, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 178, "device_id": 4, "keyart": "img/manga_series_keyart/485-NGE_3in1-v1-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 531, "manga_imprint_id": 6, "title": "Neon Genesis Evangelion 3-in-1 Edition", "synopsis": "The manga adaptation of the landmark animated series that changed the mecha genre. Each volume contains three of the original graphic novels and includes pages of stunning, full-color art. ", "tagline": "Books based on the landmark animated series that redefined the mecha genre.", "rating": "tp", "vanityurl": "evangelion-3-in-1", "copyright": "\u00a9 khara", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1704096022, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5399-SeriesHeader_Tier02_NGE_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/20-SeriesThumbnailsManga_NGE_400x320.jpg", "label": null, "recommended_series_ids": "307,318,19,401,269", "latest_author": "Yoshiyuki Sadamoto", "title_sort": "neon genesis evangelion 3-in-1 edition"}}, {"manga_series": {"id": 180, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 180, "device_id": 4, "keyart": "img/manga_series_keyart/493-Nisekoi-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1585, "manga_imprint_id": 1, "title": "Nisekoi", "synopsis": "It was hate at first sight... rather a knee-to-the-head at first sight when Raku Ichijo meets Chitoge Kirisaki! Unfortunately, Raku\u2019s gangster father arranges a false love match with their rival\u2019s daughter, who just so happens to be Chitoge! However, Raku\u2019s searching for his childhood sweetheart from ten years ago, with a pendant around his neck as a memento, and he can't even remember her name or face!", "tagline": "Love triangle! Comedic antics!! Gang warfare?!", "rating": "t", "vanityurl": "nisekoi", "copyright": "NISEKOI \u00a9 2011 by Naoshi Komi/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 25, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5393-SeriesHeader_Tier02_NSK_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/873-SeriesThumbnailsManga_NSK_400x320.jpg", "label": null, "recommended_series_ids": "449,304,795,78,632,492", "latest_author": "Naoshi Komi", "title_sort": "nisekoi"}}, {"manga_series": {"id": 181, "updated_at": "2024-01-16T14:58:26.000-08:00", "manga_series_common_id": 181, "device_id": 4, "keyart": "img/manga_series_keyart/497-FY_3in1-v1-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 556, "manga_imprint_id": 2, "title": "Fushigi Y\u00fbgi (VIZBIG Edition)", "synopsis": "Fifteen-year-old Miaka Yuki is transported into an ancient Chinese kingdom by an old library book, The Universe of the Four Gods. Following the legend in the story, Miaka becomes the Priestess of Suzaku and must find her seven Celestial Warriors before she can save the kingdom and return home. Read the shojo manga that started it all! Fushigi Y\u00fbgi, the best-selling series from beloved creator Yuu Watase is now available in a VIZBIG Edition--three of the original graphic novel releases collected into one volume, including color artwork and new bonus content!", "tagline": "The original classic that defined the shojo fantasy adventure genre!", "rating": "tp", "vanityurl": "fushigi-yugi-vb", "copyright": "FUSHIGI YUUGI \u00a9 1992 Yuu WATASE/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1705445906, "has_gns": true, "num_gns": 6, "has_chapters": true, "num_chapters": 106, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 106, "chapter_last_num": 106, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5859-SeriesHeaders_FushigiYugi_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/36-SeriesThumbnailsManga_FY_v2_400x320.jpg", "label": null, "recommended_series_ids": "84,87,229,720,103,246,208,231", "latest_author": "Yuu Watase", "title_sort": "fushigi y\u00fbgi (vizbig edition)"}}, {"manga_series": {"id": 182, "updated_at": "2023-06-02T08:50:50.000-07:00", "manga_series_common_id": 182, "device_id": 4, "keyart": "img/manga_series_keyart/501-we_were_there_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 870, "manga_imprint_id": 2, "title": "We Were There", "synopsis": "Nanami Takahashi falls for Motoharu Yano, the most popular, carefree boy in class. For Nanami, it's first love, but Yano is still grieving the death of his girlfriend who died the year before.", "tagline": "First love gets complicated when the object of Nanami\u2019s affection is still grieving over his former girlfriend\u2019s passing.", "rating": "tp", "vanityurl": "we-were-there", "copyright": "BOKURA GA ITA \u00a9 2002 Yuuki OBATA/Shogakukan", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1701099258, "has_gns": true, "num_gns": 16, "has_chapters": true, "num_chapters": 70, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 70, "chapter_last_num": 70, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5918-SeriesHeader_WeWereThere_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/172-SeriesThumbnailsManga_WeWereThere_400x320.jpg", "label": null, "recommended_series_ids": "562,436,709,135,157,190,843", "latest_author": "Yuuki Obata", "title_sort": "we were there"}}, {"manga_series": {"id": 183, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 183, "device_id": 4, "keyart": "img/manga_series_keyart/505-Rasetsu-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1049, "manga_imprint_id": 2, "title": "Rasetsu", "synopsis": "Rasetsu Hyuga works for an exorcist agency where she uses her special powers to banish evil spirits. There's a story behind the red flower mark on her chest though--it's a memento left by a powerful spirit who vowed to claim her on her 20th birthday. Unless Rasetsu can find true love by then, she is fated to become his...", "tagline": "", "rating": "tp", "vanityurl": "rasetsu", "copyright": "Rasetsu No Hana \u00a9 Chika Shiomi 2006/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1631231682, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5901-SeriesHeaders_Rasetsu_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/196-SeriesThumbnailsManga_Rasetsu_400x320.jpg", "label": null, "recommended_series_ids": "146,118,355,184", "latest_author": "Chika Shiomi", "title_sort": "rasetsu"}}, {"manga_series": {"id": 184, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 184, "device_id": 4, "keyart": "img/manga_series_keyart/509-Yurara-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 692, "manga_imprint_id": 2, "title": "Yurara", "synopsis": "There are two sides to every ghost story... Yurara Tsukinowa is a quiet girl who can see spirits and sense their emotions. Not wanting to seem abnormal, she hides her secret until she meets Mei Tendo and Yako Hoshino, two guys who use their spiritual powers to ward off vengeful spirits. The dormant guardian spirit in Yurara arises and a strong-willed beauty with the power to release souls emerges!", "tagline": "", "rating": "tp", "vanityurl": "yurara", "copyright": "Yurara no Tsuki \u00a9 Chika Shiomi 2002/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1630627587, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5907-SeriesHeaders_Yurara_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/115-SeriesThumbnailsManga_Yurara_400x320.jpg", "label": null, "recommended_series_ids": "188,392,183,355", "latest_author": "Chika Shiomi", "title_sort": "yurara"}}, {"manga_series": {"id": 185, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 185, "device_id": 4, "keyart": "img/manga_series_keyart/513-Special_A-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 709, "manga_imprint_id": 2, "title": "S.A: Special A", "synopsis": "Her whole life, Hikari Hanazono has been consumed with the desire to win against her school rival, Kei Takishima--at anything. He always comes out on top no matter what he does, and Hikari is determined to do whatever it takes to beat this guy...somehow! At age 6 Hikari lost to Kei in an impromptu wrestling match. Now, at 15, Hikari joins \"\"Special A,\"\" a group of the top seven students at a private academy, for the opportunity to trounce the guy who made her suffer her first defeat.", "tagline": "", "rating": "t", "vanityurl": "special-a", "copyright": "S\u30fbA -Special A- \u00a9 Maki Minami 2003/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1666306417, "has_gns": true, "num_gns": 17, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5902-SeriesHeaders_SA_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/123-SeriesThumbnailsManga_SpecialA_400x320.jpg", "label": null, "recommended_series_ids": "349,398,13,15,350,357,501", "latest_author": "Maki Minami", "title_sort": "s.a: special a"}}, {"manga_series": {"id": 186, "updated_at": "2023-05-10T13:21:47.000-07:00", "manga_series_common_id": 186, "device_id": 4, "keyart": "img/manga_series_keyart/517-LaQuintaCamera-Bricks-v1-900x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1161, "manga_imprint_id": 4, "title": "La Quinta Camera", "synopsis": "An apartment in Italy. In four of the rooms live four single men with singular personalities. Into this peculiar m\u00e9nage steps an exchange student, the new tenant of the fifth room. Brought together by chance, friends by choice, they pursue their dreams together as the days drift gently by. ", "tagline": "A suite of charming short stories, Italian style, by one of the most acclaimed manga creators at work today.", "rating": "t", "vanityurl": "la-quinta-camera", "copyright": "LA QUINTA CAMERA \u00a9 2006 Natsume ONO / SHOGAKUKAN", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1707464792, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 6, "chapter_last_num": 6, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/517-LaQuintaCamera-Bricks-v1-900x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/219-SeriesThumbnailsManga_LaQuinta_400x320.jpg", "label": null, "recommended_series_ids": "782,92,836,94,143,228,187", "latest_author": "Natsume Ono", "title_sort": "la quinta camera"}}, {"manga_series": {"id": 187, "updated_at": "2024-01-18T10:37:17.000-08:00", "manga_series_common_id": 187, "device_id": 4, "keyart": "img/manga_series_header/187-Header_Tesoro_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1596, "manga_imprint_id": 4, "title": "Tesoro", "synopsis": "A treasure of 14 charming stories about family, friends, couples and unexpected bonds. Written by Natsume Ono over ten years, here is the long-awaited collection of her early work, including numerous illustrations and previously unpublished stories!", "tagline": "A collection of 14 charming short stories about family, friends, couples and unexpected bonds.", "rating": "t", "vanityurl": "tesoro", "copyright": "TESORO - ONO NATSUME SHOKI TANPENSHU \u00a9 2008 Natsume ONO / SHOGAKUKAN", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/187-Header_Tesoro_v2_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1705604764, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 13, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 13, "chapter_last_num": 13, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/187-Header_Tesoro_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/314-SeriesThumbnailsManga_Tesoro_400x320.jpg", "label": null, "recommended_series_ids": "782,92,836,186,94,143", "latest_author": "Natsume Ono", "title_sort": "tesoro"}}, {"manga_series": {"id": 188, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 188, "device_id": 4, "keyart": "img/manga_series_keyart/525-DemonLoveSpell-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1595, "manga_imprint_id": 2, "title": "Demon Love Spell", "synopsis": "Miko is a shrine maiden who has never had much success at seeing or banishing spirits. Then she meets Kagura, a sexy demon who feeds off women\u2019s feelings of passion and love. Kagura\u2019s insatiable appetite has left many girls at school brokenhearted, so Miko casts a spell to seal his powers. Surprisingly the spell works\u2014sort of\u2014but now Kagura is after her!", "tagline": "A supernatural romance by the creator of Ai Ore! and Sensual Phrase.", "rating": "tp", "vanityurl": "demon-love-spell", "copyright": "AYAKASHI KOI EMAKI \u00a9 2008 by Mayu Shinjo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1669708832, "has_gns": true, "num_gns": 6, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5629-Header_DemonLoveSpell_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/313-SeriesThumbnailsManga_DLS_400x320.jpg", "label": null, "recommended_series_ids": "104,101,392,472,15,350,357,501", "latest_author": "Mayu Shinjo", "title_sort": "demon love spell"}}, {"manga_series": {"id": 189, "updated_at": "2023-06-12T14:49:53.000-07:00", "manga_series_common_id": 189, "device_id": 4, "keyart": "img/manga_series_keyart/529-Cat_Eyed_Boy-Bricks-v1-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 784, "manga_imprint_id": 4, "title": "Cat Eyed Boy", "synopsis": "A chilling concoction of dark vignettes dripping with the macabre, the grotesque and the absurd. Hated by humans and demons alike, Cat Eyed Boy dwells in the shadows of the human world. No matter where he goes, terrifying situations involving humans and demons begins to unfurl.", "tagline": "Hated by humans and demons alike, Cat Eyed Boy dwells in the shadows of the human world. ", "rating": "tp", "vanityurl": "cat-eyed-boy", "copyright": "UMEZZ PERFECTION! 6 NEKOME KOZO \u00a9 2006 Kazuo UMEZZ/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1692654622, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 12, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 12, "chapter_last_num": 12, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6505-Header_CatEyedBoy_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3698-Thumb_CatEyedBoy_400x320.jpg", "label": null, "recommended_series_ids": "218,881,88,787,685,541,620,706", "latest_author": "Kazuo Umezu", "title_sort": "cat eyed boy"}}, {"manga_series": {"id": 190, "updated_at": "2023-12-01T16:29:37.000-08:00", "manga_series_common_id": 190, "device_id": 4, "keyart": "img/manga_series_keyart/533-StrobeEdge-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1578, "manga_imprint_id": 2, "title": "Strobe Edge", "synopsis": "What is love, anyway? Ninako Kinoshita\u2019s friends tell her it\u2019s one thing, but Ninako wonders what this mysterious feeling really is. When she meets Ren Ichinose, the handsome, enigmatic guy that all the girls worship, her life takes an unexpected turn. With just a few words and a smile, he changes her world...", "tagline": "A heartwarming story about a girl discovering love for the very first time!", "rating": "t", "vanityurl": "strobe-edge", "copyright": "STROBE EDGE \u00a9 2007 by Io Sakisaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1701476977, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 36, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 36, "chapter_last_num": 36, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5857-SeriesHeaders_StrobeEdge_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/296-SeriesThumbnailsManga_SBE_400x320.jpg", "label": null, "recommended_series_ids": "562,152,436,709,135,695,873", "latest_author": "Io Sakisaka", "title_sort": "strobe edge"}}, {"manga_series": {"id": 192, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 192, "device_id": 4, "keyart": "img/manga_series_keyart/541-PSME-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 562, "manga_imprint_id": 2, "title": "Please Save My Earth", "synopsis": "Are the woes of the present meant to be endured for the promise of a better future or to atone for past wrongs? In a captivating epic of love, fate and faith, seven young people must struggle with this spiritual puzzle as their alien past lives threaten the future.", "tagline": "", "rating": "tp", "vanityurl": "please-save-my-earth", "copyright": "Boku no Chikyuu wo Mamotte \u00a9 Saki Hiwatari 1986/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1632121231, "has_gns": true, "num_gns": 21, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/541-PSME-Bricks-v2-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/42-SeriesThumbnailsManga_PleaseSaveMyEarth_400x320.jpg", "label": null, "recommended_series_ids": "271,205,135,907,208", "latest_author": "Saki Hiwatari", "title_sort": "please save my earth"}}, {"manga_series": {"id": 193, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 193, "device_id": 4, "keyart": "img/manga_series_keyart/545-Blank_Slate-Bricks-v1-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 838, "manga_imprint_id": 2, "title": "Blank Slate", "synopsis": "What does it take to find your true inner self? Zen's memory has been wiped, and he can't remember if he's a killer or a hero. And a lot of people will do anything they can to keep it that way.", "tagline": "", "rating": "tp", "vanityurl": "blank-slate", "copyright": "Akusaga \u00a9 Aya Kanno 2004/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1628890932, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5895-SeriesHeaders_BlankSlate_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/156-SeriesThumbnailsManga_BlankSlate_400x320.jpg", "label": null, "recommended_series_ids": "160,172,81,20,622", "latest_author": "Aya Kanno", "title_sort": "blank slate"}}, {"manga_series": {"id": 194, "updated_at": "2023-05-10T13:21:47.000-07:00", "manga_series_common_id": 194, "device_id": 4, "keyart": "img/manga_series_keyart/549-GoGoMonster-Bricks-v1-900x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1155, "manga_imprint_id": 4, "title": "GoGo Monster", "synopsis": "Third grader Yuki Tachibana lives in two worlds. In one world, he is a loner ridiculed by his classmates and reprimanded by his teachers for telling stories of supernatural beings that only he can see. In the other world, the supernatural beings vie for power with malevolent spirits who bring chaos into the school, the students' lives, and nature itself.", "tagline": "A haunting and poetic vision of one boy\u2019s imagination.", "rating": "t", "vanityurl": "gogo-monster", "copyright": "GOGO MONSTER \u00a9 2000 Taiyou MATSUMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1702330521, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 5, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 5, "chapter_last_num": 5, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5579-Tier07_Headers_GoGoMonster_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/216-SeriesThumbnailsManga_GoGoMonster_400x320.jpg", "label": null, "recommended_series_ids": "218,613,91,766,726,228,713", "latest_author": "Taiyo Matsumoto", "title_sort": "gogo monster"}}, {"manga_series": {"id": 198, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 198, "device_id": 4, "keyart": "img/manga_series_keyart/565-Takamagahara-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1598, "manga_imprint_id": 1, "title": "Takama-ga-hara", "synopsis": "What if the Japanese legends are true, and humans are descended from gods? What if all humans contain the potential for amazing, god-like powers? And what if you were one of the rare humans whose powers actually awakened?", "tagline": "A normal student just wants to be a manga artist, but everybody wants to fight him!", "rating": "tp", "vanityurl": "takama-ga-hara", "copyright": "TAKAMAGAHARA \u00a9 2012 by Jyuuzou Kawai/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560011, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5936-SeriesHeaders_Takamagahara_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/600-SeriesThumbnailsManga_Takama_v2_400x320.jpg", "label": null, "recommended_series_ids": "356,461,284,249", "latest_author": "Jyuuzou Kawai", "title_sort": "takama-ga-hara"}}, {"manga_series": {"id": 205, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 205, "device_id": 4, "keyart": "img/manga_series_keyart/593-From_Far_Away-Bricks-v1-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 555, "manga_imprint_id": 2, "title": "From Far Away", "synopsis": "Transported into a fantastical world of high adventure, a confused and frightened teenager discovers she hold a prophetic power that will awaken a new epoch of staggering uncertainty.", "tagline": "", "rating": "t", "vanityurl": "from-far-away", "copyright": "Kanatakara \u00a9 Kyoko Hikawa 1991/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1629485820, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/593-From_Far_Away-Bricks-v1-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/35-SeriesThumbnailsManga_FFAway_400x320.jpg", "label": null, "recommended_series_ids": "756,894,192,208", "latest_author": "Kyoko Hikawa", "title_sort": "from far away"}}, {"manga_series": {"id": 206, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 206, "device_id": 4, "keyart": "img/manga_series_keyart/597-Angel_Sanctuary-Bricks-v1-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 548, "manga_imprint_id": 2, "title": "Angel Sanctuary", "synopsis": "The angel Alexiel loved God, but she rebelled against Heaven when she saw how disgracefully the other angels were behaving. She was finally captured, and as punishment sent to Earth to live an endless series of tragic lives. She now inhabits the body of Setsuna Mudo, a troubled teen in love with his sister Sara. Setsuna's misery mirrors the chaos among the angels, and their combined passions threaten to destroy both Heaven and Earth.", "tagline": "", "rating": "tp", "vanityurl": "angel-sanctuary", "copyright": "Tenshi Kinryou Ku \u00a9 Kaori Yuki 1994/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1629310693, "has_gns": true, "num_gns": 20, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5894-SeriesHeaders_AngelSanctuary_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/29-SeriesThumbnailsManga_AngelSanc_400x320.jpg", "label": null, "recommended_series_ids": "160,172,81,85,294", "latest_author": "Kaori Yuki", "title_sort": "angel sanctuary"}}, {"manga_series": {"id": 207, "updated_at": "2023-09-07T16:25:00.000-07:00", "manga_series_common_id": 207, "device_id": 4, "keyart": "img/manga_series_keyart/601-Itsuwaribito-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1316, "manga_imprint_id": 3, "title": "Itsuwaribito ", "synopsis": "Utsuho\u2019s truthfulness as a child resulted in an enormous catastrophe, and he decided to lie from that day forward. Raised in a village of orphans by a monk, Utsuho is an unrepentant troublemaker. The monk eventually inspires him to help people, but there\u2019s no way Utsuho\u2019s going to lead an honest life! Instead, he\u2019s going to use his talents for mischief and deception for good!", "tagline": "The adventures of a liar and his band of friends who use lies to do good.", "rating": "tp", "vanityurl": "itsuwaribito", "copyright": "ITSUWARIBITO \u25c6UTSUHO\u25c6 \u00a9 2009 Yuuki IINUMA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1694129100, "has_gns": true, "num_gns": 23, "has_chapters": true, "num_chapters": 224, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 223, "chapter_last_num": 223, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5632-Header_Itsuwaribito_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/260-SeriesThumbnailsManga_ITS_400x320.jpg", "label": null, "recommended_series_ids": "216,720,901,82,778,214,806,744", "latest_author": "Yuuki Iinuma", "title_sort": "itsuwaribito "}}, {"manga_series": {"id": 208, "updated_at": "2023-12-01T17:04:49.000-08:00", "manga_series_common_id": 208, "device_id": 4, "keyart": "img/manga_series_header/208-Header_RedRiver_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 563, "manga_imprint_id": 2, "title": "Red River", "synopsis": "Yuri, a teen of the 21st century, has been transported to ancient Anatolia as part of a scheme by the evil Nakia, Queen of the Hittites. Only the intervention of Nakia's stepson, Prince Kail, saved Yuri from the Queen's bloodthirsty intentions. As an unintended consequence, the people of the kingdoms of Anatolia have embraced Yuri as the incarnation of the great war-goddess Ishtar.", "tagline": "Whisked to ancient times, Yuri must navigate a scheming court and warring factions while trying to find her way home.", "rating": "tp", "vanityurl": "red-river", "copyright": "SORA WA  AKAI KAWA NO HOTORI \u00a9 1995 Chie SHINOHARA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/208-Header_RedRiver_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1705604141, "has_gns": true, "num_gns": 28, "has_chapters": true, "num_chapters": 72, "num_chapters_free": 2, "chapter_latest_pub_date": 1701367170, "chapter_latest_num": 72, "chapter_last_num": 72, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/208-Header_RedRiver_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/43-SeriesThumbnailsManga_RedRiver_400x320.jpg", "label": null, "recommended_series_ids": "87,271,229,777,103,89,729,806", "latest_author": "Chie Shinohara", "title_sort": "red river"}}, {"manga_series": {"id": 209, "updated_at": "2023-06-02T09:03:28.000-07:00", "manga_series_common_id": 209, "device_id": 4, "keyart": "609-YumeKiraDreamShoppe-Bricks-v3-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 663, "manga_imprint_id": 2, "title": "Yume Kira Dream Shoppe", "synopsis": "They say that any dream can be made true in exchange for something dear to you.\r\n\r\nThe Yume Kira Dream Shoppe flies through the dusk sky as Rin the shopkeeper listens for wishes that travel on the wind. With the help of assistant Alpha, Rin uses the magical wares of the Dream Shoppe to make desires a reality\u2026but at a price.", "tagline": "With a little bit of magic\u2014dreams do come true!", "rating": "t", "vanityurl": "yume-kira-dream-shoppe", "copyright": "", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1685721808, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 4, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 4, "chapter_last_num": 4, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/609-YumeKiraDreamShoppe-Bricks-v3-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/108-SeriesThumbnailsManga_YumeKira_400x320.jpg", "label": null, "recommended_series_ids": "136,720,778,302,231,141,760,806", "latest_author": "Aqua Mizuto", "title_sort": "yume kira dream shoppe"}}, {"manga_series": {"id": 211, "updated_at": "2023-06-14T10:59:28.000-07:00", "manga_series_common_id": 211, "device_id": 4, "keyart": "613-KamikazeGirls-Bricks-v2-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 576, "manga_imprint_id": 2, "title": "Kamikaze Girls ", "synopsis": "Momoko is a \"Lolita\" stranded in the boondocks of rural Ibaraki prefecture, although she'd much rather be living in the Palace of Versailles. Ichigo is an impulsive member of a girls-only biker gang who firmly believes in honor, loyalty, and fist fighting. Together this unlikeliest of duos strikes out on a journey to find a legendary embroiderer who might just be able to make their dreams come true. Inspired by the cult-classic novel by the same name, this exclusive manga edition of Novala Takemoto's Kamikaze Girls contains several brand new stories, including a continuation of Momoko and Ichigo's misadventures that was approved by the author himself!", "tagline": "Inspired by the cult classic film Kamikaze Girls!", "rating": "tp", "vanityurl": "kamikaze-girls", "copyright": "SHIMOTSUMA  MONOGATARI \u00a92004 Novala TAKEMOTO, Yukio KANESADA/SHOGAKUKAN", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1686765568, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 4, "num_chapters_free": 1, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 4, "chapter_last_num": 4, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/613-KamikazeGirls-Bricks-v2-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/53-SeriesThumbnailsManga_KamikazeGirl_400x320.jpg", "label": null, "recommended_series_ids": "168,709,836,600,169,824,729", "latest_author": "Story by Novala Takemoto, Art by Yukio Kanesada", "title_sort": "kamikaze girls "}}, {"manga_series": {"id": 214, "updated_at": "2024-01-18T10:31:59.000-08:00", "manga_series_common_id": 214, "device_id": 4, "keyart": "img/manga_series_header/214-Header_MAR_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 529, "manga_imprint_id": 3, "title": "M\u00c4R", "synopsis": "From Nobuyuki Anzai, creator of Flame of Recca, comes the tale of Ginta, a junior high loser who enters the vivid world of his dreams where, at last, he is a hero!", "tagline": "From the creator of Flame of Recca, comes the tale of a teen loser who enters a world where he\u2019s the hero!", "rating": "t", "vanityurl": "mar", "copyright": "M\u00c4R \u00a9 2003 Nobuyuki ANZAI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/214-Header_MAR_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1705603920, "has_gns": true, "num_gns": 15, "has_chapters": true, "num_chapters": 161, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 161, "chapter_last_num": 161, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/214-Header_MAR_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/18-SeriesThumbnailsManga_MAR_400x320.jpg", "label": null, "recommended_series_ids": "218,216,82,257,685,236", "latest_author": "Nobuyuki Anzai", "title_sort": "m\u00e4r"}}, {"manga_series": {"id": 215, "updated_at": "2023-09-07T17:25:08.000-07:00", "manga_series_common_id": 215, "device_id": 4, "keyart": "img/manga_series_header/215-Header_YakitateJapan_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 537, "manga_imprint_id": 3, "title": "Yakitate!!  Japan", "synopsis": "England. France. Germany. What common thread binds these three nations together? Answer: each is famous for producing unique, distinctive, delicious bread. But what about Japan, home to rice and delicacies of the sea? Is there not a doughy, gastronomic delight they can claim as their own? The answer is no...until now! Kazuma Azuma, a 16-year-old-boy blessed with otherworldly baking powers, has taken it upon himself to create Ja-pan, the national bread of the land of the rising sun!", "tagline": "Are you ready for the Iron Chef of bread?! Manga shall not live by bread alone.", "rating": "tp", "vanityurl": "yakitate-japan", "copyright": "YAKITATE!! JAPAN \u00a9 2002 Takashi HASHIGUCHI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/215-Header_YakitateJapan_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1694132708, "has_gns": true, "num_gns": 26, "has_chapters": true, "num_chapters": 242, "num_chapters_free": 3, "chapter_latest_pub_date": 1690477170, "chapter_latest_num": 242, "chapter_last_num": 242, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/215-Header_YakitateJapan_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/23-SeriesThumbnailsManga_Yakitate_400x320.jpg", "label": null, "recommended_series_ids": "600,242,96,303,153,760", "latest_author": "Takashi Hashiguchi", "title_sort": "yakitate!!  japan"}}, {"manga_series": {"id": 216, "updated_at": "2023-10-31T11:41:18.000-07:00", "manga_series_common_id": 216, "device_id": 4, "keyart": "img/manga_series_header/216-Header_FlameRecca_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 524, "manga_imprint_id": 6, "title": "Flame of Recca", "synopsis": "Becoming a ninja is just a childhood dream for16-year-old Recca, until a fateful encounter reveals he has inherited ninja powers, including the ability to wield fire! As Recca learns to master the ancient ways of his ancestors, he is drawn to protect a mysterious girl named Yanagi...", "tagline": "Armed with the power to wield fire, Recca finds himself in the ancient and arcane world of ninja warriors.", "rating": "tp", "vanityurl": "flame-of-recca", "copyright": "RECCA NO HONOO \u00a9 1995 Nobuyuki ANZAI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/216-Header_FlameRecca_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1698777678, "has_gns": true, "num_gns": 33, "has_chapters": true, "num_chapters": 329, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 329, "chapter_last_num": 329, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/216-Header_FlameRecca_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/13-SeriesThumbnailsManga_FlameRecca_400x320.jpg", "label": null, "recommended_series_ids": "778,214,685,896,230,760,806,744", "latest_author": "Nobuyuki Anzai", "title_sort": "flame of recca"}}, {"manga_series": {"id": 219, "updated_at": "2023-05-10T13:21:48.000-07:00", "manga_series_common_id": 219, "device_id": 4, "keyart": "629-Punch-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 493, "manga_imprint_id": 2, "title": "Punch!", "synopsis": "Her mother was a wrestling champion, her father a lightweight world boxing champion, and her grandfather the first Japanese to become the world champion of Muay Thai kick boxing--but high school girl Elle doesn't want to fight! She just wants a normal life, but is it possible with such a violent family history?", "tagline": "", "rating": "tp", "vanityurl": "punch", "copyright": "PUNCH! \u00a9 2005 Rie TAKADA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1701728906, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/629-Punch-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/6-SeriesThumbnailsManga_Punch_400x320.jpg", "label": null, "recommended_series_ids": "245,600,614,824,385", "latest_author": "Rie Takada", "title_sort": "punch!"}}, {"manga_series": {"id": 221, "updated_at": "2023-09-07T16:24:06.000-07:00", "manga_series_common_id": 221, "device_id": 4, "keyart": "633-KareFirstLove-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 561, "manga_imprint_id": 2, "title": "Kare First Love", "synopsis": "Coy and self-conscious high school student Karin Karino never paid much attention to boys until she met Kiriya, a popular student from a nearby boys' school. Karin and Kiriya embark on a romantic journey despite Karin's classmate Yuka's best efforts to sabotage their relationship, but Karin soon learns that living happily ever after isn't on the curriculum when she becomes Kiriya's center of attention, as well as embittered Yuka's bull's-eye on her dartboard of hate.", "tagline": "Living happily ever after in high school isn\u2019t on the curriculum for these three students. ", "rating": "t", "vanityurl": "kare-first-love", "copyright": "KARE FIRST LOVE \u00a9 2002 Kaho MIYASAKA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694129046, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 25, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 24.1, "chapter_last_num": 24.1, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/633-KareFirstLove-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/41-SeriesThumbnailsManga_KareFirstLove_400x320.jpg", "label": null, "recommended_series_ids": "279,152,901,600,824,190", "latest_author": "Kaho Miyasaka", "title_sort": "kare first love"}}, {"manga_series": {"id": 218, "updated_at": "2024-01-25T10:00:00.000-08:00", "manga_series_common_id": 218, "device_id": 4, "keyart": "641-case_closed_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 520, "manga_imprint_id": 3, "title": "Case Closed", "synopsis": "Jimmy Kudo, the son of a world-renowned mystery writer, is a high school detective who has cracked the most baffling of cases. One day while on a date with his childhood friend Rachel Moore, Jimmy observes a pair of men in black involved in some shady business. The men capture Jimmy and give him a poisonous substance to rub out their witness. But instead of killing him, it turns him into a little kid! Jimmy takes on the pseudonym Conan Edogawa and continues to solve all the difficult cases that come his way. All the while, he's looking for the men in black and the mysterious organization they're with in order to find a cure for his miniature malady.", "tagline": "Can Detective Conan crack the case\u2026while stuck in a kid\u2019s body?", "rating": "tp", "vanityurl": "case-closed", "copyright": "MEITANTEI CONAN \u00a9 1994 Gosho AOYAMA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1707377949, "has_gns": true, "num_gns": 89, "has_chapters": true, "num_chapters": 975, "num_chapters_free": 6, "chapter_latest_pub_date": 1706205570, "chapter_latest_num": 949, "chapter_last_num": 1125, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5545-Tier06_SeriesHeaders_CaseClosed_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/10-SeriesThumbnailsManga_CCL_v2_400x320.jpg", "label": null, "recommended_series_ids": "88,207,82,176,685,302", "latest_author": "Gosho Aoyama", "title_sort": "case closed"}}, {"manga_series": {"id": 223, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 223, "device_id": 4, "keyart": "645-CrossManage-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1575, "manga_imprint_id": 1, "title": "Cross Manage", "synopsis": "Talented but aimless Sakurai just can\u2019t find a place to belong. After trying (and failing at) one extracurricular activity after another, his life changes thanks to a chance encounter with lacrosse fanatic Toyoguchi, who thinks Sakurai has just what it takes to propel her girls\u2019 lacrosse team to victory!", "tagline": "Toyoguchi will stop at nothing to recruit Sakurai to manage the girls\u2019 lacrosse team.", "rating": "t", "vanityurl": "cross-manage", "copyright": "CROSS MANAGE \u00a9 2012 by KAITO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560011, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5930-SeriesHeaders_CrossManage_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/599-SeriesThumbnailsManga_CXM__400x320.jpg", "label": null, "recommended_series_ids": "757,702,450,454,755,499", "latest_author": "KAITO", "title_sort": "cross manage"}}, {"manga_series": {"id": 226, "updated_at": "2023-05-10T13:21:48.000-07:00", "manga_series_common_id": 226, "device_id": 4, "keyart": "657-Alice19th-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 606, "manga_imprint_id": 2, "title": "Alice 19th", "synopsis": "Alice Seno seems like a normal girl in high school. She's a bit shy, she's got a crush on a boy named Ky\u00f4, and she's got an older sister who is more popular than she is...pretty normal stuff, until Alice has an encounter with a mysterious and magical rabbit girl that changes the course of her life, and Alice is introduced to the sublime power of the Lotis Words.", "tagline": "", "rating": "tp", "vanityurl": "alice-19th", "copyright": "ALICE 19TH \u00a9 2001 Yuu WATASE/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1683750108, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/657-Alice19th-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/74-SeriesThumbnailsManga_Alice19_400x320.jpg", "label": null, "recommended_series_ids": "84,87,720,246,600,778,742", "latest_author": "Yuu Watase", "title_sort": "alice 19th"}}, {"manga_series": {"id": 227, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 227, "device_id": 4, "keyart": "img/manga_series_header/227-SeriesHeaders_BlackCat_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 608, "manga_imprint_id": 1, "title": "Black Cat", "synopsis": "Train Heartnet, also known as \"Black Cat,\" was an infamous assassin for a secret organization called Chronos...until he abandoned that cold-blooded existence to live on his own terms as an easygoing bounty hunter. But is Train's past as far behind him as he thinks?", "tagline": "Crossing paths with bounty hunter Train is seriously bad luck for criminals!", "rating": "tp", "vanityurl": "black-cat", "copyright": "BLACK CAT \u00a9 2000 by Kentaro Yabuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/227-SeriesHeaders_BlackCat_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 20, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/227-SeriesHeaders_BlackCat_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/76-SeriesThumbnailsManga_BLC__400x320.jpg", "label": null, "recommended_series_ids": "716,8,105,703,10,627", "latest_author": "Kentaro Yabuki", "title_sort": "black cat"}}, {"manga_series": {"id": 228, "updated_at": "2023-05-10T13:21:48.000-07:00", "manga_series_common_id": 228, "device_id": 4, "keyart": "665-Sunny-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1629, "manga_imprint_id": 4, "title": "Sunny", "synopsis": "What is Sunny? Sunny is a car. Sunny is a car you take on a drive with your mind. It takes you to the place of your dreams.\r\n\r\nSunny is the story of beating the odds, in the ways that count. It\u2019s the brand-new masterwork from Eisner Award-winner Taiyo Matsumoto, one of Japan\u2019s most innovative and acclaimed manga artists.\r\n\r\nTranslated by Tekkonkinkreet film director Michael Arias!", "tagline": "A story of childhood longing and dreams as only award-winning author Taiyo Matsumoto could tell it.", "rating": "t", "vanityurl": "sunny", "copyright": "SUNNY \u00a9 2011 Taiyou MATSUMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1702330604, "has_gns": true, "num_gns": 6, "has_chapters": true, "num_chapters": 36, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 36, "chapter_last_num": 36, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5581-Tier07_Headers_Sunny_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/316-SeriesThumbnailsManga_SUN_v2_400x320.jpg", "label": null, "recommended_series_ids": "613,91,194,766,94,726", "latest_author": "Taiyo Matsumoto", "title_sort": "sunny"}}, {"manga_series": {"id": 229, "updated_at": "2024-01-12T11:42:33.000-08:00", "manga_series_common_id": 229, "device_id": 4, "keyart": "img/manga_series_header/229-Header_Ceres_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 552, "manga_imprint_id": 2, "title": "Ceres: Celestial Legend", "synopsis": "Horror, Comedy, and Romance Made in Heaven Yuu Watase, the immensely popular writer/artist of the sh\u00f4jo (girl\u2019s) fantasy smash Fushigi Y\u00fbgi: The Mysterious Play, has turned her creativity and wry sense of humor to the horror genre with her anime/manga hit Ceres: Celestial Legend. Aya thought she was a normal teenager until she discovered that she can transform into a vastly powerful \u201cheavenly maiden\u201d named Ceres\u2026But Ceres is furious and out for revenge!", "tagline": "Hell hath no fury like a heavenly maiden.", "rating": "tp", "vanityurl": "ceres-celestial-legend", "copyright": "AYASHI NO CERES \u00a9 1996 Yuu WATASE/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/229-Header_Ceres_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1705088553, "has_gns": true, "num_gns": 14, "has_chapters": true, "num_chapters": 31, "num_chapters_free": 2, "chapter_latest_pub_date": 1695920370, "chapter_latest_num": 31, "chapter_last_num": 31, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/229-Header_Ceres_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/32-SeriesThumbnailsManga_Ceres_400x320.jpg", "label": null, "recommended_series_ids": "84,87,101,777,181,246,505,806", "latest_author": "Yuu Watase", "title_sort": "ceres: celestial legend"}}, {"manga_series": {"id": 230, "updated_at": "2023-09-07T17:42:41.000-07:00", "manga_series_common_id": 230, "device_id": 4, "keyart": "img/manga_series_keyart/673-TimeStrangerKyoko-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 787, "manga_imprint_id": 2, "title": "Time Stranger Kyoko", "synopsis": "Kyoko Suomi is the princess of Earth in the 30th century. She lives among the commoners, unwilling to reveal her true identity and ascend the throne. The king will allow Kyoko to live as she pleases if she can revive her twin sister Ui, who has been trapped in time since birth.", "tagline": "A time-travel fantasy from the creator of Full Moon and The Gentlemen's Alliance +. ", "rating": "tp", "vanityurl": "time-stranger-kyoko", "copyright": "TIME STRANGER KYOKO \u00a9 2000 by Arina Tanemura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694133761, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 13, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 13, "chapter_last_num": 13, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5858-SeriesHeaders_TimeStrangerKyoko_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/145-SeriesThumbnailsManga_TSK__400x320.jpg", "label": null, "recommended_series_ids": "146,777,136,302,145,541,139,806", "latest_author": "Arina Tanemura", "title_sort": "time stranger kyoko"}}, {"manga_series": {"id": 231, "updated_at": "2023-09-07T17:31:49.000-07:00", "manga_series_common_id": 231, "device_id": 4, "keyart": "img/manga_series_keyart/677-TailOfTheMoon-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 583, "manga_imprint_id": 2, "title": "Tail of the Moon", "synopsis": "Usagi is the granddaughter of the leader of a prestigious ninja village, but she's such a klutz that she's never made it out of the kiddie class. Frustrated with Usagi's lack of progress, her grandfather sends her to marry Lord Hanzo and have lots of ninja babies. But the lord has no interest in her or her childbearing potential!", "tagline": "Usagi\u2019s going to get her man and become a ninja, and no one can stop her!", "rating": "tp", "vanityurl": "tail-of-the-moon", "copyright": "TSUKI-NO SHIPPO \u00a9 2002 by Rinko Ueda/SHUEISHA Inc", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694133109, "has_gns": true, "num_gns": 15, "has_chapters": true, "num_chapters": 103, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 103, "chapter_last_num": 103, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5922-SeriesHeaders_TailOfMoon_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/60-SeriesThumbnailsManga_TMP_v2_400x320.jpg", "label": null, "recommended_series_ids": "101,146,145,134,275,742,843,806", "latest_author": "Rinko Ueda", "title_sort": "tail of the moon"}}, {"manga_series": {"id": 232, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 232, "device_id": 4, "keyart": "img/manga_series_header/232-SeriesHeaders_KenshinRestoration_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 595, "manga_imprint_id": 1, "title": "Rurouni Kenshin: Restoration", "synopsis": "During the violent upheaval of the Bakumatsu era, Hitokiri Battosai was a feared and ruthless assassin. But now that the Meiji Restoration has begun to heal the wounds of civil war, Battosai has taken up a new name\u2026and a new calling! He is now Himura Kenshin , a rurouni wanderer who has vowed to only draw his sword to protect those in need.", "tagline": "Enemies from Kenshin\u2019s dark past have vowed to bring him down!", "rating": "t", "vanityurl": "rurouni-kenshin-restoration", "copyright": "RUROUNI KENSHIN \u00a9 1994 by Nobuhiro Watsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/232-SeriesHeaders_KenshinRestoration_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/680-SeriesThumbnailsManga_RKenshinRestoration_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/232-SeriesHeaders_KenshinRestoration_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/680-SeriesThumbnailsManga_RKenshinRestoration_400x320.jpg", "label": null, "recommended_series_ids": "8,123,498,240,467,414,750", "latest_author": "Nobuhiro Watsuki", "title_sort": "rurouni kenshin: restoration"}}, {"manga_series": {"id": 233, "updated_at": "2023-12-01T17:12:04.000-08:00", "manga_series_common_id": 233, "device_id": 4, "keyart": "img/manga_series_header/233-Header_Gabakawa_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 920, "manga_imprint_id": 2, "title": "Gaba Kawa ", "synopsis": "Demons like Rara are supposed to cause mischief in the mortal world and draw humans to darkness. They're not supposed to help mortals and they're definitely not supposed to fall in love with them! But that's just what happens when Rara enters high school, where a hot guy named Retsu Aku calls her \"Gaba Kawa\"!", "tagline": "A supernatural romance from the creator of Punch! and Happy Hustle High! ", "rating": "t", "vanityurl": "gaba-kawa", "copyright": "GABA\u2665KAWA \u00a9 2006 Rie TAKADA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/233-Header_Gabakawa_v2_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1701728810, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 5, "num_chapters_free": 3, "chapter_latest_pub_date": 1701367170, "chapter_latest_num": 5, "chapter_last_num": 5, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/233-Header_Gabakawa_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/178-SeriesThumbnailsManga_GabaKawa_v2_400x320.jpg", "label": null, "recommended_series_ids": "229,245,600,316,385,141", "latest_author": "Rie Takada", "title_sort": "gaba kawa "}}, {"manga_series": {"id": 234, "updated_at": "2024-01-11T11:31:16.000-08:00", "manga_series_common_id": 234, "device_id": 4, "keyart": "img/manga_series_header/234-Header_LoveCom_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 689, "manga_imprint_id": 2, "title": "Love\u2605Com", "synopsis": "Risa Koizumi is the tallest girl in class, and the last thing she wants is the humiliation of standing next to Atsushi \u00d4tani, the shortest guy. Fate and the whole school have other ideas, and the two find themselves cast as the unwilling stars of a bizarre romantic comedy duo.", "tagline": "Aya Nakahara\u2019s iconic romcom about the long and short of first love.", "rating": "t", "vanityurl": "love-com", "copyright": "LOVE\u2605COM \u00a9 2001 by Aya Nakahara/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/234-Header_LoveCom_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1705001723, "has_gns": true, "num_gns": 17, "has_chapters": true, "num_chapters": 66, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 66, "chapter_last_num": 66, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/234-Header_LoveCom_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/114-SeriesThumbnailsManga_LoveCom_v2_400x320.jpg", "label": null, "recommended_series_ids": "279,835,505,824,143,385,843", "latest_author": "Aya Nakahara", "title_sort": "love\u2605com"}}, {"manga_series": {"id": 235, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 235, "device_id": 4, "keyart": "img/manga_series_keyart/693-SandLand-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 864, "manga_imprint_id": 1, "title": "Sand Land", "synopsis": "In the far future, war has destroyed the entire Earth, leaving only a barren wasteland where the supply of water is controlled by the greedy king. In search of a long-lost lake, Sheriff Rao asked the king of the demons for help...and got the king's son, Beelzebub, and his assistant, Thief. Together the unlikely trio sets off across the desert, facing dragons, bandits and the deadliest foe of all... the King's army itself! It's travel adventure and tank action in this new story from Akira Toriyama, the creator of Dragon Ball Z!", "tagline": "A dustup in the desert with a demon on a destroyed Earth from the creator of Dragon Ball!", "rating": "a", "vanityurl": "sand-land", "copyright": "SAND LAND \u00a9 2000 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5733-Header_SandLand_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/169-SeriesThumbnailsManga_SLD__400x320.jpg", "label": null, "recommended_series_ids": "461,283,132,10,466,362", "latest_author": "Akira Toriyama", "title_sort": "sand land"}}, {"manga_series": {"id": 236, "updated_at": "2024-01-18T10:38:18.000-08:00", "manga_series_common_id": 236, "device_id": 4, "keyart": "img/manga_series_header/236-Header_LawOfUeki_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 528, "manga_imprint_id": 6, "title": "The Law of Ueki", "synopsis": "A group of powerful beings called tenkaijin are holding a special tournament. The rules of the game--each tenkaijin selects a kid in junior high to be his champion and grants him a special power. The kids take each other on in heated battle, but if they hurt innocent bystanders, then they lose one of their natural-given abilities. Every time they win a battle, they gain a new ability. The ultimate winner of the tournament is granted any power of his choosing, and the tenkajin who he represents succeeds in becoming the next god. Kosuke Ueki has been chosen to fight in the tournament. His special power--the ability to turn garbage into trees.", "tagline": "The hilarious tournament series where the hero has the power to turn trash into trees! ", "rating": "t", "vanityurl": "the-law-of-ueki", "copyright": "UEKI NO HOUSOKU \u00a9 2002 Tsubasa FUKUCHI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/236-Header_LawOfUeki_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1705605029, "has_gns": true, "num_gns": 16, "has_chapters": true, "num_chapters": 154, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 154, "chapter_last_num": 154, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/236-Header_LawOfUeki_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/17-SeriesThumbnailsManga_TheLawUeki_400x320.jpg", "label": null, "recommended_series_ids": "218,777,778,231,478,806,422", "latest_author": "Tsubasa Fukuchi", "title_sort": "law of ueki"}}, {"manga_series": {"id": 237, "updated_at": "2024-01-18T10:36:49.000-08:00", "manga_series_common_id": 237, "device_id": 4, "keyart": "img/manga_series_header/237-Header_BeautyPop_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 571, "manga_imprint_id": 2, "title": "Beauty Pop", "synopsis": "Although a truly gifted hairstylist, Kiri Koshiba has no interest in using her talent to pursue fame and fortune, unlike the three popular boys in the \"\"Scissors Project\"\" at school. Determined to become the best makeover team in Japan, they give showy makeovers to handpicked girls. As much as Kiri tries to shy away from the Scissors Project spotlight, she finds herself responding to beauty's call...", "tagline": "Beauty at any cost! Cue the extreme manga make-over!", "rating": "t", "vanityurl": "beauty-pop", "copyright": "BEAUTY POP \u00a9 2007 Kiyoko ARAI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/237-Header_BeautyPop_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1705604395, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 30, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 23.3, "chapter_last_num": 23.3, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/237-Header_BeautyPop_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/50-SeriesThumbnailsManga_BeautyPop_400x320.jpg", "label": null, "recommended_series_ids": "725,142,836,190,141", "latest_author": "Kiyoko Arai", "title_sort": "beauty pop"}}, {"manga_series": {"id": 238, "updated_at": "2023-05-10T13:21:48.000-07:00", "manga_series_common_id": 238, "device_id": 4, "keyart": "img/manga_series_keyart/705-KazeHikaru-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 577, "manga_imprint_id": 2, "title": "Kaze Hikaru", "synopsis": "In the 1860s in Japan, a new era is dawning. During this time fraught with violent social upheaval, samurai of all walks of life flock to Kyoto in the hope of joining a band of warriors united around their undying loyalty to the Shogunate system. This group became one of the greatest (and most infamous) movements in Japanese history...the Shinsengumi!", "tagline": "A historical romance set in the time of Rurouni Kenshin!", "rating": "tp", "vanityurl": "kaze-hikaru", "copyright": "KAZE HIKARU \u00a9 1997 Taeko WATANABE/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1705561534, "has_gns": true, "num_gns": 31, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5633-Header_KazeHikaru_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/54-SeriesThumbnailsManga_KZH_400x320.jpg", "label": null, "recommended_series_ids": "87,720,149,145,134,231,806", "latest_author": "Taeko Watanabe", "title_sort": "kaze hikaru"}}, {"manga_series": {"id": 240, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 240, "device_id": 4, "keyart": "img/manga_series_keyart/713-GunBlazeWest-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 797, "manga_imprint_id": 5, "title": "Gun Blaze West", "synopsis": "In the Old West only the strong survive. Viu Bannes is a boy on a mission to be the best gunfighter in the West. When Viu meets a vagabond gunslinger named Marcus Homer, his desire to be the best becomes even stronger. He knows it's his destiny to travel to the legendary land known as Gun Blaze West--where only the toughest gunmen dare set foot!", "tagline": "In the Old West, only the strong survive.", "rating": "tp", "vanityurl": "gun-blaze-west", "copyright": "GUN BLAZE WEST \u00a9 2000 by Nobuhiro Watsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5931-SeriesHeaders_GunBlazeWest_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/148-SeriesThumbnailsManga_GunBlazeWest_400x320.jpg", "label": null, "recommended_series_ids": "448,461,123,14", "latest_author": "Nobuhiro Watsuki", "title_sort": "gun blaze west"}}, {"manga_series": {"id": 241, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 241, "device_id": 4, "keyart": "img/manga_series_keyart/717-WaqWaq-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1043, "manga_imprint_id": 1, "title": "Waqwaq ", "synopsis": "Living in constant fear of attack from machines, mankind depends on the cyborg corps known as the Guardians to keep them from harm as they await the arrival of the Kami, a godlike savior with mythical red blood who can grant only one wish to one person. Now, Shio, son of a Guardian, thinks he's found the Kami--and all the Guardians are at war to get that wish!", "tagline": "In the ultimate war of man vs. machine, the fate of humanity lies with a teenage cyborg named Shio!", "rating": "t", "vanityurl": "waqwaq", "copyright": "W\u0101qw\u0101q \u00a9 2004 by Ryu Fujisaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560012, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5937-SeriesHeaders_WaqWaq_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/193-SeriesThumbnailsManga_WAQ__400x320.jpg", "label": null, "recommended_series_ids": "8,461,80,532,1,856,855", "latest_author": "Ryu Fujisaki", "title_sort": "waqwaq "}}, {"manga_series": {"id": 242, "updated_at": "2023-06-14T10:56:01.000-07:00", "manga_series_common_id": 242, "device_id": 4, "keyart": "img/manga_series_keyart/721-MixedVegetables-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 855, "manga_imprint_id": 2, "title": "Mixed Vegetables", "synopsis": "Hanayu Ashitaba is the daughter of the celebrated Patisserie Ashitaba, but all she wants to do is be a sushi chef. Hayato Hyuga is the son of the prestigious Sushi Hyuga, and all he wants to do is be a pastry chef! It's love and leftovers at Oikawa High School Cooking Department as these star-crossed gourmands do their best to reach their cuisine dreams!", "tagline": "Does Hanayu have the recipe for success? ", "rating": "t", "vanityurl": "mixed-vegetables", "copyright": "MIX VEGETABLE \u00a9 2005 by Ayumi Komura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1688347353, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 55, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 54, "chapter_last_num": 54, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/721-MixedVegetables-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/163-SeriesThumbnailsManga_MXV__400x320.jpg", "label": null, "recommended_series_ids": "136,234,505,385", "latest_author": "Ayumi Komura", "title_sort": "mixed vegetables"}}, {"manga_series": {"id": 243, "updated_at": "2023-05-10T13:21:48.000-07:00", "manga_series_common_id": 243, "device_id": 4, "keyart": "img/manga_series_keyart/725-StDragonGirl-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 868, "manga_imprint_id": 2, "title": "St. \u2665 Dragon Girl", "synopsis": "Momoka Sendou (nicknamed \"Dragon Girl\") and Ryuga Kou are childhood friends. Momoka is a martial artist, and Ryuga is a Chinese magic master who banishes demons. In order to increase his power, Ryuga calls on the spirit of a dragon to possess him, but the spirit enters Momoka instead. Now the two must unite forces and fight demons together!", "tagline": "", "rating": "t", "vanityurl": "st-dragon-girl", "copyright": "SAINT DRAGON GIRL \u00a9 1999 by Natsumi Matsumoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1683750108, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/725-StDragonGirl-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/171-SeriesThumbnailsManga_SDG__400x320.jpg", "label": null, "recommended_series_ids": "765,777,720,685,302,541,209", "latest_author": "Natsumi Matsumoto", "title_sort": "st. \u2665 dragon girl"}}, {"manga_series": {"id": 245, "updated_at": "2023-06-02T08:49:47.000-07:00", "manga_series_common_id": 245, "device_id": 4, "keyart": "img/manga_series_keyart/733-HappyHustleHigh-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 558, "manga_imprint_id": 2, "title": "Happy Hustle High", "synopsis": "What happens when the reigning tomboy of an all-girls high school finds out her school is about to be filled with boys!? Hanabi Ozora is a rambunctious 16-year-old tomboy who comes to the rescue of her less assertive friends-sometimes in exchange for food. So what does she do when, all of a sudden, her all-girls school is about to be integrated with an all-boys school?! She meets and falls in love-naturally--with one of the three most popular and handsome boys in the Student Council, Yasuaki Garaku! Unfortunately, Yasuaki doesn't care for girls...and when the girls' Student Council clashes head-on with the boys' Student Council, Hanabi steps in to become a member--hoping she'll change Yasuaki's mind!", "tagline": "Reigning tomboy Hanabi must navigate student council and dating in her newly co-ed school! ", "rating": "a", "vanityurl": "happy-hustle-high", "copyright": "H3 SCHOOL \u00a9 2004 Rie TAKADA/SHOGAKUKAN  (\"3\" must be formatted as superscript.)", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1701728934, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 24, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 24, "chapter_last_num": 24, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/733-HappyHustleHigh-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/38-SeriesThumbnailsManga_HappyHustleHigh_400x320.jpg", "label": null, "recommended_series_ids": "152,600,505,385", "latest_author": "Rie Takada", "title_sort": "happy hustle high"}}, {"manga_series": {"id": 246, "updated_at": "2023-06-02T09:35:02.000-07:00", "manga_series_common_id": 246, "device_id": 4, "keyart": "img/manga_series_keyart/737-Imadoki-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 730, "manga_imprint_id": 6, "title": "Imadoki! ", "synopsis": "Imadoki! (Nowadays) follows the trials and tribulations of a budding horticulturist as she makes her way down the winding road to friendship. From Yuu Watase, one of Japan's most beloved sh\u00f4jo artists, Imadoki! packs comedic charm and heartfelt antics into an adorable bouquet of whimsical fantasy.", "tagline": "From acclaimed creator Yuu Watase, this heartfelt comedy blooms into an adorable bouquet of whimsy.", "rating": "a", "vanityurl": "imadoki", "copyright": "IMADOKI! \u00a9 2000 Yuu WATASE/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1685723702, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 13, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 13, "chapter_last_num": 13, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/737-Imadoki-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/129-SeriesThumbnailsManga_Imadoki_400x320.jpg", "label": null, "recommended_series_ids": "84,720,709,836,600,385", "latest_author": "Yuu Watase", "title_sort": "imadoki! "}}, {"manga_series": {"id": 247, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 247, "device_id": 4, "keyart": "img/manga_series_header/247-MangaHeaders_YGOR_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! R", "synopsis": "The shocking sequel to Yu-Gi-Oh!: Duelist and prequel to Yu-Gi-Oh!: Millennium World! When the follower of an old enemy returns to take revenge, Yugi Mutou must duel to save a friend's life. But can he overcome the power of the three \"Jashin,\" the terrifying Evil God Cards?", "tagline": "Yugi's back for another duel, but this time, it's personal!", "rating": "t", "vanityurl": "yu-gi-oh-r", "copyright": "YU-GI-OH! R \u00a9 2004 by Kazuki Takahashi, Akira Ito/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/247-MangaHeaders_YGOR_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/247-th-SeriesThumbnailsManga_YGOR_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/247-MangaHeaders_YGOR_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/247-th-SeriesThumbnailsManga_YGOR_400x320.jpg", "label": null, "recommended_series_ids": "299,566,611,414,248,326,128,286", "latest_author": "Story and Art by Akira Ito, Created by Kazuki Takahashi", "title_sort": "yu-gi-oh! r"}}, {"manga_series": {"id": 248, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 248, "device_id": 4, "keyart": "img/manga_series_keyart/745-YuGiOh-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh!", "synopsis": "10th grader Yugi spent most of his time alone playing games...until he solved the Millennium Puzzle, a mysterious Egyptian artifact! Possessed by the puzzle, Yugi becomes Yu-Gi-Oh, the King of Games, and challenges evildoers to the Shadow Games...weird games with high stakes and high risks! These graphic novels contain new stories not seen in the anime, including the origin of Yugi and his friends!", "tagline": "The manga series that inspired the card game that swept the globe!", "rating": "t", "vanityurl": "yu-gi-oh", "copyright": "YU-GI-OH! \u00a9 1996 by Kazuki Takahashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560013, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5401-SeriesHeader_Tier02_YGO_v3_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/100-SeriesThumbnailsManga_YGO_400x320.jpg", "label": null, "recommended_series_ids": "461,10,138,1,133,326,128,247", "latest_author": "Kazuki Takahashi", "title_sort": "yu-gi-oh!"}}, {"manga_series": {"id": 249, "updated_at": "2023-03-27T11:22:29.000-07:00", "manga_series_common_id": 249, "device_id": 4, "keyart": "img/manga_series_header/249-SeriesHeaders_OnePunchMan_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1671, "manga_imprint_id": 1, "title": "One-Punch Man", "synopsis": "A manga series that packs quite the punch!", "tagline": "Life gets pretty boring when you can beat the snot out of any villain with just one punch.", "rating": "t", "vanityurl": "one-punch-man", "copyright": "ONE-PUNCH MAN \u00a9 2012 by ONE, Yusuke Murata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/249-SeriesHeaders_OnePunchMan_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/249-th-327-SeriesThumbnailsManga_OPM_400x320-1.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707466311, "has_gns": true, "num_gns": 27, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/249-SeriesHeaders_OnePunchMan_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/249-th-327-SeriesThumbnailsManga_OPM_400x320-1.jpg", "label": null, "recommended_series_ids": "700,648,540,724,399,520,624,739", "latest_author": "Story by ONE, Art by Yusuke Murata", "title_sort": "one-punch man"}}, {"manga_series": {"id": 250, "updated_at": "2023-10-31T11:40:22.000-07:00", "manga_series_common_id": 250, "device_id": 4, "keyart": "img/manga_series_keyart/753-FireFighter-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 523, "manga_imprint_id": 6, "title": "Firefighter!: Daigo of Fire Company M", "synopsis": "Rookie firefighter Daigo Asahina can't believe his bad luck when he's assigned to the district with the fewest fires on record. But now that Daigo has joined Fire Company M, things won't stay quiet for long. His offbeat methods and uncanny instincts soon have his fellow firefighers wondering whether he's a hero or a menace!", "tagline": "The adrenaline-packed adventures of Fire Company M\u2019s newest rookie!", "rating": "t", "vanityurl": "firefighter", "copyright": "MEGUMI NO DAIGO \u00a9 1996 Masahito SODA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1698777622, "has_gns": true, "num_gns": 20, "has_chapters": true, "num_chapters": 180, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 180, "chapter_last_num": 180, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/753-FireFighter-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/598-SeriesThumbnailsManga_Firefighter_v2_400x320.jpg", "label": null, "recommended_series_ids": "83,216,709,82,214,95,231", "latest_author": "Masahito Soda", "title_sort": "firefighter!: daigo of fire company m"}}, {"manga_series": {"id": 256, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 256, "device_id": 4, "keyart": "img/manga_series_header/256-MangaHeaders_YGODuelist_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh!: Duelist", "synopsis": "In the second saga of the Yu-Gi-Oh! epic, Duel Monsters is the world's most popular collectible card game-but to Yugi, it's the most dangerous game of all! Entering the Duel Monsters world championship, Yugi fights ruthless opponents like game designer Maximillion Pegasus and teenage multimillionaire Kaiba Seto, hoping to discover the origin of the game...and his own powers! Contains the original storyline of the first season of Yu-Gi-Oh!, including scenes too startling for TV!", "tagline": "The second saga of the Yu-Gi-Oh! epic!", "rating": "t", "vanityurl": "yu-gi-oh-duelist", "copyright": "YU-GI-OH! \u00a9 1996 by Kazuki Takahashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/256-MangaHeaders_YGODuelist_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/256-th-SeriesThumbnailsManga_YGODuelist_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 24, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/256-MangaHeaders_YGODuelist_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/256-th-SeriesThumbnailsManga_YGODuelist_400x320.jpg", "label": null, "recommended_series_ids": "461,496,10,1,248,326,158,286", "latest_author": "Kazuki Takahashi", "title_sort": "yu-gi-oh!: duelist"}}, {"manga_series": {"id": 257, "updated_at": "2023-07-07T11:02:25.000-07:00", "manga_series_common_id": 257, "device_id": 4, "keyart": "img/manga_series_keyart/781-Magi-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1660, "manga_imprint_id": 3, "title": "Magi", "synopsis": "Deep within the desert lie the mysterious Dungeons, vast stores of riches there for the taking by anyone lucky enough to find them and brave enough to venture into the depths from where few have ever returned. Plucky young adventurer Aladdin means to find the Dungeons and their riches, but Aladdin may be just as mysterious as the treasures he seeks. ", "tagline": "An epic dungeon-busting adventure inspired by One Thousand and One Nights!", "rating": "t", "vanityurl": "magi", "copyright": "MAGI \u00a9 2009 Shinobu OHTAKA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1688752945, "has_gns": true, "num_gns": 37, "has_chapters": true, "num_chapters": 369, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 369, "chapter_last_num": 369, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5389-SeriesHeader_Tier02_MAGI_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/318-SeriesThumbnailsManga_Magi_400x320.jpg", "label": null, "recommended_series_ids": "765,777,89,207,82,303,541,744", "latest_author": "Shinobu Ohtaka", "title_sort": "magi"}}, {"manga_series": {"id": 259, "updated_at": "2023-05-10T13:21:49.000-07:00", "manga_series_common_id": 259, "device_id": 4, "keyart": "img/manga_series_keyart/789-CactussSecret-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1142, "manga_imprint_id": 2, "title": "Cactus's Secret", "synopsis": "Miku Yamada has a longtime crush on classmate Kyohei Fujioka. But no matter how many times she tries to show him how she feels, clueless Kyohei just doesn't get it. Frustrated, Miku gives up on him, only to have him start calling her \"Cactus\" for being prickly when he's around. Will Kyohei ever figure out Cactus's secret?", "tagline": "", "rating": "t", "vanityurl": "cactuss-secret", "copyright": "SABOTEN NO HIMITSU \u00a9 2003 by Nana Haruta/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1683750109, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5919-SeriesHeaders_CactusSecret_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/212-SeriesThumbnailsManga_CAS__400x320.jpg", "label": null, "recommended_series_ids": "562,237,725,136,234,141", "latest_author": "Nana Haruta", "title_sort": "cactus's secret"}}, {"manga_series": {"id": 260, "updated_at": "2023-12-24T08:21:19.000-08:00", "manga_series_common_id": 260, "device_id": 4, "keyart": "img/manga_series_header/260-5809_SeriesHeaders_YuYuHakusho_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 640, "manga_imprint_id": 1, "title": "YuYu Hakusho", "synopsis": "Yusuke Urameshi was a tough teen delinquent until one selfless act changed his life...by ending it. When he died saving a little kid from a speeding car, the afterlife didn't know what to do with him, so it gave him a second chance at life. Now, Yusuke is a ghost with a mission, performing good deeds at the behest of Botan, the ferrywoman of the River Styx, and Koenma, the pacifier-sucking judge of the dead.", "tagline": "A delinquent\u2019s gotta do what he\u2019s gotta do\u2026in the afterlife. From the creator of Hunter x Hunter!", "rating": "t", "vanityurl": "yuyu-hakusho", "copyright": "YUYU HAKUSHO \u00a9 Yoshihiro Togashi", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/260-5809_SeriesHeaders_YuYuHakusho_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/260-th-101_SeriesThumbnailsManga_YYH_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1703434879, "has_gns": true, "num_gns": 19, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/260-5809_SeriesHeaders_YuYuHakusho_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/260-th-101_SeriesThumbnailsManga_YYH_400x320.jpg", "label": null, "recommended_series_ids": "8,461,922,10,80,138,861,540,284,890,198", "latest_author": "Yoshihiro Togashi", "title_sort": "yuyu hakusho"}}, {"manga_series": {"id": 261, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 261, "device_id": 4, "keyart": "img/manga_series_keyart/797-Whistle-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 636, "manga_imprint_id": 1, "title": "Whistle!", "synopsis": "Everybody has a dream, and for Sh\u00f4 Kazamatsuri, that dream is simple: he wants to be the best soccer player he can possibly be. He's the spirited leader of the Josui Junior High team and everyone looks up to him. In turn, he tries to keep the team together at any cost!", "tagline": "", "rating": "a", "vanityurl": "whistle", "copyright": "WHISTLE! \u00a9 1998 by Daisuke Higuchi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560014, "has_gns": true, "num_gns": 24, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/797-Whistle-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/97-SeriesThumbnailsManga_WSL_400x320.jpg", "label": null, "recommended_series_ids": "83,223,450,129", "latest_author": "Daisuke Higuchi", "title_sort": "whistle!"}}, {"manga_series": {"id": 263, "updated_at": "2023-06-26T15:51:43.000-07:00", "manga_series_common_id": 263, "device_id": 4, "keyart": "img/manga_series_keyart/805-AishiteruzeBABY-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 568, "manga_imprint_id": 2, "title": "Aishiteruze Baby", "synopsis": "Kippei Katakura is a 17-year-old playboy who spends his time chasing girls, careless of their feelings. But when his 5-year-old cousin Yuzuyu comes to live with his family after her mother's sudden disappearance, Kippei is put in charge of taking care of her. As Kippei gets to know Yuzuyu and starts to understand how she feels, he also begins to realize that all girls were like Yuzuyu once...", "tagline": "", "rating": "t", "vanityurl": "aishiteruze-baby", "copyright": "AISHITERUZE BABY\u2605\u2605 \u00a9 2002 by Yoko Maki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1688058013, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/805-AishiteruzeBABY-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/47-SeriesThumbnailsManga_ASB_400x320.jpg", "label": null, "recommended_series_ids": "281,157,385,190", "latest_author": "Yoko Maki", "title_sort": "aishiteruze baby"}}, {"manga_series": {"id": 264, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 264, "device_id": 4, "keyart": "img/manga_series_keyart/809-HanaKimi-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 557, "manga_imprint_id": 2, "title": "Hana-Kimi", "synopsis": "The Prettiest Boy In School...Isn't A Boy! Japanese-American track-and-field star Mizuki has transferred to a high school in Japan...but not just any school! To be close to her idol, high jumper Izumi Sano, she's going to an all-guys' high school...and disguising herself as a boy! But as fate would have it, they're more than classmates...they're roommates! Now, Mizuki must keep her secret in the classroom, the locker room, and her own bedroom. And her classmates--and the school nurse--must cope with a new transfer student who may make them question their own orientation...", "tagline": "What happens when the hottest guy in school is a girl?!", "rating": "tp", "vanityurl": "hana-kimi", "copyright": "Hanazakari no Kimitachi he \u00a9 Hisaya Nakajo 1996/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1638172880, "has_gns": true, "num_gns": 23, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5813-SeriesHeaders_HanaKimi_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/37-SeriesThumbnailsManga_HNK_v2_400x3202.jpg", "label": null, "recommended_series_ids": "265,311,375,434,289,152,135,907", "latest_author": "Hisaya Nakajo", "title_sort": "hana-kimi"}}, {"manga_series": {"id": 265, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 265, "device_id": 4, "keyart": "img/manga_series_keyart/813-BoysOverFlowers-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 551, "manga_imprint_id": 2, "title": "Boys Over Flowers", "synopsis": "Although Tsukushi Makino is from a poor family, she attends an elite school for the super rich, where her life has become intertwined with the \"F4,\" the ruling boys of the school, in a whirlwind of love and confusion!", "tagline": "", "rating": "t", "vanityurl": "boys-over-flowers", "copyright": "HANA-YORI DANGO \u00a9 1992 by Yoko Kamio\u30fbLeaf Production All rights reserved. First published in Japan in 1982 by SHUEISHA Inc., Tokyo. English translation rights arranged by SHUEISHA Inc", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1671133737, "has_gns": true, "num_gns": 36, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5861-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/31-SeriesThumbnailsManga_BOF__400x320.jpg", "label": null, "recommended_series_ids": "702,434,311,180,492", "latest_author": "Yoko Kamio", "title_sort": "boys over flowers"}}, {"manga_series": {"id": 267, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 267, "device_id": 4, "keyart": "img/manga_series_keyart/821-LaCordaDOro-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 509, "manga_imprint_id": 2, "title": "La Corda d'Oro", "synopsis": "Every few years, the prestigious Seisou Academy holds a prominent musical competition, and only the very best students at the Academy are allowed to participate. Though all are eligible to apply, only students from the music department actually make it to the competition...until now.", "tagline": "", "rating": "t", "vanityurl": "la-corda-doro", "copyright": "Kiniro no Corda \u00a9 YUKI KURE / HAKUSENSHA, INC. / TECMO KOEI GAMES CO., LTD. 2003", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1665177314, "has_gns": true, "num_gns": 17, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/821-LaCordaDOro-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/9-SeriesThumbnailsManga_LaCordaOro_400x320.jpg", "label": null, "recommended_series_ids": "161,254,13,17,190", "latest_author": "Yuki Kure", "title_sort": "la corda d'oro"}}, {"manga_series": {"id": 271, "updated_at": "2023-06-02T09:04:48.000-07:00", "manga_series_common_id": 271, "device_id": 4, "keyart": "img/manga_series_keyart/837-Basara-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 550, "manga_imprint_id": 2, "title": "Basara", "synopsis": "Born under a prophecy that will liberate and unite Japan, Sarasa has had to take her brother Tatara's place as the \"Boy of Destiny.\" Fighting for the oppressed, Sarasa journeys across Japan to gain allies and defeat her enemies--all while keeping her identity a secret!", "tagline": "Sometimes destiny is a choice.", "rating": "tp", "vanityurl": "basara", "copyright": "BASARA \u00a9 1991 Yumi TAMURA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1685721888, "has_gns": true, "num_gns": 27, "has_chapters": true, "num_chapters": 116, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 106, "chapter_last_num": 106, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/837-Basara-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/30-SeriesThumbnailsManga_Basara_400x320.jpg", "label": null, "recommended_series_ids": "777,720,257,778,505,118,806", "latest_author": "Yumi Tamura", "title_sort": "basara"}}, {"manga_series": {"id": 275, "updated_at": "2023-09-07T17:32:26.000-07:00", "manga_series_common_id": 275, "device_id": 4, "keyart": "img/manga_series_keyart/853-TailOfTheMoonPrequel-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 583, "manga_imprint_id": 2, "title": "Tail of the Moon Prequel: The Other Hanzo(u)", "synopsis": "A romantic ninja adventure! Kaguya doesn't remember who she is or why she has a huge scar on her back. Six months ago, she was found injured and unconscious in a field of bamboo. Now she works as a housekeeper and babysitter at a brothel, living her new life simply as \"\"Kaguya.\"\" Kaguya's real identity is entwined with two men--Hanzou, a handsome bodyguard of Okazaki Castle, and Hanzo, a leader of the ninja village of Iga. Between amnesia and mistaken identity, no one knows for sure what kind of person Kaguya is. Only her distinctive scar will lead her to the truth...", "tagline": "The romantic prequel to the ninja series Tail of the Moon!", "rating": "tp", "vanityurl": "tail-of-the-moon-prequel", "copyright": "TSUKI-NO TOIKI AI-NO KIZU \u00a9 2001 by Rinko Ueda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694133146, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 2, "num_chapters_free": 1, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 2, "chapter_last_num": 2, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5922-SeriesHeaders_TailOfMoon_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/60-SeriesThumbnailsManga_TMP_v2_400x320.jpg", "label": null, "recommended_series_ids": "101,146,145,134,231,742,806", "latest_author": "Rinko Ueda", "title_sort": "tail of the moon prequel: the other hanzo(u)"}}, {"manga_series": {"id": 277, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 277, "device_id": 4, "keyart": "img/manga_series_keyart/861-WJuliet-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 565, "manga_imprint_id": 2, "title": "W Juliet", "synopsis": "Makoto Amano wants to become an actor, but his stern father has decreed that the only way Makoto can pursue his dream is to spend the last two years of high school as a girl! He quickly makes friends with popular tomboy Ito Miura, another drama enthusiast at this new high school and the only student to find out his secret--but are they more than pals?", "tagline": "", "rating": "t", "vanityurl": "w-juliet", "copyright": "W Juliet \u00a9 Emura 1997/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1629307167, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5904-SeriesHeaders_WJuliet_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/44-SeriesThumbnailsManga_WJuliet_400x320.jpg", "label": null, "recommended_series_ids": "104,103,181,720,445,742", "latest_author": "Emura", "title_sort": "w juliet"}}, {"manga_series": {"id": 278, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 278, "device_id": 4, "keyart": "img/manga_series_keyart/865-Sugar_Princess-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 840, "manga_imprint_id": 2, "title": "Sugar Princess: Skating To Win", "synopsis": "When ice-skating novice Maya Kurinoki lands a double axel for the first time, coach Eishi Todo sees her potential and vows to make her a figure skating \"princess.\" All Maya has to do is convince famous skater Shun Kano to become her partner. Too bad Shun doesn't want to have anything to do with her!", "tagline": "", "rating": "a", "vanityurl": "sugar-princess", "copyright": "Sugar Princess \u00a9 Hisaya Nakajo 2005/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1666895040, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/865-Sugar_Princess-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/157-SeriesThumbnailsManga_SugarPrincess_400x320.jpg", "label": null, "recommended_series_ids": "222,291,322,380,141", "latest_author": "Hisaya Nakajo", "title_sort": "sugar princess: skating to win"}}, {"manga_series": {"id": 279, "updated_at": "2023-06-02T09:36:32.000-07:00", "manga_series_common_id": 279, "device_id": 4, "keyart": "img/manga_series_keyart/869-Doubt-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 554, "manga_imprint_id": 2, "title": "Doubt!!", "synopsis": "Ugly duckling Ai has blossomed into a swan, but looks are only skin deep. Will Ai's inner confidence catch up with her outer beauty so she can overcome her Doubt?", "tagline": "Will Ai\u2019s inner confidence catch up with her outer beauty so she can overcome her Doubt?", "rating": "tp", "vanityurl": "doubt", "copyright": "DOUBT!! \u00a9 2000 Kaneyoshi IZUMI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1685723792, "has_gns": true, "num_gns": 6, "has_chapters": true, "num_chapters": 28, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 28, "chapter_last_num": 28, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/869-Doubt-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/34-SeriesThumbnailsManga_Doubt_400x320.jpg", "label": null, "recommended_series_ids": "725,245,152,153,143,834", "latest_author": "Kaneyoshi Izumi", "title_sort": "doubt!!"}}, {"manga_series": {"id": 281, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 281, "device_id": 4, "keyart": "img/manga_series_keyart/877-BabyAndMe-Bricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 569, "manga_imprint_id": 2, "title": "Baby & Me", "synopsis": "Young Takuya has it tough. Since his mother passed away, he's had to take care of his baby brother Minoru while their father works the long hours of a Japanese \"salaryman.\"", "tagline": "", "rating": "t", "vanityurl": "baby-and-me", "copyright": "Akachan to Boku \u00a9 Marimo Ragawa 1991/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1649889272, "has_gns": true, "num_gns": 18, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/877-BabyAndMe-Bricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/48-SeriesThumbnailsManga_BabyMe_400x320.jpg", "label": null, "recommended_series_ids": "263,218,238,157", "latest_author": "Marimo Ragawa", "title_sort": "baby & me"}}, {"manga_series": {"id": 282, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 282, "device_id": 4, "keyart": "img/manga_series_keyart/881-VoiceOver-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1669, "manga_imprint_id": 2, "title": "Voice Over!: Seiyu Academy", "synopsis": "Hime Kino\u2019s dream is to one day do voice acting like her hero Sakura Aoyama from the Lovely \u2665 Blazers anime, and getting accepted to the prestigious Holly Academy\u2019s voice actor department is the first step in the right direction! But Hime\u2019s gruff voice has earned her the scorn of teachers and students alike. Hime will not let that stand unchallenged. She\u2019ll show everyone that she is too a voice acting princess, whether they like it or not!!", "tagline": "Gruff voice or not, Hime Kino will become a voice actor!", "rating": "t", "vanityurl": "voice-over-seiyu-academy", "copyright": "SEIYU KA! \u00a9 Maki Minami 2009/HAKUSENSHA,Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1668194574, "has_gns": true, "num_gns": 12, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5845-SeriesHeaders_VoiceOver_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/326-SeriesThumbnailsManga_VCO_400x320.jpg", "label": null, "recommended_series_ids": "279,136,185,385", "latest_author": "Maki Minami", "title_sort": "voice over!: seiyu academy"}}, {"manga_series": {"id": 283, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 283, "device_id": 4, "keyart": "img/manga_series_keyart/885-COWA-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 795, "manga_imprint_id": 1, "title": "COWA!", "synopsis": "Paifu, a half-vampire half-werekoala, is always getting into trouble with his best buddy, Jos\u00e9 the ghost. But when the Monster Flu sweeps through town, the fun and games are over. If the monsters don't get the medicine soon, everyone will die! With all the adults sick, it's up to the kids to save the day!", "tagline": "It\u2019s a \u201cmonster\u201d mission to save everyone\u2019s lives\u2014from the creator of Dragon Ball!", "rating": "a", "vanityurl": "cowa", "copyright": "COWA! \u00a9 1997 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5729-Header_COWA_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/147-SeriesThumbnailsManga_COW__400x320.jpg", "label": null, "recommended_series_ids": "774,10,466,566,362,235", "latest_author": "Akira Toriyama", "title_sort": "cowa!"}}, {"manga_series": {"id": 284, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 284, "device_id": 4, "keyart": "img/manga_series_keyart/889-MuhyoRoji-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 711, "manga_imprint_id": 1, "title": "Muhyo & Roji's Bureau of Supernatural Investigation", "synopsis": "Are you a victim of unwanted spirit possession? Is there a ghost you need sent up and away...or down to burn for all eternity? If the answer is yes, then you need Muhyo and Roji, experts in magic law. Serving justice to evil spirits is their specialty.", "tagline": "Exorcism Incorporated: Specialists in Supernatural Law Enforcement; No exorcism is too creepy or too small; Cleaning up the spirit world, one exorcism at a time.", "rating": "t", "vanityurl": "muhyo-and-rojis-bureau-of-supern", "copyright": "MUHYO TO ROZY NO MAHORITSU SODAN JIMUSHO \u00a9 2004 by Yoshiyuki Nishi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560014, "has_gns": true, "num_gns": 18, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5934-SeriesHeaders_MuhyoRoji_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/124-SeriesThumbnailsManga_MRI_v2_400x320.jpg", "label": null, "recommended_series_ids": "448,105,703,751,79,732,198,125", "latest_author": "Yoshiyuki Nishi", "title_sort": "muhyo & roji's bureau of supernatural investigation"}}, {"manga_series": {"id": 286, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 286, "device_id": 4, "keyart": "img/manga_series_header/286-MangaHeaders_YGOMillennium_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh!: Millennium World", "synopsis": "The final saga of the Yu-Gi-Oh! epic! After many deadly duels, Yugi has collected the three Egyptian God Cards, the key to remembering his own past life as an Egyptian pharaoh. When the cards take Yugi's soul back in time, can he defeat the villains of the past and achieve his ultimate destiny?", "tagline": "In the final saga of the Yu-Gi-Oh! epic, Yugi travels to ancient Egypt!", "rating": "t", "vanityurl": "yu-gi-oh-millennium-world", "copyright": "YU-GI-OH! \u00a9 1996 by Kazuki Takahashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/286-MangaHeaders_YGOMillennium_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/286-th-SeriesThumbnailsManga_YGOMillennium_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/286-MangaHeaders_YGOMillennium_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/286-th-SeriesThumbnailsManga_YGOMillennium_400x320.jpg", "label": null, "recommended_series_ids": "466,566,520,1,248,133,326,128", "latest_author": "Kazuki Takahashi", "title_sort": "yu-gi-oh!: millennium world"}}, {"manga_series": {"id": 287, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 287, "device_id": 4, "keyart": "img/manga_series_keyart/901-KnightsOfTheZodiac-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 628, "manga_imprint_id": 1, "title": "Knights of the Zodiac (Saint Seiya)", "synopsis": "The series begins with the story of Seiya, the main hero, who is one of Athena's Knights. Seiya, along with the other Bronze Knights, must train hard to earn their \"Cloths,\" and take on other challenges as well. Knights of the Zodiac (Saint Seiya) has been a hit in Japan (where it is known as simply Saint Seiya), as well as many European countries including Spain, France, and Italy.", "tagline": "Seiya and his fellow Bronze Knights will do whatever it takes to protect Athena.", "rating": "t", "vanityurl": "knights-of-the-zodiac", "copyright": "SAINT SEIYA \u00a9 1985 by Masami Kurumada/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 28, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/901-KnightsOfTheZodiac-SeriesBricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/90-SeriesThumbnailsManga_KnightZodiac_v2_400x320.jpg", "label": null, "recommended_series_ids": "448,22,784,124,532,339", "latest_author": "Masami Kurumada", "title_sort": "knights of the zodiac (saint seiya)"}}, {"manga_series": {"id": 289, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 289, "device_id": 4, "keyart": "img/manga_series_keyart/909-HereIsGreenwood-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 559, "manga_imprint_id": 2, "title": "Here is Greenwood", "synopsis": "It seems like 15-year-old Kazuya Hasukawa's life can't get much worse. Not only did his older brother marry Kazuya's first love, he brought his bride home to live with the family! Forced out of his own home, Kazuya enters an exclusive all-male boarding school, Ryokuto Academy. Unfortunately, a prestigious education is little compensation for getting stuck with the cross-dressing roommate from Hell...", "tagline": "", "rating": "tp", "vanityurl": "here-is-greenwood", "copyright": "Koko wa Greenwood \u00a9 Yukie Nasu 1986/HAKUSENSHA, Inc", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1652397563, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/909-HereIsGreenwood-SeriesBricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/39-SeriesThumbnailsManga_HereIsGreen_400x320.jpg", "label": null, "recommended_series_ids": "265,311,375,434,264,268,153,277", "latest_author": "Yukie Nasu", "title_sort": "here is greenwood"}}, {"manga_series": {"id": 294, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 294, "device_id": 4, "keyart": "img/manga_series_keyart/929-X_3in1-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1387, "manga_imprint_id": 6, "title": "X (3-in-1)", "synopsis": "X, the epic series from CLAMP, is now available in this deluxe collector\u2019s edition. The pages have been recomposed in the original right-to-left reading order and restored to the highest quality. Each volume contains three of the original graphic novels, along with gorgeous, full-color illustrations never before published outside Japan!", "tagline": "", "rating": "tp", "vanityurl": "x-clamp", "copyright": "\u00a9CLAMP (1992-2002)", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1675928353, "has_gns": true, "num_gns": 6, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5889-SeriesHeaders_X_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/274-SeriesThumbnailsManga_X_400x320.jpg", "label": null, "recommended_series_ids": "410,364,756,559,333,335", "latest_author": "CLAMP", "title_sort": "x (3-in-1)"}}, {"manga_series": {"id": 295, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 295, "device_id": 4, "keyart": "img/manga_series_keyart/933-SweetRein-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1668, "manga_imprint_id": 2, "title": "Sweet Rein", "synopsis": "Sad at the thought of spending Christmas alone, Kurumi Sagara goes out for a walk. While she\u2019s crossing the street, a boy bumps into her, and a rein suddenly appears that binds them together. The overjoyed boy tells her she\u2019s his master and that she\u2019s a Santa Claus. Kurumi dismisses him as a crazy person, but then he transforms into a reindeer?!", "tagline": "", "rating": "t", "vanityurl": "sweet-rein", "copyright": "YOROSHIKU\u30fbMASTER by Sakura Tsukuba \u00a9 Sakura Tsukuba [2005] All rights reserved. First published in Japan in [2005] by HAKUSENSHA, Inc., Tokyo. English language translation rights arranged with HAKUSENSHA, Inc., Tokyo.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1631232265, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5943-SeriesHeaders_SweetRein_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/325-SeriesThumbnailsManga_SweetRein_400x320.jpg", "label": null, "recommended_series_ids": "264,268,436,361,243", "latest_author": "Sakura Tsukuba", "title_sort": "sweet rein"}}, {"manga_series": {"id": 298, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 298, "device_id": 4, "keyart": "img/manga_series_keyart/945-Phoenix-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 542, "manga_imprint_id": 4, "title": "Phoenix", "synopsis": "Considered by many the peak of Osamu Tezuka's artistic achievement and called his \"life's work\" by the author, Phoenix is made up of twelve complex stories linked by the presence of the mythical bird, an immortal guardian of the universal life force. Read in order, the separate stories jump across time, alternating between a distant future and a distant past, converging on the present, with characters from one story being reincarnated in another.", "tagline": "", "rating": "tp", "vanityurl": "phoenix", "copyright": "\u00a9 2003 by Tezuka Productions", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1665769424, "has_gns": true, "num_gns": 12, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/945-Phoenix-SeriesBricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/27-SeriesThumbnailsManga_Phoenix_400x320.jpg", "label": null, "recommended_series_ids": "271,710,909,97,555", "latest_author": "Osamu Tezuka", "title_sort": "phoenix"}}, {"manga_series": {"id": 299, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 299, "device_id": 4, "keyart": "img/manga_series_header/299-SeriesHeaders_DBColorSaiyan_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": 1, "title": "Dragon Ball Full Color Saiyan Arc", "synopsis": "Son Goku is the greatest hero on Earth. Five years after defeating the demon king Piccolo, he\u2019s grown up and has a family. But what is the real reason for Goku\u2019s incredible strength? A visitor from outer space arrives bearing terrible news\u2014Goku is an alien, and the visitor, Raditz, is Goku\u2019s brother! When Raditz turns out to be a ruthless killer, Goku must fight his incredibly strong brother to save his family and the entire human race. A surprising alliance may be Earth\u2019s last hope: Goku will team up with his old enemy Piccolo to save the world!", "tagline": "Akira Toriyama's original, best-selling series now in a full-color version!", "rating": "a", "vanityurl": "dragon-ball-full-color", "copyright": "DRAGON BALL \u00a9 1984 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/299-SeriesHeaders_DBColorSaiyan_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/948-SeriesThumbnailsManga_DBFullColorSaiyan_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/299-SeriesHeaders_DBColorSaiyan_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/948-SeriesThumbnailsManga_DBFullColorSaiyan_400x320.jpg", "label": null, "recommended_series_ids": "461,132,496,648,466,80,362,5", "latest_author": "Akira Toriyama", "title_sort": "dragon ball full color saiyan arc"}}, {"manga_series": {"id": 300, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 300, "device_id": 4, "keyart": "img/manga_series_keyart/953-DeadmanWonderland-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1673, "manga_imprint_id": 6, "title": "Deadman Wonderland", "synopsis": "Framed for the brutal murders of his classmates by the mysterious Red Man, middle school student Ganta Igarashi finds himself sentenced to death and sent to the bizarre and fatal theme park/prison that has risen from the ruins of the Great Tokyo Earthquake\u2014a hell on earth known as \u201cDeadman Wonderland.\u201d", "tagline": "Come one, come all\u2026to Tokyo\u2019s most macabre theme park/prison!", "rating": "tp", "vanityurl": "deadman-wonderland", "copyright": "DEADMAN WONDERLAND \u00a9Jinsei KATAOKA (2007-2010) \u00a9Kazuma KONDOU (2007-2010)", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1650494002, "has_gns": true, "num_gns": 13, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5398-SeriesHeader_Tier02_DMW_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/329-SeriesThumbnails_DMW__400x320.jpg", "label": null, "recommended_series_ids": "179,314,219,371,465,468,519", "latest_author": "Story by Jinsei Kataoka, Art by Kazuma Kondou", "title_sort": "deadman wonderland"}}, {"manga_series": {"id": 302, "updated_at": "2023-05-10T13:21:49.000-07:00", "manga_series_common_id": 302, "device_id": 4, "keyart": "img/manga_series_keyart/961-PhantomThiefJeanne-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1677, "manga_imprint_id": 2, "title": "Phantom Thief Jeanne", "synopsis": "High school student Maron Kusakabe has a secret: she\u2019s Phantom Thief Jeanne. She sneaks into private art collections to steal paintings in which demons reside. Jeanne\u2019s task is to seal the demons before they can devour human hearts. So far she\u2019s been able to evade the police on her midnight outings, but now another thief has come onto the scene\u2014Phantom Thief Sinbad\u2014and he\u2019s trying to take the paintings before she does! ", "tagline": "The beloved magical-girl fantasy by the creator of Full Moon and The Gentlemen\u2019s Alliance +.", "rating": "t", "vanityurl": "phantom-thief-jeanne", "copyright": "KAMIKAZE KAITO JEANNE @ 1998 by Arina Tanemura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1683750109, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 31, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 30, "chapter_last_num": 30, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5737-Header_PhantomThiefJeanne_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/330-SeriesThumbnailsManga_PTJ__400x320.jpg", "label": null, "recommended_series_ids": "218,136,685,505,145,139,742,230", "latest_author": "Arina Tanemura", "title_sort": "phantom thief jeanne"}}, {"manga_series": {"id": 303, "updated_at": "2023-06-09T16:29:38.000-07:00", "manga_series_common_id": 303, "device_id": 4, "keyart": "img/manga_series_header/303-Header_Ranma_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 533, "manga_imprint_id": 3, "title": "Ranma 1/2 (2-in-1 Edition)", "synopsis": "A remastered 2-in-1 edition of the all-time classic hit from one of Japan\u2019s most beloved creators, available for the first time in a format faithful to the original work.\r\n\r\nOne day, teenage martial artist Ranma Saotome went on a training mission with his father and ended up taking a dive into some cursed springs at a legendary training ground in China. Now, every time he\u2019s splashed with cold water, he changes into a girl. His father, Genma, changes into a panda! What\u2019s a half-guy, half-girl to do?", "tagline": "The all-time classic hit series of gender-swapping, species-bending, madcap martial arts mayhem!", "rating": "tp", "vanityurl": "ranma", "copyright": "RANMA1/2 \u00a9 1988 Rumiko TAKAHASHI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/303-Header_Ranma_v2_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 3, "imprint_title": "Shonen Sunday", "mod_ts": 1704096058, "has_gns": true, "num_gns": 19, "has_chapters": true, "num_chapters": 407, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 407, "chapter_last_num": 407, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/303-Header_Ranma_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/879-SeriesThumbnailsManga_RANver3_400x320.jpg", "label": null, "recommended_series_ids": "89,600,710,778,698,541,585,806", "latest_author": "Rumiko Takahashi", "title_sort": "ranma 1/2 (2-in-1 edition)"}}, {"manga_series": {"id": 304, "updated_at": "2023-06-13T13:00:42.000-07:00", "manga_series_common_id": 304, "device_id": 4, "keyart": "img/manga_series_keyart/969-FoodWars-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1742, "manga_imprint_id": 5, "title": "Food Wars!: Shokugeki no Soma", "synopsis": "Soma Yukihira\u2019s old man runs a small family restaurant in the less savory end of town. Aiming to one day surpass his father\u2019s culinary prowess, Soma hones his skills day in and day out until one day, out of the blue, his father decides to enroll Soma in a classy culinary school! Can Soma really cut it in a place that prides itself on a 10 percent graduation rate? And can he convince the beautiful, domineering heiress of the school that he belongs there at all?!", "tagline": "An action-packed, saucy food comedy featuring one boy\u2019s determination to be top chef!", "rating": "tp", "vanityurl": "food-wars", "copyright": "SHOKUGEKI NO SOMA \u00a9 2012 by Yuto Tsukuda, Shun Saeki /SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1686686442, "has_gns": true, "num_gns": 36, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5337-SeriesHeaders_Tier01_FW_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/343-SeriesThumbnailsManga_FDW_400x320.jpg", "label": null, "recommended_series_ids": "580,496,647,450,339,798,714", "latest_author": "Story by Yuto Tsukuda, Art by Shun Saeki", "title_sort": "food wars!: shokugeki no soma"}}, {"manga_series": {"id": 305, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 305, "device_id": 4, "keyart": "img/manga_series_keyart/973-MillenniumSnow-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 682, "manga_imprint_id": 2, "title": "Millennium Snow", "synopsis": "Seventeen-year-old Chiyuki Matsuoka was born with heart problems, and her doctors say she won't live to see the next snow. Toya is an 18-year-old vampire who hates blood and refuses to make the traditional partnership with a human, whose life-giving blood would keep them both alive for a thousand years.", "tagline": "Romance blossoms between a handsome young vampire and an ailing teenage girl. Will their love last a millennium?", "rating": "t", "vanityurl": "millennium-snow", "copyright": "Sennen no Yuki \u00a9 Bisco Hatori 1998/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1665694716, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5490-Tier04_SeriesHeaders_MLS_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/112-SeriesThumbnailsManga_MLSv2_400x320.jpg", "label": null, "recommended_series_ids": "164,21,13,15,350,357,501", "latest_author": "Bisco Hatori", "title_sort": "millennium snow"}}, {"manga_series": {"id": 307, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 307, "device_id": 4, "keyart": "img/manga_series_keyart/981-AYNIK_GN01-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1055, "manga_imprint_id": 9, "title": "All You Need Is Kill: Official Graphic Novel Adaptation", "synopsis": "When the alien Mimics invade, soldier Keiji Kiriya is killed, easily, on the battlefield.  But he wakes up the previous morning as if nothing happened and must fight the battle again...and again...and again.  Teamed up with the mysterious female fighter known as the Full Metal Bitch, Keiji must figure out how to stop the cycle - and what role his new and deadly ally plays in the fight to save Earth.  \r\n\r\nAuthor Nick Mamatas (Bullettime, Love Is the Law) and artist Lee Ferguson (Miranda Mercury, Green Arrow/Black Canary) give Hiroshi Sakurazaka's mind-bending alien invasion tale a bold new look in the official comic adaption of the original novel. ", "tagline": "If there\u2019s one thing worse than dying, it\u2019s coming back to die again\u2026and again\u2026", "rating": "tp", "vanityurl": "all-you-need-is-kill-gn", "copyright": "All You Need Is Kill \u00a9 2004 by Hiroshi Sakurazaka  All rights reserved.  Original Novel first published in Japan in 2004 by Shueisha Inc., Tokyo.  This English graphic novel is based on the original novel.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 9, "imprint_title": "Haikasoru", "mod_ts": 1628812247, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5390-SeriesHeader_Tier02_AYNIK_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/199-SeriesThumbnailsManga_AYNIK_400x320.jpg", "label": null, "recommended_series_ids": "193,9,801,113,178", "latest_author": "Adapted by Nick Mamatas, Art by Lee Ferguson, Created by Hiroshi Sakurazaka", "title_sort": "all you need is kill: official graphic novel adaptation"}}, {"manga_series": {"id": 308, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 308, "device_id": 4, "keyart": "img/manga_series_keyart/985-DNANGEL-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1758, "manga_imprint_id": 8, "title": "D\u30fbN\u30fbANGEL", "synopsis": "When average, unlucky Daisuke Niwa turns fourteen, he discovers a shocking family secret: he transforms into Phantom Thief Dark Mousy when he sees Risa, the girl he loves. The only way to cure this unfortunate genetic \"condition\" is for Risa to return his feelings. But how can Daisuke win her heart when she's already turned him down?   ", "tagline": "", "rating": "t", "vanityurl": "d-n-angel", "copyright": "\uff24\u30fbN\u30fbANGEL Volume 1 \u00a9 YUKIRU SUGISAKI 1997", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1650493029, "has_gns": true, "num_gns": 13, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/985-DNANGEL-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/603-VIZSelect_Thumb_DNAngel_400x320.jpg", "label": null, "recommended_series_ids": "320,340,388,407", "latest_author": "Yukiru Sugisaki", "title_sort": "d\u30fbn\u30fbangel"}}, {"manga_series": {"id": 310, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 310, "device_id": 4, "keyart": "img/manga_series_keyart/993-ChibiVampire-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1756, "manga_imprint_id": 8, "title": "Chibi Vampire", "synopsis": "Karin Maaka is a vampire with an unusual condition: instead of taking blood from humans, she must give them her blood instead! If Karin doesn't \"donate\" her blood often, she'll experience seriously intense nosebleeds. Her secret stays buried until Kenta Usui transfers to her class. Now her body produces more blood than ever before, and it looks like a reaction to him! Even worse, he soon discovers her true nature...", "tagline": "", "rating": "tp", "vanityurl": "chibi-vampire", "copyright": "KARIN \u00a9  2003 YUNA KAGESAKI", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1650491554, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/993-ChibiVampire-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/602-VIZSelect_Thumb_ChibiVampire_400x320.jpg", "label": null, "recommended_series_ids": "389,308,78,86,15,350,357,501", "latest_author": "Yuna Kagesaki", "title_sort": "chibi vampire"}}, {"manga_series": {"id": 311, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 311, "device_id": 4, "keyart": "img/manga_series_keyart/997-BoysOverFlowers_JewelryBox-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 551, "manga_imprint_id": 2, "title": "Boys Over Flowers: Jewelry Box", "synopsis": "Although Tsukushi Makino is from a poor family, she attends an elite school for the super rich, where her life has become intertwined with the \"F4,\" the ruling boys of the school, in a whirlwind of love and confusion!", "tagline": "", "rating": "t", "vanityurl": "boys-over-flowers-jewelry-box", "copyright": "HANA-YORI DANGO \u00a9 1992 by Yoko Kamio\u30fbLeaf Production/SHUEISHA Inc. ", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1704096024, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5861-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/31-SeriesThumbnailsManga_BOF__400x320.jpg", "label": null, "recommended_series_ids": "265,434,546,304,492", "latest_author": "Yoko Kamio", "title_sort": "boys over flowers: jewelry box"}}, {"manga_series": {"id": 312, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 312, "device_id": 4, "keyart": "img/manga_series_keyart/1001-SeraphOfTheEnd-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1715, "manga_imprint_id": 5, "title": "Seraph of the End", "synopsis": "After trumpets of the apocalypse proclaim the fall of humanity, vampires arise from the shadows to rule the earth. Yuichiro wants just one thing\u2014to get revenge by killing each and every vampire.", "tagline": "In a post-apocalyptic world of vampires vs. humans, Yuichiro brings vengeance upon his vampire overlords!", "rating": "tp", "vanityurl": "seraph-of-the-end", "copyright": "OWARI NO SERAPH \u00a9 2012 by Takaya Kagami, Yamato Yamamoto, Daisuke Furuya /SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1707466343, "has_gns": true, "num_gns": 28, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5395-SeriesHeader_Tier02_SPH_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/334-SeriesThumbnailsManga_SER_400x320.jpg", "label": null, "recommended_series_ids": "448,105,703,580,546,627,579,471", "latest_author": "Story by Takaya Kagami, Art by Yamato Yamamoto", "title_sort": "seraph of the end"}}, {"manga_series": {"id": 313, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 313, "device_id": 4, "keyart": "img/manga_series_keyart/1005-FateStayNight_GN01-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1783, "manga_imprint_id": 8, "title": "Fate/stay night", "synopsis": "A magus adopted high school student Shirou Emiya as a child. Inspired by his adoptive father\u2019s bravery, Shirou desires above all to follow in his footsteps and become a hero, despite his lack of natural talent. However, a war is raging among the magi, and Shirou is about to find himself at the center of it...", "tagline": "", "rating": "t", "vanityurl": "fate-stay-night", "copyright": "Fate/stay night \u00a9 Dat NISHIWAKI 2006 \u00a9 TYPE-MOON ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1652384267, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1005-FateStayNight_GN01-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/605-VIZSelect_Thumb_FateStay_400x320.jpg", "label": null, "recommended_series_ids": "105,300,314,373", "latest_author": "Art by Dat Nishiwaki, Story by TYPE-MOON", "title_sort": "fate/stay night"}}, {"manga_series": {"id": 314, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 314, "device_id": 4, "keyart": "img/manga_series_keyart/1009-FutureDiary_GN01-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1784, "manga_imprint_id": 8, "title": "Future Diary", "synopsis": "Yukiteru is a lonely, quiet boy who spends his solitary days keeping a cell phone diary. Everything changes one morning when he realizes that the diary entries are now not only from the future, but they foretell his death! Together with his mysterious and dangerous classmate Yuno, Yukiteru must fight for his life against twelve other opponents who all possess Future Diaries.", "tagline": "", "rating": "tp", "vanityurl": "future-diary", "copyright": "MIRAI NIKKI \u00a9 Sakae ESUNO 2006", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1628634313, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1009-FutureDiary_GN01-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/606-VIZSelect_Thumb_FutureDiary_400x320.jpg", "label": null, "recommended_series_ids": "300,9,801,313,416", "latest_author": "Sakae Esuno", "title_sort": "future diary"}}, {"manga_series": {"id": 315, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 315, "device_id": 4, "keyart": "img/manga_series_keyart/1013-TrinityBlood-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1685, "manga_imprint_id": 8, "title": "Trinity Blood", "synopsis": "In a postapocalyptic future, humans, protected by the Vatican, and vampires, called Methuselahs, fight an endless war. Amidst the bloodshed and violence, many desire a peaceful coexistence between the two species. But standing between them and this goal is the Rosenkreuz Orden, a group of vampire extremists who manipulate the two sides and pit them against each other. To combat them, the Vatican special operations group \u201cAX,\u201d led by Cardinal Caterina, must use everything they have\u2014even a vampire who preys on the blood of other vampires.", "tagline": "", "rating": "tp", "vanityurl": "trinity-blood", "copyright": "TRINITY BLOOD \u00a9 Kiyo KYUJYO 2004   \u00a9Sunao YOSHIDA 2004", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1668193173, "has_gns": true, "num_gns": 12, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1013-TrinityBlood-SeriesBricks-940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/601-VIZSelect_Thumb_TrinityBlood_400x320.jpg", "label": null, "recommended_series_ids": "166,430,313,433", "latest_author": "Story by Sunao Yoshida, Art by Kiyo Kyujyo", "title_sort": "trinity blood"}}, {"manga_series": {"id": 316, "updated_at": "2023-09-07T17:09:59.000-07:00", "manga_series_common_id": 316, "device_id": 4, "keyart": "img/manga_series_keyart/1017-CWO14148_MyLoveStory_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1718, "manga_imprint_id": 2, "title": "My Love Story!!", "synopsis": "Takeo Goda is a giant guy with a giant heart. Too bad the girls don\u2019t want him! (They want his good-looking best friend, Sunakawa.) Used to being on the sidelines, Takeo simply stands tall and accepts his fate. But one day when he saves a girl named Yamato from a harasser on the train, his (love!) life suddenly takes an incredible turn!", "tagline": "A gentle giant with a heart of gold finally stops being a love underdog in this hilarious romantic comedy!", "rating": "t", "vanityurl": "my-love-story", "copyright": "ORE MONOGATARI!! \u00a9 2011 by Kazune Kawahara, Aruko/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694131799, "has_gns": true, "num_gns": 13, "has_chapters": true, "num_chapters": 50, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 50, "chapter_last_num": 50, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5443-Tier03_SeriesHeader_MLS_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/336-SeriesThumbnailsManga_MLS_v2_400x320.jpg", "label": null, "recommended_series_ids": "152,709,785,848,234,824,190,834", "latest_author": "Story by Kazune Kawahara, Art by Aruko", "title_sort": "my love story!!"}}, {"manga_series": {"id": 318, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 318, "device_id": 4, "keyart": "img/manga_series_keyart/1025-AYNIK_obata-SeriesBricks-940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1055, "manga_imprint_id": 5, "title": "All You Need is Kill", "synopsis": "When the alien Mimics invade, Keiji Kiriya is just one of many recruits shoved into a suit of battle armor called a Jacket and sent out to kill. Keiji dies on the battlefield, only to be reborn each morning to fight and die again and again. On his fifth iteration, he gets a message from a mysterious ally\u2014the female soldier known as the Full Metal Bitch. Is she the key to Keiji's escape or his final death?", "tagline": "If there\u2019s one thing worse than dying, it\u2019s coming back to die again\u2026and again\u2026", "rating": "tp", "vanityurl": "all-you-need-is-kill-manga", "copyright": "ALL YOU NEED IS KILL \u00a9 2014 by Hiroshi Sakurazaka, Ryosuke Takeuchi, yoshitoshi ABe, Takeshi Obata/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1672560015, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5390-SeriesHeader_Tier02_AYNIK_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/199-SeriesThumbnailsManga_AYNIK_400x320.jpg", "label": null, "recommended_series_ids": "7,826,124,451,258", "latest_author": "Art by Takeshi Obata, Original Story by Hiroshi Sakurazaka, Storyboards by Ryosuke Takeuchi, Illustrations by Yoshitoshi Abe", "title_sort": "all you need is kill"}}, {"manga_series": {"id": 320, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 320, "device_id": 4, "keyart": "img/manga_series_keyart/1033-CWO14148_LagoonEngine_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1876, "manga_imprint_id": 8, "title": "Lagoon Engine", "synopsis": "Yen and Jin must battle spirits and ghosts -- or their family legacy dies!", "tagline": "", "rating": "t", "vanityurl": "lagoon-engine", "copyright": "LAGOON ENGINE \u00a9 YUKIRU SUGISAKI 2002", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1628719752, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1033-CWO14148_LagoonEngine_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/609-VIZSelect_Thumb_LagoonEngine_400x320.jpg", "label": null, "recommended_series_ids": "410,308,360,404,284", "latest_author": "Yukiru Sugisaki", "title_sort": "lagoon engine"}}, {"manga_series": {"id": 321, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 321, "device_id": 4, "keyart": "img/manga_series_keyart/1037-CWO14148_GirlWhoLeapt_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1878, "manga_imprint_id": 8, "title": "The Girl Who Leapt Through Time", "synopsis": "Relive the beauty of a timeless story in the manga adaptation of the acclaimed anime feature film \"The Girl Who Leapt Through Time.", "tagline": "", "rating": "t", "vanityurl": "the-girl-who-leapt-through-time", "copyright": "TOKI WO KAKERU SHOJYO -TOKIKAKE- Volume 1 \u00a9 Ranmaru KOTONE 2006  \u00a9Yasutaka TSUTSUI 2006 \u00a92006\u3000TOKIKAKE\u3000Film Partners", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1629830972, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1037-CWO14148_GirlWhoLeapt_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/610-VIZSelect_Thumb_GirlWhoLeapt_400x320.jpg", "label": null, "recommended_series_ids": "370,157,369,374,230", "latest_author": "Story by Ranmaru Kotone, Art by Yasutaka Tsusui, Character Designs by Yoshiyuki Sadamoto, Original Concept by TOKIKAKE FILM PARTNERS", "title_sort": "girl who leapt through time"}}, {"manga_series": {"id": 324, "updated_at": "2024-01-08T08:51:43.000-08:00", "manga_series_common_id": 324, "device_id": 4, "keyart": "img/manga_series_keyart/1049-WT_201409GN01_brick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1854, "manga_imprint_id": 1, "title": "World Trigger", "synopsis": "Destroy thy Neighbor! A gate to another dimension has burst open, and invincible monsters called Neighbors invade Earth. Osamu Mikumo may not be the best among the elite warriors who co-opt other-dimensional technology to fight back, but along with his Neighbor friend Yuma, he\u2019ll do whatever it takes to defend life on Earth as we know it.", "tagline": "You thought your neighbors were bad\u2026but at least they\u2019re not aliens trying to kill you!", "rating": "t", "vanityurl": "world-trigger", "copyright": "WORLD TRIGGER \u00a9 2013 by Daisuke Ashihara/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706816825, "has_gns": true, "num_gns": 25, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5557-Tier06_SeriesHeaders_WorldTrigger_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/353-SeriesThumbnailsManga_WTG_400x320.jpg", "label": null, "recommended_series_ids": "703,648,466,724,126", "latest_author": "Daisuke Ashihara", "title_sort": "world trigger"}}, {"manga_series": {"id": 325, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 325, "device_id": 4, "keyart": "img/manga_series_header/325-SJ_StealthSymphony_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1801, "manga_imprint_id": 1, "title": "Stealth Symphony", "synopsis": "Jig Kumonuma bears a curious curse. Whenever others try to harm him, the\r\ndevice on his back returns the damage twofold, while Jig remains unscathed.\r\nFearful of harming others, Jig isolates himself from his family and the world\u2014\r\nuntil he hears word of a cure in the bustling city of Jinbo-cho.", "tagline": "A dark and dangerous world of dragons and assassins! ", "rating": "t", "vanityurl": "stealth-symphony", "copyright": "STEALTH SYMPHONY \u00a9 2014 by Ryohgo Narita, Yoichi Amano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/325-SJ_StealthSymphony_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/325-th-SJ_StealthSymphony_400x320_jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560019, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/325-SJ_StealthSymphony_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/325-th-SJ_StealthSymphony_400x320_jpg", "label": null, "recommended_series_ids": "8,581,540,627,632", "latest_author": "Story by Ryogo Harita, Art by Yoichi Amano", "title_sort": "stealth symphony"}}, {"manga_series": {"id": 326, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 326, "device_id": 4, "keyart": "img/manga_series_header/326-SeriesHeaders_YGOArcV_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 639, "manga_imprint_id": 1, "title": "Yu-Gi-Oh! ARC-V", "synopsis": "Action Duels have become a global sensation, but what is the dark secret behind them that threatens to destroy the world?", "tagline": "Action Duels have become a global sensation, but what is the dark secret behind them that threatens to destroy the world?", "rating": "t", "vanityurl": "yu-gi-oh-arc-v", "copyright": "YU-GI-OH! ARC-V \u00a9\u00a02014 by Kazuki Takahashi, Naohito Miyoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/326-SeriesHeaders_YGOArcV_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1056-SeriesThumbnailsManga_YGOArcV_v2_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/326-SeriesHeaders_YGOArcV_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1056-SeriesThumbnailsManga_YGOArcV_v2_400x320.jpg", "label": null, "recommended_series_ids": "461,299,466,399,133,128,247,286", "latest_author": "Story by Shin Yoshida, Art by Naohito Miyoshi, Originally Created by Kazuki Takahashi", "title_sort": "yu-gi-oh! arc-v"}}, {"manga_series": {"id": 329, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 329, "device_id": 4, "keyart": "img/manga_series_keyart/1069-CWO14197_LuckyStar_AugBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1797, "manga_imprint_id": 8, "title": "Lucky\u2605Star", "synopsis": "With comic strips of \"loose\" stories, be prepared for involuntary laughter! Witness the lives of four Japanese high school girls as they explore the extraordinary in the ordinary: especially Konata Izumi, who despite being smart and athletic can't find the time for anything else but being the ultimate otaku!", "tagline": "", "rating": "t", "vanityurl": "lucky-star", "copyright": "Lucky\u2606Star \u00a9 Kagami YOSHIMIZU 2005", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1665686827, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1069-CWO14197_LuckyStar_AugBrick_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/608-VIZSelect_Thumb_LuckyStar_400x320.jpg", "label": null, "recommended_series_ids": "372,234,359,387", "latest_author": "Kagami Yoshimizu", "title_sort": "lucky\u2605star"}}, {"manga_series": {"id": 330, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 330, "device_id": 4, "keyart": "img/manga_series_keyart/1073-CWO14197_StLunatic_AugBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1893, "manga_imprint_id": 8, "title": "St. Lunatic High School", "synopsis": "Hard times have fallen on Niko Kanazaki and her brother Atchan, so to earn some extra money Niko takes a part-time job at the distinguished St. Lunatic High School as a night school teacher. However, she's shocked to learn that night classes only include demon children! Can the mysterious Ren show her that humans and demons share some common ground?", "tagline": "", "rating": "t", "vanityurl": "st-lunatic-high-school", "copyright": "ST. LUNATIC HIGH-SCHOOL YORU NIMO MAKEZU! \u00a9 MAJIKO! 2004", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1666894271, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1073-CWO14197_StLunatic_AugBrick_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/611-VIZSelect_Thumb_StLunatic_400x320.jpg", "label": null, "recommended_series_ids": "765,415,366,369,374,141", "latest_author": "MAJIKO!", "title_sort": "st. lunatic high school"}}, {"manga_series": {"id": 332, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 332, "device_id": 4, "keyart": "img/manga_series_header/332-SeriesHeaders_TimeKillers_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1724, "manga_imprint_id": 1, "title": "Time Killers", "synopsis": "Explore fantastic realms of imagination in this stunning collection of short stories by Kazue Kato, creator of the smash-hit manga series Blue Exorcist! With Kato\u2019s amazing and distinctive art leaping from the page, Time Killers includes her first work, Boku to Usagi (Me and the Rabbit), and features the stories and character designs that would become her breakthrough series, Blue Exorcist. Take off on a flight of fantasy with Time Killers!", "tagline": "A collection of short stories by Kazue Kato, creator of the hit manga series, Blue Exorcist.", "rating": "tp", "vanityurl": "time-killers", "copyright": "TIME KILLERS KAZUE KATO TANPENSHU\u00a0\u00a9 2011 by\u00a0Kazue Kato", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/332-SeriesHeaders_TimeKillers_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/332-SeriesHeaders_TimeKillers_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/994-SeriesThumbnailsManga_TimeKillers_400x320.jpg", "label": null, "recommended_series_ids": "105,703", "latest_author": "Kazue Kato", "title_sort": "time killers"}}, {"manga_series": {"id": 333, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 333, "device_id": 4, "keyart": "img/manga_series_keyart/1085-SeptBricks_MiyukiChan_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1904, "manga_imprint_id": 8, "title": "Miyuki-Chan in Wonderland", "synopsis": "A beautifully told fantasy tale by the award-winning manga team CLAMP, Miyuki-Chan in Wonderland explores a dazzling array of worlds through a heroine that would, strangely enough, rather stay in ours!", "tagline": "", "rating": "tp", "vanityurl": "miyuki-chan-in-wonderland", "copyright": "FUSHIGI NO KUNI NO MIYUKICHAN \u00a9 CLAMP", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1630013212, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1085-SeptBricks_MiyukiChan_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/612-VIZSelect_Thumb_MiyukiWonderland_400x320.jpg", "label": null, "recommended_series_ids": "321,336,353,424", "latest_author": "CLAMP", "title_sort": "miyuki-chan in wonderland"}}, {"manga_series": {"id": 334, "updated_at": "2023-10-30T17:02:23.000-07:00", "manga_series_common_id": 334, "device_id": 4, "keyart": "img/manga_series_keyart/1089-CWO15248_SeriesBricks_CrazyForYou_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1906, "manga_imprint_id": 8, "title": "Crazy For You", "synopsis": "Sachi is a carefree, somewhat ditzy girl who has been single her entire all-girls-school existence. But when she meets a boy named Yuki-chan at a matchmaking event, is her love life finally beginning?", "tagline": "", "rating": "t", "vanityurl": "crazy-for-you", "copyright": "CRAZY FOR YOU \u00a9 2003 by Karuho Shiina/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1698710543, "has_gns": true, "num_gns": 6, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1089-CWO15248_SeriesBricks_CrazyForYou_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/613-VIZSelect_Thumb_CrazyForYou_400x320.jpg", "label": null, "recommended_series_ids": "100,156,709,221,135,600,843", "latest_author": "Karuho Shiina", "title_sort": "crazy for you"}}, {"manga_series": {"id": 335, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 335, "device_id": 4, "keyart": "img/manga_series_keyart/1093-SeptBricks_Suki_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1908, "manga_imprint_id": 8, "title": "Suki", "synopsis": "Hinata and her teddy bear friends are in for a surprise when a handsome stranger moves in next door...and happens to be her new teacher!", "tagline": "", "rating": "t", "vanityurl": "suki", "copyright": "SUKI.DAKARA SUKI \u00a9 CLAMP", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1631653581, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1093-SeptBricks_Suki_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/614-VIZSelect_Thumb_Suki_400x320.jpg", "label": null, "recommended_series_ids": "411,415,436,367", "latest_author": "CLAMP", "title_sort": "suki"}}, {"manga_series": {"id": 336, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 336, "device_id": 4, "keyart": "img/manga_series_keyart/1097-SeptBricks_KyoKara_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1910, "manga_imprint_id": 8, "title": "Kyo Kara MAOH!", "synopsis": "From the creator of Shinobu Kokoro comes an outrageous, gender-bending, high school demon love story!", "tagline": "", "rating": "t", "vanityurl": "kyo-kara-maoh", "copyright": "KYOKARA MA NO TSUKU JIYUGYO ! \u00a9 Temari MATSUMOTO 2005  \u00a9Tomo TAKABAYASHI 2005 ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1629743324, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1097-SeptBricks_KyoKara_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/615-VIZSelect_Thumb_KyoKaraMAOH_400x320.jpg", "label": null, "recommended_series_ids": "308,360,404,340,25", "latest_author": "Temari Matsumoto", "title_sort": "kyo kara maoh!"}}, {"manga_series": {"id": 339, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 339, "device_id": 4, "keyart": "img/manga_series_header/339-SeriesHeaders_JoJoPart01_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": 5, "title": "JoJo's Bizarre Adventure: Part 1--Phantom Blood", "synopsis": "The legendary Shonen Jump series, now available in English for the first time, in a deluxe edition featuring color pages and newly drawn cover art! JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles. A multigenerational tale of the heroic Joestar family and their never-ending battle against evil! ", "tagline": "Fate brings Jonathan Joestar and Dio together\u2014the world will never be the same! ", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-one", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by Hirohiko Araki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/339-SeriesHeaders_JoJoPart01_v2_2000x800_wm.jpg", "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1699998923, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/339-SeriesHeaders_JoJoPart01_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/89-SeriesThumbManga_JOJO_v2_400x320.jpg", "label": null, "recommended_series_ids": "22,10,376,469,596", "latest_author": "Hirohiko Araki", "title_sort": "jojo's bizarre adventure: part 1--phantom blood"}}, {"manga_series": {"id": 340, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 340, "device_id": 4, "keyart": "img/manga_series_keyart/1105-CWO14247_MadLoveChase_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1925, "manga_imprint_id": 8, "title": "Mad Love Chase", "synopsis": "The demon prince Kaito is ready to live it up...by escaping to our world!", "tagline": "", "rating": "tp", "vanityurl": "mad-love-chase", "copyright": "HARLEM BEAT WA YOAKEMADE \u00a9 Kazusa TAKASHIMA 2002", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1665532165, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1105-CWO14247_MadLoveChase_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/618-VIZSelect_Thumb_MadLoveChase_400x320.jpg", "label": null, "recommended_series_ids": "188,308,336,273", "latest_author": "Kazusa Takashima", "title_sort": "mad love chase"}}, {"manga_series": {"id": 342, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 342, "device_id": 4, "keyart": "img/manga_series_keyart/1113-CWO14247_MillionTears_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1927, "manga_imprint_id": 8, "title": "Million Tears", "synopsis": "Gorgeously illustrated and spectacularly twisted, Kazumi-sensei's dramatic shojo is an unforgettable journey of discovery in a world filled with suspicion and awe. \r\n\r\n", "tagline": "", "rating": "t", "vanityurl": "million-tears", "copyright": "HYAKUMANTSUBU NO NAMIDA Volume 1 \u00a9 Yuana KAZUMI 2002", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1665694780, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1113-CWO14247_MillionTears_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/619-VIZSelect_Thumb_MillionTears_400x320.jpg", "label": null, "recommended_series_ids": "370,379,394,355", "latest_author": "Yuana Kazumi", "title_sort": "million tears"}}, {"manga_series": {"id": 343, "updated_at": "2023-04-05T08:45:45.000-07:00", "manga_series_common_id": 343, "device_id": 4, "keyart": "img/manga_series_keyart/1117-HB_201409GN01_brick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1745, "manga_imprint_id": 2, "title": "Honey Blood", "synopsis": "When a girl at her school is attacked by what seems to be a vampire, high school student Hinata Sorazono refuses to believe that vampires even exist. But then she meets her new neighbor, Junya Tokinaga, the author of an incredibly popular vampire romance novel\u2026 Could it be that Junya\u2019s actually a vampire\u2014and worse yet, the culprit?!", "tagline": "Is Hinata\u2019s mysterious neighbor actually a vampire?! ", "rating": "tp", "vanityurl": "honey-blood", "copyright": "MITSUAJI BLOOD \u00a9 2009 Miko MITSUKI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1680709545, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5850-SeriesHeaders_HoneyBlood_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/344-SeriesThumbnailsManga_HNB_400x320.jpg", "label": null, "recommended_series_ids": "101,164,305,15,350,357,501", "latest_author": "Miko Mitsuki", "title_sort": "honey blood"}}, {"manga_series": {"id": 349, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 349, "device_id": 4, "keyart": "img/manga_series_keyart/1129-CWO14269_NovBrick_KissRosePrincess_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1750, "manga_imprint_id": 2, "title": "Kiss of the Rose Princess", "synopsis": "Anise Yamamoto has been told that if she ever removes the rose choker given to her by her father, a terrible punishment will befall her. Unfortunately she loses that choker when a bat-like being falls from the sky and hits her. Anise is granted four cards representing four knights whom she can summon with a kiss. But now that she has these gorgeous men at her beck and call, what exactly is her quest?!", "tagline": "Anise is granted four cards representing four gorgeous knights whom she can summon with a kiss. ", "rating": "t", "vanityurl": "kiss-of-the-rose-princess", "copyright": "KISS OF ROSE PRINCESS \u00a9Aya SHOUOTO", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1665175084, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5438-Tier03_SeriesHeader_KRP_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/345-SeriesThumbnailsManga_KissRose_400x320.jpg", "label": null, "recommended_series_ids": "392,25,302,243", "latest_author": "Aya Shouoto", "title_sort": "kiss of the rose princess"}}, {"manga_series": {"id": 350, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 350, "device_id": 4, "keyart": "img/manga_series_header/350-SeriesHeadersManga_VKFleetingDreams_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 478, "manga_imprint_id": 2, "title": "Vampire Knight: Fleeting Dreams", "synopsis": "Cross Academy is attended by two groups of students: the Day Class and the Night Class. At twilight, when the students of the Day Class return to their dorm, they cross paths with the Night Class on their way to school. Yuki Cross and Zero Kiryu are the Guardians of the school, protecting the Day Class from the Academy's dark secret: the Night Class is full of vampires!", "tagline": "Meet your knights in shining darkness in this fan-favorite series about eternal love. ", "rating": "tp", "vanityurl": "vampire-knight-fleeting-dreams", "copyright": "Vampire Knight Frail No Yume \u00a9 Matsuri Hino & Ayuna Fujisaki 2013/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/350-SeriesHeadersManga_VKFleetingDreams_2000x800.jpg", "link_img": "img/manga_series_link_img/350-th-SeriesThumbnailsManga_VKFleetingDreams_400x320.jpg", "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1646436600, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/350-SeriesHeadersManga_VKFleetingDreams_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/350-th-SeriesThumbnailsManga_VKFleetingDreams_400x320.jpg", "label": null, "recommended_series_ids": "24,188,392,25,442", "latest_author": "Ayuno Fujisaki, Created by Matsuri Hino", "title_sort": "vampire knight: fleeting dreams"}}, {"manga_series": {"id": 351, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 351, "device_id": 4, "keyart": "img/manga_series_keyart/1137-CWO14269_NovSeriesBricks_ChibiAirmail_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1756, "manga_imprint_id": 8, "title": "Chibi Vampire Airmail", "synopsis": "Return to the world of Chibi Vampire in this special collection of short stories!", "tagline": "", "rating": "tp", "vanityurl": "chibi-vampire-airmail", "copyright": "KARIN airmail  Kagesaki Yuna Tanpensyu \u00a9 2009 YUNA KAGESAKI", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1650491554, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1137-CWO14269_NovSeriesBricks_ChibiAirmail_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/602-VIZSelect_Thumb_ChibiVampire_400x320.jpg", "label": null, "recommended_series_ids": "389,308,78,86,15,350,357,501", "latest_author": "Yuna Kagesaki", "title_sort": "chibi vampire airmail"}}, {"manga_series": {"id": 352, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 352, "device_id": 4, "keyart": "img/manga_series_keyart/1141-CWO14269_Zone00_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1941, "manga_imprint_id": 8, "title": "ZONE-00", "synopsis": "From the artist of Trinity Blood comes a dark, suspensful tale in which two centuries-old enemies fight together to save humanity!", "tagline": "", "rating": "tp", "vanityurl": "zone-00", "copyright": "ZONE -00 \u00a9 Kiyo QJO", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1631233006, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1141-CWO14269_Zone00_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/620-VIZSelect_Thumb_Zone00_400x320.jpg", "label": null, "recommended_series_ids": "389,433,402,20", "latest_author": "Kiyo QJO", "title_sort": "zone-00"}}, {"manga_series": {"id": 353, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 353, "device_id": 4, "keyart": "img/manga_series_keyart/1145-CWO14269_NovBrick_MouryouKiden_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1943, "manga_imprint_id": 8, "title": "Mouryou Kiden: Legend of the Nymph", "synopsis": "Originally a member of CLAMP, the world's bestselling manga studio, Tamayo Akiyama delivers and unforgettable fantasy adventure!", "tagline": "", "rating": "t", "vanityurl": "mouryou-kiden", "copyright": "MOURYOUKIDEN \u00a9 TAMAYO AKIYAMA ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1628719522, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1145-CWO14269_NovBrick_MouryouKiden_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/621-VIZSelect_Thumb_MouryouKiden_400x320.jpg", "label": null, "recommended_series_ids": "333,363,453,424", "latest_author": "Tamayo Akiyama", "title_sort": "mouryou kiden: legend of the nymph"}}, {"manga_series": {"id": 355, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 355, "device_id": 4, "keyart": "img/manga_series_keyart/1149-DecSeriesBricks_Yukarism_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1770, "manga_imprint_id": 2, "title": "Yukarism", "synopsis": "Yukari Kobayakawa, an accomplished author at the age of 17, writes with amazingly accurate details about historical Japan. As it turns out, he has the ability to slip into his past life in the Edo period\u2014as a beautiful, renowned courtesan named Yumurasaki!", "tagline": "", "rating": "t", "vanityurl": "yukarism", "copyright": "Yukarism \u00a9 Chika Shiomi 2011/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1629238375, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5906-SeriesHeaders_Yukarism_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/349-SeriesThumbnailsManga_Yukarism_400x320.jpg", "label": null, "recommended_series_ids": "101,188,183,184", "latest_author": "Chika Shiomi", "title_sort": "yukarism"}}, {"manga_series": {"id": 356, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 356, "device_id": 4, "keyart": "img/manga_series_keyart/1153-DecSeriesBricks_Assassination_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1776, "manga_imprint_id": 5, "title": "Assassination Classroom", "synopsis": "Ever caught yourself screaming, \"I could just kill that teacher\"?\r\n\r\nWhat would it take to justify such antisocial behavior and weeks of detention? Especially if he's the best teacher you've ever had? Giving you an \"F\" on a quiz? Mispronouncing your name during roll call...again? How about blowing up the moon and threatening to do the same to Mother Earth\u2014unless you take him out first?! Plus a reward of a cool 100 million from the Ministry of Defense!\r\n\r\nOkay, now that you're committed... How are you going to pull this off? What does your pathetic class of misfits have in their arsenal to combat Teach's alien technology, bizarre powers and...tentacles?!", "tagline": "It\u2019s a pathetic class of misfits versus their teacher\u2019s alien technology, bizarre powers and\u2026tentacles?!", "rating": "tp", "vanityurl": "assassination-classroom", "copyright": "ANSATSU KYOSHITSU \u00a9 2012 by Yusei Matsui/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1671133737, "has_gns": true, "num_gns": 21, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5342-SeriesHeaders_Tier01_ASC_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/350-SeriesThumbnails_ASC__400x320.jpg", "label": null, "recommended_series_ids": "738,580,540,79,78,739,632,750", "latest_author": "Yusei Matsui", "title_sort": "assassination classroom"}}, {"manga_series": {"id": 359, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 359, "device_id": 4, "keyart": "img/manga_series_keyart/1165-DecSeriesBricks_SgtFrog_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1956, "manga_imprint_id": 8, "title": "Sgt. Frog", "synopsis": "Sgt. Keroro, commanding officer of Planet Keron's invasion force, has a problem.", "tagline": "", "rating": "t", "vanityurl": "sgt-frog", "copyright": "KERORO GUNSO \u00a9 Mine YOSHIZAKI 1999", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1630105888, "has_gns": true, "num_gns": 20, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1165-DecSeriesBricks_SgtFrog_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/624-VIZSelect_Thumb_SgtFrog_400x320.jpg", "label": null, "recommended_series_ids": "372,329,378,387", "latest_author": "Mine Yoshizaki", "title_sort": "sgt. frog"}}, {"manga_series": {"id": 360, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 360, "device_id": 4, "keyart": "img/manga_series_keyart/1169-DecBricks_HandsOff_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1954, "manga_imprint_id": 8, "title": "Hands Off! ", "synopsis": "Known throughout the manga world, veteran manga-ka Kasane Katsumoto has delivered a close-to-home fantasy filled with action, intrigue and the gentle touch of boys!", "tagline": "", "rating": "t", "vanityurl": "hands-off", "copyright": "SONOTE WO DOKERO \u00a9 KASANE KATSUMOTO 1998", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1652393726, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1169-DecBricks_HandsOff_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/623-VIZSelect_Thumb_HandsOff_400x320.jpg", "label": null, "recommended_series_ids": "336,320,284", "latest_author": "Kasane Katsumoto", "title_sort": "hands off! "}}, {"manga_series": {"id": 361, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 361, "device_id": 4, "keyart": "img/manga_series_keyart/1173-JanuaryBricks_MeteorPrince_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1888, "manga_imprint_id": 2, "title": "Meteor Prince", "synopsis": "Strange accidents always seem to happen around Hako Natsuno\u2014so much so that she\u2019s been dubbed the \u201cQueen of Bad Luck.\u201d It\u2019s hardly surprising then that a naked alien prince falls from the sky to tell her that out of all the girls in the universe, he\u2019s come to Earth to mate with her. Does this mean Hako\u2019s luck has changed, or\u2026?", "tagline": "An alien prince falls from the sky and wants to marry Hako\u2014a girl with the worst luck ever?!", "rating": "t", "vanityurl": "meteor-prince", "copyright": "Otome to Meteo \u00a9 Meca Tanaka 2013/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1665693225, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5847-SeriesHeaders_MeteorPrince_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/357-SeriesThumbnailsManga_MEP_v2_400x320.jpg", "label": null, "recommended_series_ids": "84,349,13,295", "latest_author": "Meca Tanaka", "title_sort": "meteor prince"}}, {"manga_series": {"id": 362, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 362, "device_id": 4, "keyart": "img/manga_series_keyart/1177-JanuaryBricks_Jaco_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1698, "manga_imprint_id": 1, "title": "Jaco the Galactic Patrolman", "synopsis": "Akira Toriyama, manga legend and creator of Dragon Ball Z, is back with the quirky comedy Jaco the Galactic Patrolman! Retired scientist Omori lives alone on a deserted island while continuing his research into time-travel. His quiet life is interrupted when galactic patrolman Jaco crash-lands and decided to move in with him. Can Jaco get along with the old man long enough to save the earth from a dangerous threat? Includes a special bonus chapter introducing Dragon Ball Z hero Goku's parents!", "tagline": "Join wacky space patrolman Jaco as he tries to keep the Earth safe.", "rating": "a", "vanityurl": "jaco-galactic-patrolman", "copyright": "JACO THE GALACTIC PATROLMAN \u00a9 2013 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5731-Header_JACO_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/333-SeriesThumbnailsManga_JACO_400x320.jpg", "label": null, "recommended_series_ids": "283,132,10,466,235", "latest_author": "Akira Toriyama", "title_sort": "jaco the galactic patrolman"}}, {"manga_series": {"id": 363, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 363, "device_id": 4, "keyart": "img/manga_series_keyart/1181-JanuaryBricks_Shirahime_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1963, "manga_imprint_id": 8, "title": "Shirahime-Syo", "synopsis": "Legends say that when it snows, it is because the snow princess is crying. From CLAMP, creators of Chobits and Cardcaptor Sakura, comes a collection of five tragic tales, all connected by the bond of snow.", "tagline": "", "rating": "t", "vanityurl": "shirahime-syo", "copyright": "Shirahime-Syo \u00a9 CLAMP\uff0fKADOKAWA \u00a9 CLAMP\u30fbShigatsuTsuitachi CO.,LTD. 2001", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1654236107, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1181-JanuaryBricks_Shirahime_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/625-VIZSelect_Thumb_ShirahimeSho_400x320.jpg", "label": null, "recommended_series_ids": "370,382,353,367,294", "latest_author": "CLAMP", "title_sort": "shirahime-syo"}}, {"manga_series": {"id": 364, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 364, "device_id": 4, "keyart": "img/manga_series_keyart/1185-JanuaryBricks_Duklyon_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1965, "manga_imprint_id": 8, "title": "Duklyon: Clamp School Defenders", "synopsis": "In a crisis, a team of justice appears from nowhere. People call them Duklyon, the Clamp School Defenders!", "tagline": "", "rating": "t", "vanityurl": "duklyon", "copyright": "GAKUEN TOKKEI DUKLYON \u00a9 CLAMP\uff0fKADOKAWA \u00a9 CLAMP\u30fbShigatsuTsuitachi CO.,LTD. 2001", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1651698590, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1185-JanuaryBricks_Duklyon_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/626-VIZSelect_Thumb_Duklyon_400x320.jpg", "label": null, "recommended_series_ids": "410,432,373,440,294", "latest_author": "CLAMP", "title_sort": "duklyon: clamp school defenders"}}, {"manga_series": {"id": 365, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 365, "device_id": 4, "keyart": "img/manga_series_keyart/1189-JanuaryBricks_TheThird_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1967, "manga_imprint_id": 8, "title": "The Third", "synopsis": "The prequel to the action-packed anime takes us to a time before Honoka is known as the formidable but graceful Sword Dancer: to the beginning of her quest to save the world, to a time when she scarcely understands the powers with which she has been blessed...", "tagline": "", "rating": "tp", "vanityurl": "the-third", "copyright": "THE THIRD -SABAKU NO HOSHI NO APPRENTICE GIRL \u00a9 2006 RYO HOSHINO, NAO GOTO  \u00a9 2006 ARIKO ITOU", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1628634110, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1189-JanuaryBricks_TheThird_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/627-VIZSelect_Thumb_TheThird_400x320.jpg", "label": null, "recommended_series_ids": "383,425,372,377,402", "latest_author": "Story by Ryo Hoshino, Art by Ariko Itou", "title_sort": "third"}}, {"manga_series": {"id": 366, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 366, "device_id": 4, "keyart": "img/manga_series_keyart/1193-DecBricks_Mikansei_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1952, "manga_imprint_id": 8, "title": "Mikansei No. 1", "synopsis": "You know what they say: If the century fits, then...travel back in time to become a pop-singing sensation!", "tagline": "", "rating": "t", "vanityurl": "mikansei", "copyright": "MIKANSEI NO.1 \u00a9 Majiko! 2005", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1665694658, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1193-DecBricks_Mikansei_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/622-VIZSelect_Thumb_Mikansei_400x320.jpg", "label": null, "recommended_series_ids": "420,267,17,330", "latest_author": "Majiko!", "title_sort": "mikansei no. 1"}}, {"manga_series": {"id": 367, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 367, "device_id": 4, "keyart": "img/manga_series_keyart/1197-OneILove_FebBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2024, "manga_imprint_id": 8, "title": "The One I Love", "synopsis": "Combining CLAMP's legendary storytelling, color artwork and elegant prose, The One I Love provides insight into the creators' intimate lives and passions.", "tagline": "", "rating": "t", "vanityurl": "the-one-i-love", "copyright": "WATASHI NO SUKINA HITO \u00a9 CLAMP\uff0fKADOKAWA CLAMP\u30fbShigatsuTsuitachi CO.,LTD. 1999", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1665768473, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1197-OneILove_FebBrick_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/653-VIZSelect_Thumb_TheOneILove_400x320.jpg", "label": null, "recommended_series_ids": "137,436,335,294", "latest_author": "CLAMP", "title_sort": "one i love"}}, {"manga_series": {"id": 369, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 369, "device_id": 4, "keyart": "img/manga_series_keyart/1205-SomedaysDreamers_FebBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2010, "manga_imprint_id": 8, "title": "Someday's Dreamers", "synopsis": "In this coming of age filled with genuine imagination and a passionate sense of awe, follow Yume as she learns that the true magic in life can take place right inside her own heart. ", "tagline": "", "rating": "t", "vanityurl": "somedays-dreamers", "copyright": "MAHOUTSUKAI NI TAISETSU NA KOTO \u00a9 2002 NORIE YAMADA/KUMICHI YOSHIZUKI \u00a92002 Norie YAMADA\u30fbDAIEI/PNDTK/TV Asahi", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1631654061, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1205-SomedaysDreamers_FebBrick_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/647-VIZSelect_Thumb_SomedayDreamers_400x320.jpg", "label": null, "recommended_series_ids": "321,415,157,182", "latest_author": "Story by Norie Yamada, Art by Kumichi Yoshizuki", "title_sort": "someday's dreamers"}}, {"manga_series": {"id": 370, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 370, "device_id": 4, "keyart": "img/manga_series_keyart/1209-CWO15014_CallingYou_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1973, "manga_imprint_id": 8, "title": "Calling You", "synopsis": "Setsuri Tsuzuki, creator of Broken Angels, and Otsuichi, author of the Pop Fiction novel Calling You, have crafted a beautifully rendered collection of stories that will haunt you long after the last page is turned.  ", "tagline": "", "rating": "t", "vanityurl": "calling-you", "copyright": "KIMI NI SHIKA KIKOENAI CALLING YOU  Volume 1 \u00a9 Setsuri TSUZUKI / OTSUICHI 2003", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1669791780, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1209-CWO15014_CallingYou_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/629-VIZSelect_Thumb_CallingYou_400x320.jpg", "label": null, "recommended_series_ids": "379,403,363,369,374", "latest_author": "Story by Otsuichi, Art by Setsuri Tsuzuki", "title_sort": "calling you"}}, {"manga_series": {"id": 371, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 371, "device_id": 4, "keyart": "img/manga_series_keyart/1213-CWO15014_TokyoGhoul_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1918, "manga_imprint_id": null, "title": "Tokyo Ghoul", "synopsis": "Ghouls live among us, the same as normal people in every way\u2014except their craving for human flesh.\r\n\r\nKen Kaneki is an ordinary college student until a violent encounter turns him into the first half-human half-ghoul hybrid. Trapped between two worlds, he must survive Ghoul turf wars, learn more about Ghoul society and master his new powers.", "tagline": "Ghouls live among us, the same as normal people in every way\u2014except for their craving for human flesh.", "rating": "tp", "vanityurl": "tokyo-ghoul", "copyright": "TOKYO GHOUL \u00a9 2011 by Sui Ishida/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1703105269, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5319-SeriesHeaders_TKG_2000x800_REV_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/528-SeriesThumb_TKG_400x320.png", "label": null, "recommended_series_ids": "580,763,9,722,730,451,471,519", "latest_author": "Sui Ishida", "title_sort": "tokyo ghoul"}}, {"manga_series": {"id": 372, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 372, "device_id": 4, "keyart": "img/manga_series_keyart/1217-CWO15014_GirlsBravo_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1977, "manga_imprint_id": 8, "title": "Girls Bravo", "synopsis": "Boy meets girl. Boy breaks out in hives. Boy stumbles onto alien planet full of girls...", "tagline": "", "rating": "tp", "vanityurl": "girls-bravo", "copyright": "GIRLS BRAVO \u00a9 MARIO KANEDA 2001", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1652392131, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1217-CWO15014_GirlsBravo_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/631-VIZSelect_Thumb_GirlsBravo_400x320.jpg", "label": null, "recommended_series_ids": "409,329,180,217,437,492", "latest_author": "Mario Kaneda", "title_sort": "girls bravo"}}, {"manga_series": {"id": 373, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 373, "device_id": 4, "keyart": "img/manga_series_keyart/1221-CWO15014_Ratman_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1998, "manga_imprint_id": 8, "title": "Ratman", "synopsis": "What's a shrimpy otaku to do when his dreams come true in ways he never expected?", "tagline": "", "rating": "tp", "vanityurl": "ratman", "copyright": "RATMAN \u00a9 Sekihiko INUI 2007", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1666194346, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1221-CWO15014_Ratman_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/641-VIZSelect_Thumb_Ratman_400x320.jpg", "label": null, "recommended_series_ids": "364,313,249,391,359", "latest_author": "Sekihiko Inui", "title_sort": "ratman"}}, {"manga_series": {"id": 374, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 374, "device_id": 4, "keyart": "img/manga_series_keyart/1225-CWO15014_DreamersSpellbound_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2010, "manga_imprint_id": 8, "title": "Someday's Dreamers: Spellbound", "synopsis": "In the new world of Someday's Dreamers, love is brewing, and sometimes true love can't wait forever...", "tagline": "", "rating": "t", "vanityurl": "somedays-dreamers-spellbound", "copyright": "MAHOUTSUKAI NI TAISETSUNA KOTO TAIYOU TO KAZE NO SAKAMICHI \u00a9 NORIE YAMADA/KUMICHI YOSHIZUKI 2004", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1654237638, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1225-CWO15014_DreamersSpellbound_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/647-VIZSelect_Thumb_SomedayDreamers_400x320.jpg", "label": null, "recommended_series_ids": "321,415,157,182", "latest_author": "Story by Norie Yamada, Art by Kumichi Yoshizuki", "title_sort": "someday's dreamers: spellbound"}}, {"manga_series": {"id": 376, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 376, "device_id": 4, "keyart": "img/manga_series_header/376-SeriesHeaders_JoJoPart02_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": 5, "title": "JoJo's Bizarre Adventure: Part 2--Battle Tendency", "synopsis": "JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles. A multigenerational tale of the heroic Joestar family and their never-ending battle against evil!  ", "tagline": "The terror of the Pillar Men is unleashed! Can Joseph Joestar quell this evil?", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-two", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by Hirohiko Araki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/376-SeriesHeaders_JoJoPart02_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1232-SeriesThumbnailsManga_JoJoPart02_400x320.jpg", "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1699998923, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/376-SeriesHeaders_JoJoPart02_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1232-SeriesThumbnailsManga_JoJoPart02_400x320.jpg", "label": null, "recommended_series_ids": "22,10,339,469,596,753", "latest_author": "Hirohiko Araki", "title_sort": "jojo's bizarre adventure: part 2--battle tendency"}}, {"manga_series": {"id": 377, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 377, "device_id": 4, "keyart": "img/manga_series_keyart/1237-CWO15014_Grenadier_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1982, "manga_imprint_id": 8, "title": "Grenadier ", "synopsis": "Join Rushuna the blonde gunslinger as she roams the world trying to make it a better place-- though trouble seems to follow her wherever she goes!", "tagline": "", "rating": "tp", "vanityurl": "grenadier", "copyright": "GRENADIER \u00a9 Sousuke KAISE 2003", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1628801200, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1237-CWO15014_Grenadier_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/633-VIZSelect_Thumb_Grenadier_400x320.jpg", "label": null, "recommended_series_ids": "240,378,396,365", "latest_author": "Sousuke Kaise", "title_sort": "grenadier "}}, {"manga_series": {"id": 378, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 378, "device_id": 4, "keyart": "img/manga_series_keyart/1241-CWO15014_RedHotChili_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2002, "manga_imprint_id": 8, "title": "Red Hot Chili Samurai", "synopsis": "Samurai Kokaku is ready to take a bite out of crime--but not before biting a spicy pepper first!", "tagline": "", "rating": "tp", "vanityurl": "red-hot-chili-samurai", "copyright": "KOKAKUTORIMONOCHO \u00a9 Yoshitsugu KATAGIRI 2007", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1628789377, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1241-CWO15014_RedHotChili_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/643-VIZSelect_Thumb_RedHotChili_400x320.jpg", "label": null, "recommended_series_ids": "377,396,359,365", "latest_author": "Yoshitsugu Katagiri", "title_sort": "red hot chili samurai"}}, {"manga_series": {"id": 379, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 379, "device_id": 4, "keyart": "img/manga_series_keyart/1245-CWO15096_MaySeriesBricks_Flower_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1975, "manga_imprint_id": 8, "title": "Flower of the Deep Sleep", "synopsis": "Yuuki has the power to dream of the future, but with such a gift comes a great burden. Can she manipulate what's about to happen? And, more importantly, should she?", "tagline": "", "rating": "t", "vanityurl": "flower-of-the-deep-sleep", "copyright": "THE FLOWER OF THE DEEP SLEEP \u00a9 YUANA KAZUMI 2003", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1652384684, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1245-CWO15096_MaySeriesBricks_Flower_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/630-VIZSelect_Thumb_FlowerDeepSleep_400x320.jpg", "label": null, "recommended_series_ids": "370,394,342,369,374", "latest_author": "Yuana Kazumi", "title_sort": "flower of the deep sleep"}}, {"manga_series": {"id": 382, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 382, "device_id": 4, "keyart": "img/manga_series_keyart/1257-CWO15096_MaySeriesBricks_GlassWings_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1979, "manga_imprint_id": 8, "title": "Glass Wings", "synopsis": "Fragile souls and tragic fates collide in these haunting, gothic stories...", "tagline": "", "rating": "t", "vanityurl": "glass-wings", "copyright": "HANEGARASU NO KIMI \u00a9 MISUZU ASAOKA 2003", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1629849024, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1257-CWO15096_MaySeriesBricks_GlassWings_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/632-VIZSelect_Thumb_GlassWings_400x320.jpg", "label": null, "recommended_series_ids": "206,160,172,416,363", "latest_author": "Misuzu Asaoka", "title_sort": "glass wings"}}, {"manga_series": {"id": 383, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 383, "device_id": 4, "keyart": "img/manga_series_keyart/1261-CWO15096_MaySeriesBricks_Eureka7_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1785, "manga_imprint_id": 8, "title": "Eureka Seven", "synopsis": "When a large LFO falls from the sky onto lifter Renton Thurston's little planet, the strange female pilot Eureka and Renton are about to embark on a journey that will change everything.", "tagline": "", "rating": "t", "vanityurl": "psalms-of-planet-eureka-seven", "copyright": "Psalms of Planets Eureka Seven \u00a9 Jinsei KATAOKA 2005 \u00a9Kazuma KONDOU 2005 \u00a92005 BONES/Project EUREKA\u30fbMBS", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1629138598, "has_gns": true, "num_gns": 6, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1261-CWO15096_MaySeriesBricks_Eureka7_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/607-VIZSelect_Thumb_Eureka7_400x320.jpg", "label": null, "recommended_series_ids": "300,314,113,178,365", "latest_author": "Story by Jinsei Kataoka, Art by Kazuma Kondou", "title_sort": "eureka seven"}}, {"manga_series": {"id": 385, "updated_at": "2023-05-10T13:21:50.000-07:00", "manga_series_common_id": 385, "device_id": 4, "keyart": "img/manga_series_keyart/1269-CWO15150_SeriesBricks_SoCute_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1901, "manga_imprint_id": 2, "title": "So Cute It Hurts!!", "synopsis": "The Kobayashi twins, Mego and Mitsuru, were named after historical figures, but only Mego has grown up with a taste for history. So when Mitsuru is in danger of losing his weekends to extra history classes, he convinces his sister to swap clothes with him and ace his tests! After all, how hard can it be for them to play each other?", "tagline": "The Kobayashi twins discover that cross-dressing as each other leads to trouble and true love!", "rating": "t", "vanityurl": "so-cute-it-hurts", "copyright": "KOBAYASHI GA KAWAISUGITE TSURAI!! \u00a9 2012 Go IKEYAMADA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1683750110, "has_gns": true, "num_gns": 11, "has_chapters": true, "num_chapters": 55, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 55, "chapter_last_num": 55, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5437-Tier03_SeriesHeader_SCH_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/869-SeriesThumbnailsManga_SCH_400x320.jpg", "label": null, "recommended_series_ids": "725,168,600,234,541,139", "latest_author": "Go Ikeyamada", "title_sort": "so cute it hurts!!"}}, {"manga_series": {"id": 388, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 388, "device_id": 4, "keyart": "img/manga_series_keyart/1281-CWO15150_SeriesBricks_MetamoKiss_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1996, "manga_imprint_id": 8, "title": "Metamo Kiss", "synopsis": "Kohamaru comes from a peculiar family--each member can switch bodies with his or her soul mate! His parents can switch bodies, and his aunt, oddly enough, can switch with her cat! Now, it's Kohamaru's turn...", "tagline": "", "rating": "t", "vanityurl": "metamo-kiss", "copyright": "METAMO KISS \u00a9 Sora OMOTE 2004", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1665693205, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1281-CWO15150_SeriesBricks_MetamoKiss_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/640-VIZSelect_Thumb_Metamo_400x320.jpg", "label": null, "recommended_series_ids": "308,372,336,329", "latest_author": "Sora Omote", "title_sort": "metamo kiss"}}, {"manga_series": {"id": 389, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 389, "device_id": 4, "keyart": "img/manga_series_keyart/1285-CWO15150_SeriesBricks_AiON_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1971, "manga_imprint_id": 8, "title": "AiON", "synopsis": "Mermaids and mind-controlling parasites wage war of supernaturally epic proportions in this much anticipated series from the creator of Chibi Vampire!", "tagline": "", "rating": "tp", "vanityurl": "aion", "copyright": "HEKIKAI NO AION \u00a9 2009 YUNA KAGESAKI", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1649885400, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1285-CWO15150_SeriesBricks_AiON_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/628-SeriesThumbnailsSelect_AiON_400x320.jpg", "label": null, "recommended_series_ids": "310,351,308,407,412", "latest_author": "Yuna Kagesaki", "title_sort": "aion"}}, {"manga_series": {"id": 392, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 392, "device_id": 4, "keyart": "img/manga_series_keyart/1297-CWO15179_SeriesBricks_Demonprince_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1895, "manga_imprint_id": 2, "title": "The Demon Prince of Momochi House", "synopsis": "On her sixteenth birthday, orphan Himari Momochi inherits her ancestral estate that she\u2019s never seen. Momochi House exists on the barrier between the human and spiritual realms, and Himari is meant to act as guardian between the two worlds. But on the day she moves in, she finds three handsome squatters already living in the house, and one seems to have already taken over her role!", "tagline": "Himari Momochi inherits a mysterious house that comes with its own gorgeous demon guardian.", "rating": "t", "vanityurl": "the-demon-prince-of-momochi-hous", "copyright": "MOMOCHISANCHI NO AYAKASHI OUJI \u00a9 Aya SHOUOTO 2013", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1650494191, "has_gns": true, "num_gns": 16, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5439-Tier03_SeriesHeader_DMP_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/358-SeriesThumbnailsManga_MomochiHouse_400x320.jpg", "label": null, "recommended_series_ids": "188,472,243,15,350,357,501", "latest_author": "Aya Shouoto", "title_sort": "demon prince of momochi house"}}, {"manga_series": {"id": 393, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 393, "device_id": 4, "keyart": "img/manga_series_keyart/1301-CWO15179_SeriesBricks_TSE_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1960, "manga_imprint_id": 1, "title": "Twin Star Exorcists", "synopsis": "Rokuro is from a family of exorcists, but he\u2019d rather be a singer, a soccer player or anything but an exorcist! He\u2019s forced to own up to his own incredible potential when new arrival Benio stirs his competitive spirit. But their rivalry gets a twist when they earn the prestigious title of \u201cTwin Star Exorcists\u201d\u2014 two supreme fighters fated to marry and birth the ultimate spiritual warrior! ", "tagline": "Exorcists Rokuro and Benio unleash serious supernatural action while purifying the world of monsters.", "rating": "t", "vanityurl": "twin-star-exorcists", "copyright": "SOUSEI NO ONMYOJI \u00a9 2013 by Yoshiaki Sukeno /SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706816786, "has_gns": true, "num_gns": 29, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5396-SeriesHeader_Tier02_TSE_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/365-SeriesThumbnailsManga_TSE_v2_400x320.jpg", "label": null, "recommended_series_ids": "8,105,466,732,312,332,324,286", "latest_author": "Yoshiaki Sukeno", "title_sort": "twin star exorcists"}}, {"manga_series": {"id": 394, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 394, "device_id": 4, "keyart": "img/manga_series_keyart/1305-CWO15179_SeriesBricks_Haruhana_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1990, "manga_imprint_id": 8, "title": "Haru Hana: The Complete Collection", "synopsis": "Look out Tokyo -- here comes Hana Yamada! As long as she has her special green tea, no amount of allergic reactions to cute boys can stop her from fully enjoying her new life...can they? Hana's not so sure, after an string of events leads her to work in a relaxation room run by two very attractive young men.  ", "tagline": "", "rating": "t", "vanityurl": "haru-hana", "copyright": "HARUHANA Volume 1, 2 & 3 \u00a9 Yuana KAZUMI 2004, 2004, 2005", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1630104129, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1305-CWO15179_SeriesBricks_Haruhana_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/637-VIZSelect_Thumb_HaruHana_400x320.jpg", "label": null, "recommended_series_ids": "379,415,342,385", "latest_author": "Yuana Kazumi", "title_sort": "haru hana: the complete collection"}}, {"manga_series": {"id": 395, "updated_at": "2023-09-07T12:57:20.000-07:00", "manga_series_common_id": 395, "device_id": 4, "keyart": "img/manga_series_header/395-Header_TuxedoGin_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 865, "manga_imprint_id": 6, "title": "Tuxedo Gin", "synopsis": "Teenage boxer Ginji died and got himself reincarnated as a penguin to stay close to Minako, the girl of his dreams. Now, \"Gin-chan\" must perish of natural causes to be restored to his former self...", "tagline": "Ginji has got himself reincarnated as a penguin to stay near his dream girl.", "rating": "tp", "vanityurl": "tuxedo-gin", "copyright": "TAKISHIIDO GIN \u00a9 1997 Tokihiko MATSUURA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/395-Header_TuxedoGin_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1694116640, "has_gns": true, "num_gns": 15, "has_chapters": true, "num_chapters": 136, "num_chapters_free": 3, "chapter_latest_pub_date": 1693501170, "chapter_latest_num": 136, "chapter_last_num": 136, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/395-Header_TuxedoGin_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/170-SeriesThumbnailsManga_TuxedoGin_400x320.jpg", "label": null, "recommended_series_ids": "218,765,303,190,231", "latest_author": "Tokihiko Matsuura", "title_sort": "tuxedo gin"}}, {"manga_series": {"id": 396, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 396, "device_id": 4, "keyart": "img/manga_series_keyart/1313-CWO15179_SeriesBricks_SamuraiGirl_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2006, "manga_imprint_id": 8, "title": "Samurai Girl Real Bout High School", "synopsis": "Daimon High's champion martial artist Ryoko Mitsurugi is in for a shock when Shizuma Kusanagi transfers from Kansai. Can she maintain her elite status when even her teachers are encouraging the rivalry?", "tagline": "", "rating": "t", "vanityurl": "samurai-girl-real-bout-high-scho", "copyright": "KOKAKUTORIMONOCHO \u00a9 Yoshitsugu KATAGIRI 2007", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1630627513, "has_gns": true, "num_gns": 6, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1313-CWO15179_SeriesBricks_SamuraiGirl_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/645-VIZSelect_Thumb_RealboutHS_400x320.jpg", "label": null, "recommended_series_ids": "377,303,378,185", "latest_author": "Story by Reiji Saiga, Art by Sora Inoue", "title_sort": "samurai girl real bout high school"}}, {"manga_series": {"id": 398, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 398, "device_id": 4, "keyart": "img/manga_series_keyart/1321-CWO15248_SeriesBricks_Maidsama_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1946, "manga_imprint_id": 2, "title": "Maid-sama! (2-in-1 Edition)", "synopsis": "As if being class president of a predominantly male high school isn\u2019t hard enough, Misaki Ayuzawa has a major secret\u2014she works at a maid caf\u00e9 after school! How is she supposed to keep her image of being ultrasmart, strong and overachieving intact once school heartthrob Takumi Usui discovers her double life?!", "tagline": "A 2-in-1 edition of the romantic-comedy series where a student council president secretly works at a maid caf\u00e9!", "rating": "t", "vanityurl": "maid-sama", "copyright": "Kaicho wa Maid Sama! \u00a9 Hiro Fujiwara 2006/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694801741, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5462-Tier04_SeriesHeaders_MDS_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/363-SeriesThumbnailsManga_MSama_400x320.jpg", "label": null, "recommended_series_ids": "16,13,185,385", "latest_author": "Hiro Fujiwara", "title_sort": "maid-sama! (2-in-1 edition)"}}, {"manga_series": {"id": 399, "updated_at": "2023-12-18T11:02:21.000-08:00", "manga_series_common_id": 399, "device_id": 4, "keyart": "img/manga_series_keyart/1325-CWO15248_SeriesBricks_MAC_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia", "synopsis": "What would the world be like if 80 percent of the population manifested superpowers called \u201cQuirks\u201d? Heroes and villains would be battling it out everywhere! Being a hero would mean learning to use your power, but where would you go to study? The Hero Academy of course! But what would you do if you were one of the 20 percent who were born Quirkless?", "tagline": " Midoriya inherits the superpower of the world\u2019s greatest hero, but greatness won\u2019t come easy.", "rating": "t", "vanityurl": "my-hero-academia", "copyright": "BOKU NO HERO ACADEMIA \u00a9 2014 by Kohei Horikoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663435, "has_gns": true, "num_gns": 37, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5344-SeriesHeaders_MHA_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/371-SeriesThumbnails_MHA__400x320.jpg", "label": null, "recommended_series_ids": "175,763,138,724,793,520,249,739", "latest_author": "Kohei Horikoshi", "title_sort": "my hero academia"}}, {"manga_series": {"id": 400, "updated_at": "2023-10-26T11:02:14.000-07:00", "manga_series_common_id": 400, "device_id": 4, "keyart": "img/manga_series_header/400-Header_TokyoBoysGirls_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 582, "manga_imprint_id": 2, "title": "Tokyo Boys & Girls", "synopsis": "Mimori Kosaka's dream comes true when she's accepted to the Meidai Attached High School and gets to wear their super-fashionable uniform! She's excited about having a fun freshman year of high school, but things don't turn out as effortlessly as she had hoped.", "tagline": "The explosive stories of five high schoolers entangled in love, deceit, and bitter revenge. ", "rating": "t", "vanityurl": "tokyo-boys-and-girls", "copyright": "TOKYO SHONEN SHOJO \u00a9 1995 Miki AIHARA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/400-Header_TokyoBoysGirls_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1698343334, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 3, "chapter_latest_pub_date": 1698339570, "chapter_latest_num": 18, "chapter_last_num": 18, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/400-Header_TokyoBoysGirls_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/59-SeriesThumbnailsManga_TokyoBoyGirl_400x320.jpg", "label": null, "recommended_series_ids": "136,152,135,600,685,190", "latest_author": "Miki Aihara", "title_sort": "tokyo boys & girls"}}, {"manga_series": {"id": 401, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 401, "device_id": 4, "keyart": "img/manga_series_keyart/1333-CWO15248_SeriesBricks_Ultraman_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1961, "manga_imprint_id": 4, "title": "Ultraman", "synopsis": "Decades ago, a being known as the Giant of Light joined together with Shin Hayata of the Science Special Search Party to save Earth from an invasion of terrifying monsters called Kaiju. Now, many years later, those dark days are fading into memory, and the world is at peace. But in the shadows a new threat is growing, a danger that can only be faced by a new kind of hero\u2014a new kind of ULTRAMAN\u2026", "tagline": "It\u2019s time for a new generation of Ultraman!", "rating": "t", "vanityurl": "ultraman", "copyright": "\u00a9 2012 Eiichi Shimizu and Tomohiro Shimoguchi / TSUBURAYA PROD. Originally published by HERO'S INC.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1706905343, "has_gns": true, "num_gns": 19, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5386-SeriesHeader_Tier02_ULT_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/366-SeriesThumbnailsManga_UTM_v2_400x320.jpg", "label": null, "recommended_series_ids": "307,318,249,391,909", "latest_author": "Story and Art by Eiichi Shimizu & Tomohiro Shimoguchi", "title_sort": "ultraman"}}, {"manga_series": {"id": 404, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 404, "device_id": 4, "keyart": "img/manga_series_keyart/1345-CWO15248_SeriesBricks_HandsOff_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1954, "manga_imprint_id": 8, "title": "Hands Off!: Don't Call Us Angels", "synopsis": "More action-packed paranormal adventure from the bestselling Hands Off! universe!", "tagline": "", "rating": "t", "vanityurl": "hands-off-dont-call-us-angels", "copyright": "ORETACHI WO TENSHI TO YOBUNA \u00a9 Kasane KATSUMOTO 2001", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1652393726, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1345-CWO15248_SeriesBricks_HandsOff_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/623-VIZSelect_Thumb_HandsOff_400x320.jpg", "label": null, "recommended_series_ids": "336,320,284", "latest_author": "Kasane Katsumoto", "title_sort": "hands off!: don't call us angels"}}, {"manga_series": {"id": 406, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 406, "device_id": 4, "keyart": "img/manga_series_keyart/1353-CWO15272_SeriesBricks_Komomo_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1948, "manga_imprint_id": 2, "title": "Komomo Confiserie", "synopsis": "As a little girl, Komomo Ninomiya delighted in picking on Natsu Azumi, the son of her family\u2019s pastry chef. Ten years later, when the family fortune is lost and she has no place to live, Komomo encounters Natsu again in her hour of need. Now that Natsu is a master pastry chef in his own right, he\u2019ll help Komomo\u2014but only if she works for him at his new confiserie!", "tagline": "Pampered but now destitute, Komomo finds true friendship and love while working in a pastry shop.", "rating": "t", "vanityurl": "komomo-confiserie", "copyright": "Komomo Confiserie \u00a9 Maki Minami 2013/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1665528024, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5550-Tier05_SeriesHeaders_Komomo_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/364-Tier05_SeriesThumbnails_KOM_400x320.jpg", "label": null, "recommended_series_ids": "436,398,185,282", "latest_author": "Maki Minami", "title_sort": "komomo confiserie"}}, {"manga_series": {"id": 407, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 407, "device_id": 4, "keyart": "img/manga_series_keyart/1357-CWO15272_SeriesBricks_Rizelmine_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2000, "manga_imprint_id": 8, "title": "Rizelmine", "synopsis": "15-year-old Iwaki Tomonori is in for a surprise when he returns home one day to find the government has married him to the first genetically engineered human, Rizelmine!", "tagline": "", "rating": "t", "vanityurl": "rizelmine", "copyright": "RIZELMINE \u00a9 YUKIRU SUGISAKI 2002", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1683148769, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1357-CWO15272_SeriesBricks_Rizelmine_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/642-VIZSelect_Thumb_RizelMine_400x320.jpg", "label": null, "recommended_series_ids": "308,409,320,330", "latest_author": "Yukiru Sugisaki", "title_sort": "rizelmine"}}, {"manga_series": {"id": 409, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 409, "device_id": 4, "keyart": "img/manga_series_keyart/1365-CWO15272_SeriesBricks_GuardianHearts_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1984, "manga_imprint_id": 8, "title": "Guardian Hearts", "synopsis": "Beautiful girls with superpowers...all in love with you! What more could a guy want?!", "tagline": "", "rating": "tp", "vanityurl": "guardian-hearts", "copyright": "GUARDIAN HEARTS \u00a9 SAE AMATSU 2001", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1652392970, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1365-CWO15272_SeriesBricks_GuardianHearts_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/634-VIZSelect_Thumb_GuardianHearts_400x320.jpg", "label": null, "recommended_series_ids": "372,239,407,412", "latest_author": "Sae Amatsu", "title_sort": "guardian hearts"}}, {"manga_series": {"id": 410, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 410, "device_id": 4, "keyart": "img/manga_series_keyart/1369-CWO15272_SeriesBricks_ClampSchool_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2020, "manga_imprint_id": 8, "title": "Clamp School Detectives", "synopsis": "Welcome to the CLAMP School, Japan's most prestigious place of learning--home to prodigies, wunderkinds and young geniuses of every make and model. In a world where the average student is smarter than the teachers, how then can the top students challenge their intellects? Why by creating a detective service, of course!", "tagline": "", "rating": "a", "vanityurl": "clamp-school-detectives", "copyright": "CLAMP GAKUEN TANTEIDAN \u00a9 CLAMP\uff0fKADOKAWA \u00a9 CLAMP\u30fbShigatsuTsuitachi CO.,LTD. 1992", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1628800934, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1369-CWO15272_SeriesBricks_ClampSchool_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/651-VIZSelect_Thumb_ClampSchoolDetectives_400x320.jpg", "label": null, "recommended_series_ids": "218,364,320,432,294", "latest_author": "CLAMP", "title_sort": "clamp school detectives"}}, {"manga_series": {"id": 411, "updated_at": "2023-05-10T13:21:50.000-07:00", "manga_series_common_id": 411, "device_id": 4, "keyart": "img/manga_series_keyart/1373-CWO15272_SeriesBricks_ChocolateCosmos_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2082, "manga_imprint_id": 8, "title": "Chocolate Cosmos", "synopsis": "Fifteen-year old Sayuki Sakurai is a girly-girl at heart, but her sharp tongue and equally sharp gaze send most boys running! Determined to nab herself a hot summer romance during the holidays, Sayuki visits the beach and meets a cute guy who cheers her up after an awkward situation. She returns to school with confidence and as luck would have it... that cute guy is her Home Economics teacher! Dodging what love and life have in store, Sayuki is in for one roller coaster of a school year...", "tagline": "", "rating": "t", "vanityurl": "chocolate-cosmos", "copyright": "CHOCOLATE COSMOS \u00a9 2007 by Nana Haruta/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1683750110, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1373-CWO15272_SeriesBricks_ChocolateCosmos_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/657-VIZSelect_Thumb_ChocolateCosmos_400x320.jpg", "label": null, "recommended_series_ids": "606,836,157,182", "latest_author": "Nana Haruta", "title_sort": "chocolate cosmos"}}, {"manga_series": {"id": 412, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 412, "device_id": 4, "keyart": "img/manga_series_keyart/1377-CWO15272_SeriesBricks_SaberJ_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2004, "manga_imprint_id": 8, "title": "Saber Marionette J", "synopsis": "On a world without women, the surviving men have fashioned curvaceous androids in the female form. Called Marionettes, they are built for one purpose--to obey man's every whim...except one.", "tagline": "", "rating": "tp", "vanityurl": "saber-marionette-j", "copyright": "SABER MARIONETTE\u2018J\u2019 Volume 1 \u00a9 SATORU AKAHORI\uff65TERUKKI HANADA\u30fbYUMISUKE KOTOYOSHI 1997", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1666307129, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1377-CWO15272_SeriesBricks_SaberJ_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/644-VIZSelect_Thumb_SaberMarionette_400x320.jpg", "label": null, "recommended_series_ids": "389,372,409,438", "latest_author": "Story by Satoru Akahori, Art by Yumisuke Kotoyoshi", "title_sort": "saber marionette j"}}, {"manga_series": {"id": 413, "updated_at": "2023-09-07T17:08:00.000-07:00", "manga_series_common_id": 413, "device_id": 4, "keyart": "img/manga_series_keyart/1381-CWO15320_SeriesBricks_QQSweeper_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2032, "manga_imprint_id": 2, "title": "QQ Sweeper", "synopsis": "Kyutaro Horikita, the tall, dark and handsome cleaning expert of Kurokado High, is about to meet a sleeping maiden at the school: transfer student Fumi Nishioka! Fumi\u2019s going to learn how to rid the school of nasty spirits with Kyutaro\u2019s help, and her heart will surprisingly be \u201ccleansed\u201d too\u2026!", "tagline": "Supernatural cleaners Kyutaro and Fumi can literally sweep trouble away\u2026but can Kyutaro sweep Fumi off her feet?", "rating": "t", "vanityurl": "qq-sweeper", "copyright": "QQ SWEEPER \u00a9 2014 Kyousuke MOTOMI /SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694131680, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 15, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 15, "chapter_last_num": 15, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5453-Tier04_SeriesHeaders_QQS_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/368-SeriesThumbnailsManga_QQS_400x320.jpg", "label": null, "recommended_series_ids": "100,101,782,146,102,600,848,505", "latest_author": "Kyousuke Motomi", "title_sort": "qq sweeper"}}, {"manga_series": {"id": 414, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 414, "device_id": 4, "keyart": "img/manga_series_header/414-SeriesHeaders_Naruto7thHokage_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": 1, "title": "Naruto: The Seventh Hokage and the Scarlet Spring", "synopsis": "Naruto was a young shinobi with an incorrigible knack for mischief. Then he channeled that energy into learning amazing ninja techniques and saving the world! Now Naruto has achieved his dream of becoming the greatest ninja in the village, and his face sits atop the Hokage monument. But new troubles may be bubbling up in the shinobi world\u2026", "tagline": "The post-series spin-off to the world\u2019s most popular ninja comic!", "rating": "t", "vanityurl": "naruto-the-seventh-hokage-and-th", "copyright": "NARUTO GAIDEN -NANADAIME HOKAGE TO AKAIRO NO HANATSUZUKI- \u00a9 2015 by Masashi Kishimoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/414-SeriesHeaders_Naruto7thHokage_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1384-SeriesThumbnailsManga_Naruto7thHokage_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706810341, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/414-SeriesHeaders_Naruto7thHokage_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1384-SeriesThumbnailsManga_Naruto7thHokage_400x320.jpg", "label": null, "recommended_series_ids": "461,496,10,724,399,520,1,467", "latest_author": "Masashi Kishimoto", "title_sort": "naruto: the seventh hokage and the scarlet spring"}}, {"manga_series": {"id": 415, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 415, "device_id": 4, "keyart": "img/manga_series_keyart/1389-CWO15320_SeriesBricks_HibikisMagic_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1992, "manga_imprint_id": 8, "title": "Hibiki's Magic", "synopsis": "From the artist behind the .hack manga comes an inspiring tale about a young magician's assistant named Hibiki who's only magical talent seems to be making a perfect pot of tea...", "tagline": "", "rating": "t", "vanityurl": "hibikis-magic", "copyright": "HIBIKI NO MAHOU Volume 1 \u00a9 Jun MAEDA 2005  \u00a9 Rei IDUMI 2005", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1631653792, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1389-CWO15320_SeriesBricks_HibikisMagic_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/638-VIZSelect_Thumb_Hibiki_400x320.jpg", "label": null, "recommended_series_ids": "394,569,369,374,330", "latest_author": "Story by Jun Maeda, Art by Rei Idumi", "title_sort": "hibiki's magic"}}, {"manga_series": {"id": 416, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 416, "device_id": 4, "keyart": "img/manga_series_keyart/1393-CWO15320_SeriesBricks_HanakoTerror_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1986, "manga_imprint_id": 8, "title": "Hanako and the Terror of Allegory", "synopsis": "From Sakae Esuno, creator of Future Diary, comes a look into Japanese Horror that takes readers on a journey into the terror that lurks inside us all. ", "tagline": "", "rating": "tp", "vanityurl": "hanako-and-the-terror-of-allegor", "copyright": "HANAKO TO GUUWA NO TELLER Volume 1 \u00a9 Sakae ESUNO 2004", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1667372448, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1393-CWO15320_SeriesBricks_HanakoTerror_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/635-VIZSelect_Thumb_Hanako_400x320.jpg", "label": null, "recommended_series_ids": "218,314,403,284", "latest_author": "Sakae Esuno", "title_sort": "hanako and the terror of allegory"}}, {"manga_series": {"id": 420, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 420, "device_id": 4, "keyart": "img/manga_series_keyart/1409-CWO15366_SeriesBricks_IdolDreams_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2034, "manga_imprint_id": 2, "title": "Idol Dreams", "synopsis": "At age 31, office worker Chikage Deguchi feels she missed her chances at love and success. When word gets out that she\u2019s a virgin, Chikage is humiliated and wishes she could turn back time to when she was still young and popular. She takes an experimental drug that changes her appearance back to when she was 15. Now Chikage is determined to pursue everything she missed out on all those years ago\u2014including becoming a star!", "tagline": "Chikage Deguchi, age 31, reverts her appearance back to age 15 to pursue love and success as an idol!", "rating": "t", "vanityurl": "idol-dreams", "copyright": "Thirty One Idream \u00a9 Arina Tanemura 2014/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1629743823, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5461-Tier04_SeriesHeaders_IDD_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/369-SeriesThumbnailsManga_IDD_400x320.jpg", "label": null, "recommended_series_ids": "447,136,149,169", "latest_author": "Arina Tanemura", "title_sort": "idol dreams"}}, {"manga_series": {"id": 421, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 421, "device_id": 4, "keyart": "img/manga_series_header/421-SeriesHeaders_NarutoNovels_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": 1, "title": "Naruto Novels", "synopsis": "A new series of prose novels, straight from the worldwide Naruto franchise. Naruto\u2019s allies and enemies take center stage in these fast-paced adventures, with each volume focusing on a particular clanmate, ally, team\u2026or villain.", "tagline": "A new series of prose novels, straight from the worldwide Naruto franchise.", "rating": "t", "vanityurl": "naruto-novels", "copyright": "NARUTO KAKASHI-HIDEN HYOTEN NO IKAZUCHI \u00a9 2015 by Masashi Kishimoto, Akira Higashiyama/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/421-SeriesHeaders_NarutoNovels_2000x800.jpg", "link_img": "img/manga_series_link_img/1412-SeriesThumbnailsManga_NarutoNovels_400x320.jpg", "subscription_type": null, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706810341, "has_gns": true, "num_gns": 12, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/421-SeriesHeaders_NarutoNovels_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1412-SeriesThumbnailsManga_NarutoNovels_400x320.jpg", "label": null, "recommended_series_ids": "461,922,496,648,938,10,80,299,446,466,566,399,520,571,591,611,748,868,599", "latest_author": "By Shin Towada, Original Concept by Masashi Kishimoto", "title_sort": "naruto novels"}}, {"manga_series": {"id": 422, "updated_at": "2024-01-25T10:00:00.000-08:00", "manga_series_common_id": 422, "device_id": 4, "keyart": "img/manga_series_keyart/1417-CWO15366_SeriesBricks_YokaiWatch_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2039, "manga_imprint_id": null, "title": "Yo-kai Watch", "synopsis": "Nate Adams is just an average kid until the mysterious Whisper gives him a device that allows him to see what others cannot, Yo-kai of all shapes and forms! Now, armed with the Yo-kai Watch, Nate, Whisper and their new invisible friends embark on an all-new supernatural adventure!\r\n \r\nYo-kai, inspired by the yokai of Japanese folklore, are not ghosts or monsters or creatures. They can\u2019t be seen by the human eye, but they\u2019re everywhere, and whether they're phantoms or everyday objects discovering their higher purpose, Yo-kai personalities are distinctly humanlike!", "tagline": "Join Nate as he befriends the Yo-kai of the hit video game Yo-kai Watch!", "rating": "a", "vanityurl": "yo-kai-watch", "copyright": "YO-KAI WATCH \u00a9 2013 Noriyuki KONISHI/SHOGAKUKAN \u00a9LEVEL-5 Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706205643, "has_gns": true, "num_gns": 22, "has_chapters": true, "num_chapters": 256, "num_chapters_free": 3, "chapter_latest_pub_date": 1706205570, "chapter_latest_num": 251, "chapter_last_num": 251, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5351-SeriesHeaders_Tier01_YKW_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/370-SeriesThumbManga_YOK_v2_400x320.jpg", "label": null, "recommended_series_ids": "218,214,478,141", "latest_author": "Story and Art by Noriyuki Konishi", "title_sort": "yo-kai watch"}}, {"manga_series": {"id": 423, "updated_at": "2023-10-30T16:58:54.000-07:00", "manga_series_common_id": 423, "device_id": 4, "keyart": "img/manga_series_keyart/1421-CWO15386_SeriesBricks_CrownofThorns_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2128, "manga_imprint_id": 2, "title": "Crown of Thorns", "synopsis": "Nobara Fukami has always been able to see things other people can\u2019t, and it\u2019s made her a total outcast. She doesn\u2019t care that that everyone in high school thinks she\u2019s a weird loser, but even Nobara considers it creepy when one of her phantoms starts to talk to her!", "tagline": "When the voice in your head is standing right in front of you.", "rating": "t", "vanityurl": "crown-of-thorns", "copyright": "IBARA NO KANMURI \u00a9 2013 by Yoko Kamio \u2022 Leaf Production/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1698710334, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 12, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 12, "chapter_last_num": 12, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5920-SeriesHeaders_CrownOfThorns_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/658-SeriesThumbnailsManga_CrownLove_v2_400x320.jpg", "label": null, "recommended_series_ids": "562,101,777,156,709,785,776,182", "latest_author": "Yoko Kamio", "title_sort": "crown of thorns"}}, {"manga_series": {"id": 424, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 424, "device_id": 4, "keyart": "img/manga_series_keyart/1425-CWO15366_SeriesBricks_Zyword_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2018, "manga_imprint_id": 8, "title": "Zyword", "synopsis": "Tamayo Akiyama, a former member of CLAMP, has crafted a fantasy adventure that will leave readers spellbound!", "tagline": "", "rating": "t", "vanityurl": "zyword", "copyright": "ZYWORD \u00a9 TAMAYO AKIYAMA 2000", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1631233096, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1425-CWO15366_SeriesBricks_Zyword_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/650-VIZSelect_Thumb_Zyword_400x320.jpg", "label": null, "recommended_series_ids": "379,205,333,353", "latest_author": "Tamayo Akiyama", "title_sort": "zyword"}}, {"manga_series": {"id": 425, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 425, "device_id": 4, "keyart": "img/manga_series_keyart/1429-CWO15366_SeriesBricks_EurekaSevenGL_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1785, "manga_imprint_id": 8, "title": "Eureka Seven Gravity Boys & Lifting Girl", "synopsis": "This is the story of young Ruri and Sumner, the characters from Playstation 2's Eureka seveN video games, now in their own original manga!", "tagline": "", "rating": "tp", "vanityurl": "eureka-seven-gravity-boys-and-li", "copyright": "EUREKA SEVEN GRAVITY BOYS & LIFTING GIRL \u00a9 Miki KIZUKI 2005  \u00a9 2005 BONES / Project EUREKA\u30fbMBS \u00a9BANDAI 2005", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1629138598, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1429-CWO15366_SeriesBricks_EurekaSevenGL_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/607-VIZSelect_Thumb_Eureka7_400x320.jpg", "label": null, "recommended_series_ids": "300,314,113,178,365", "latest_author": "Manga by Miki Kazuki, Script by Dai Sato, Original Concept by BONES", "title_sort": "eureka seven gravity boys & lifting girl"}}, {"manga_series": {"id": 430, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 430, "device_id": 4, "keyart": "img/manga_series_keyart/1449-CWO15407_SeriesBricks_BloodyMary_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2050, "manga_imprint_id": 2, "title": "Bloody Mary", "synopsis": "\u201cBloody\u201d Mary, a vampire with a death wish, has spent the past 400 years chasing down a modern-day exorcist named Maria who is thought to have inherited \u201cThe Blood of Maria\u201d and is the only one who can kill Mary. To Mary\u2019s dismay, Maria doesn\u2019t know how to kill vampires. Desperate to die, Mary agrees to become Maria\u2019s bodyguard until Maria can find a way to kill him.", "tagline": "A blood-pounding tale of an unorthodox alliance between a vampire and an exorcist!", "rating": "t", "vanityurl": "bloody-mary", "copyright": "BLOODY MARY \u00a9 Akaza SAMAMIYA 2014", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1649955340, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5449-Tier04_SeriesHeaders_BLM_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/372-SeriesThumbnailsManga_BLM_400x320.jpg", "label": null, "recommended_series_ids": "559,305,15,350,357,501", "latest_author": "Akaza Samamiya", "title_sort": "bloody mary"}}, {"manga_series": {"id": 432, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 432, "device_id": 4, "keyart": "img/manga_series_keyart/1457-CWO15407_SeriesBricks_ManofManyFaces_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2022, "manga_imprint_id": 8, "title": "Man of Many Faces", "synopsis": "\"Please Come, 20 Faces!\"\r\n\r\nDiscover the adventures of Akira Ijyuin, the infamous thief of the CLAMP school and member of the CLAMP School Detectives", "tagline": "", "rating": "a", "vanityurl": "man-of-many-faces", "copyright": "20 MENSO NI ONEGAI!! \u00a9 CLAMP\uff0fKADOKAWA \u00a9 CLAMP\u30fbShigatsuTsuitachi CO.,LTD. 2001", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1629485275, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1457-CWO15407_SeriesBricks_ManofManyFaces_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/652-VIZSelect_Thumb_ManManyFaces_400x320.jpg", "label": null, "recommended_series_ids": "410,364,308,333,367,302,335,294", "latest_author": "CLAMP", "title_sort": "man of many faces"}}, {"manga_series": {"id": 433, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 433, "device_id": 4, "keyart": "img/manga_series_keyart/1461-CWO15407_SeriesBricks_Judas_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2028, "manga_imprint_id": 8, "title": "JUDAS", "synopsis": "Salvation may be at hand, but now is the time for prayer...", "tagline": "", "rating": "tp", "vanityurl": "judas", "copyright": "JUDAS \u00a9 Suu MINAZUKI 2004", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1667372452, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1461-CWO15407_SeriesBricks_Judas_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/655-VIZSelect_Thumb_Judas_400x320.jpg", "label": null, "recommended_series_ids": "166,402,315,352", "latest_author": "Suu Minazuki", "title_sort": "judas"}}, {"manga_series": {"id": 434, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 434, "device_id": 4, "keyart": "img/manga_series_header/434-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 551, "manga_imprint_id": null, "title": "Boys Over Flowers Season 2", "synopsis": "A sequel to Boy's Over Flowers? It's true! Twelve years after the conclusion of the original smash-hit rom-com series, Yoko Kamio brings us Boys Over Flowers Season 2! Set two years after the members of the legendary \"F4\" clique have graduated from Eitoku Academy, a new group called the \"Correct 5\" is around to rule the school. It's just too bad for student Oto Edogawa that she doesn't fit into their mold... And what's better than the continuation of one of the most beloved manga series ever? The serialized chapters now in graphic novel form! ", "tagline": "Yoko Kamio's sequel to the hit series Boys Over Flowers.  ", "rating": "t", "vanityurl": "boys-over-flowers-season-2-manga", "copyright": "HANA-NOCHI HARE \u00a9 2015 by Yoko Kamio \u2022 Leaf Production/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/434-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1464-SeriesThumbnailsManga_BoF02_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 15, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/434-SeriesHeaders_BoysOverFlowers02_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1464-SeriesThumbnailsManga_BoF02_400x320.jpg", "label": null, "recommended_series_ids": "546,815,818,862,875,304,168,169,180,217,183,157,492", "latest_author": "Yoko Kamio", "title_sort": "boys over flowers season 2"}}, {"manga_series": {"id": 435, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 435, "device_id": 4, "keyart": "img/manga_series_keyart/1469-CWO15407_SeriesBricks_Momogumi_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2030, "manga_imprint_id": 8, "title": "Momogumi Plus Senki", "synopsis": "The deadline is his eighteenth birthday, or young student Yuuki's reincarnated destiny will overtake him!", "tagline": "", "rating": "t", "vanityurl": "momogumi-plus-senki", "copyright": "MOMOGUMI PLUS SENKI \u00a9 Eri SAKONDO 2006", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 8, "imprint_title": "Viz Select", "mod_ts": 1665695409, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1469-CWO15407_SeriesBricks_Momogumi_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/656-VIZSelect_Thumb_Momogumi_400x320.jpg", "label": null, "recommended_series_ids": "313,438,336,214", "latest_author": "Eri Sakondo", "title_sort": "momogumi plus senki"}}, {"manga_series": {"id": 436, "updated_at": "2023-09-07T17:27:10.000-07:00", "manga_series_common_id": 436, "device_id": 4, "keyart": "img/manga_series_keyart/1473-CWO15429_SeriesBricks_HoneySoSweet_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2056, "manga_imprint_id": 2, "title": "Honey So Sweet", "synopsis": "Little did Nao Kogure realize back in middle school that when she left an umbrella and a box of bandages in the rain for injured delinquent Taiga Onise that she would meet him again in high school. Nao wants nothing to do with the gruff and frightening Taiga, but he suddenly presents her with a huge bouquet of flowers and asks her to date him\u2014with marriage in mind! Is Taiga really so scary, or is he a sweetheart in disguise?", "tagline": "A charming high school romance between a tender hooligan and an orphaned girl.", "rating": "t", "vanityurl": "honey-so-sweet", "copyright": "HONEY \u00a9 2012 by Amu Meguro/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694132830, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 40, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 40, "chapter_last_num": 40, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5339-SeriesHeaders_Tier01_HSS_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/373-SeriesThumb_HoneySoSweet_400x320.jpg", "label": null, "recommended_series_ids": "135,600,848,234,316,190,182", "latest_author": "Amu Meguro", "title_sort": "honey so sweet"}}, {"manga_series": {"id": 439, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 439, "device_id": 4, "keyart": "img/manga_series_keyart/1485-CWO15439_SeriesBricks_BehindtheScenes_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2071, "manga_imprint_id": 2, "title": "Behind the Scenes!!", "synopsis": "Ranmaru Kurisu comes from a family of hardy, rough-and-tumble fisherfolk and he sticks out at home like a delicate, artistic sore thumb. It\u2019s given him a raging inferiority complex and a permanently pessimistic outlook. Now that he\u2019s in college, he\u2019s hoping to find a sense of belonging. But after a whole life of being left out, does he even know how to fit in?!", "tagline": "Ranmaru has spent his whole life not fitting in\u2014until the oddballs of the Art Squad adopt him. ", "rating": "t", "vanityurl": "behind-the-scenes", "copyright": "Urakata!! \u00a9 Bisco Hatori 2015/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1649889804, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5343-SeriesHeaders_Tier01_BTS_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/829-SeriesThumbManga_BHS_400x320.jpg", "label": null, "recommended_series_ids": "305,21,16,13", "latest_author": "Bisco Hatori", "title_sort": "behind the scenes!!"}}, {"manga_series": {"id": 440, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 440, "device_id": 4, "keyart": "img/manga_series_keyart/1489-CWO15439_SeriesBricks_SchoolJudgement_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1969, "manga_imprint_id": 1, "title": "School Judgment", "synopsis": "At Tenbin Elementary, there is only one way to settle a dispute\u2014in a court of law! All quarrels bypass the teachers and are settled by some of the best lawyers in the country\u2026who also happen to be elementary school students.", "tagline": "At this school, there\u2019s only one way to settle a dispute\u2014in a court of law!", "rating": "t", "vanityurl": "school-judgment-gakkyu-hotei", "copyright": "GAKKYU HOTEI \u00a9 2014 by Nobuaki Enoki, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5347-SeriesHeaders_Tier01_SchoolJ_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/833-SeriesThumbManga_SchoolJ_400x320.jpg", "label": null, "recommended_series_ids": "7,9,79", "latest_author": "Story by Nobuaki Enoki, Art by Takeshi Obata", "title_sort": "school judgment"}}, {"manga_series": {"id": 442, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 442, "device_id": 4, "keyart": "img/manga_series_keyart/1497-CWO16002_SeriesBricks_ShurikenPleats_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2073, "manga_imprint_id": 2, "title": "Shuriken and Pleats", "synopsis": "When the master she has sworn to protect is killed, Mikage Kirio, a skilled ninja, travels to Japan to start a new, peaceful life for herself. But as soon as she arrives, she finds herself fighting to protect the life of Mahito Wakashimatsu, a man who is under attack by a band of ninja. From that time on, Mikage is drawn deeper into the machinations of his powerful family.", "tagline": "The creator of Vampire Knight returns with a tale about a female ninja in modern Tokyo.", "rating": "t", "vanityurl": "shuriken-and-pleats", "copyright": "Shuriken to Pleats \u00a9 Matsuri Hino 2015/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1584147260, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5465-Tier04_SeriesHeaders_SPleats_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/377-SeriesThumbnailsManga_SKP_400x320.jpg", "label": null, "recommended_series_ids": "193,25,231,275,15,350,357,501", "latest_author": "Matsuri Hino", "title_sort": "shuriken and pleats"}}, {"manga_series": {"id": 445, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 445, "device_id": 4, "keyart": "img/manga_series_keyart/1509-CWO16060_SeriesBricks_Heiress_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2094, "manga_imprint_id": 2, "title": "The Heiress and the Chauffeur", "synopsis": "At an all-girls school during the Taisho era of Japan, rumors swirl that heiress Sayaka Yoshimura is having a forbidden love affair with her chauffeur, Shinobu Narutaki! Sayaka scoffs at the rumors, but could a romance between master and servant actually be brewing?", "tagline": "A forbidden romance between a turn-of-the-century heiress and her devoted chauffeur!", "rating": "t", "vanityurl": "the-heiress-and-the-chauffeur", "copyright": "Ojousama no Untenshu \u00a9 Keiko Ishihara 2011/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1652396902, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5348-SeriesHeaders_Tier01_Heiress_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/789-SeriesThumb_HeiressChauffeur_400x320.jpg", "label": null, "recommended_series_ids": "134,190,163,355", "latest_author": "Keiko Ishihara", "title_sort": "heiress and the chauffeur"}}, {"manga_series": {"id": 446, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 446, "device_id": 4, "keyart": "img/manga_series_header/446-SeriesHeaders_DBColorFreeza_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": 1, "title": "Dragon Ball Full Color Freeza Arc", "synopsis": "Akira Toriyama's original, bestselling series now in a full-color version!", "tagline": "Goku and his friends journey to the planet Namek to confront the deadliest enemies Earth has ever seen\u2014in full color! ", "rating": "a", "vanityurl": "dragon-ball-full-color-freeza", "copyright": "DRAGON BALL \u00a9 2013 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/446-SeriesHeaders_DBColorFreeza_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1512-SeriesThumbnailsManga_DBFullColorFreeza_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/446-SeriesHeaders_DBColorFreeza_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1512-SeriesThumbnailsManga_DBFullColorFreeza_400x320.jpg", "label": null, "recommended_series_ids": "461,132,496,466,80,362,467,414", "latest_author": "Akira Toriyama", "title_sort": "dragon ball full color freeza arc"}}, {"manga_series": {"id": 448, "updated_at": "2023-12-28T14:53:46.000-08:00", "manga_series_common_id": 448, "device_id": 4, "keyart": "img/manga_series_keyart/1521-CWO16093_SeriesBricks_BlackClover_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2087, "manga_imprint_id": 1, "title": "Black Clover", "synopsis": "Asta is a young boy who dreams of becoming the greatest mage in the kingdom. Only one problem\u2014he can't use any magic! Luckily for Asta, he receives the incredibly rare five-leaf clover grimoire that gives him the power of anti-magic. Can someone who can't use magic really become the Wizard King? One thing's for sure\u2014Asta will never give up!", "tagline": "In a world of magic, Asta, a boy with anti-magic powers, will do whatever it takes to become the Wizard King!", "rating": "t", "vanityurl": "black-clover", "copyright": "BLACK CLOVER \u00a9 2015 by Yuki Tabata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/448-th-SeriesThumbnailsManga_BLC_chapter_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1707427757, "has_gns": true, "num_gns": 33, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5391-SeriesHeader_Tier02_BLC_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/448-th-SeriesThumbnailsManga_BLC_chapter_400x320.jpg", "label": null, "recommended_series_ids": "8,580,722,842,138,540,694,249", "latest_author": "Y\u016bki Tabata", "title_sort": "black clover"}}, {"manga_series": {"id": 449, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 449, "device_id": 4, "keyart": "img/manga_series_keyart/1525-CWO16111_SeriesBricks_7thGarden_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2126, "manga_imprint_id": 1, "title": "7thGARDEN", "synopsis": "Awyn Gardner will do anything to protect the beautiful mistress of the equally beautiful estate gardens he lovingly tends\u2014even enslave himself to an also beautiful demon bent on world domination! The high-pitched battle is on between powerful angels, sexy demons and innocent people to dominate a world rife with political intrigue\u2026and to win the heart of one hapless human man!", "tagline": "The battle is on between powerful angels and sexy demons!", "rating": "tp", "vanityurl": "7th-garden", "copyright": "7thGARDEN \u00a9 2014 by Mitsu Izumi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5445-Tier03_SeriesHeader_7thG_v3_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/871-SeriesThumbnailsManga_7GR_400x320.jpg", "label": null, "recommended_series_ids": "716,105,722,78,312", "latest_author": "Mitsu Izumi", "title_sort": "7thgarden"}}, {"manga_series": {"id": 450, "updated_at": "2024-02-08T17:16:30.000-08:00", "manga_series_common_id": 450, "device_id": 4, "keyart": "img/manga_series_keyart/1529-CWO16111_SeriesBricks_Haikyuu_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2130, "manga_imprint_id": null, "title": "Haikyu!!", "synopsis": "Ever since he saw the legendary player known as \u201cthe Little Giant\u201d compete at the national volleyball finals, Shoyo Hinata has been aiming to be the best volleyball player ever! Who says you need to be tall to play volleyball when you can jump higher than anyone else?", "tagline": "Shoyo Hinata is out to prove that in volleyball you don\u2019t need to be tall to fly!", "rating": "t", "vanityurl": "haikyu", "copyright": "HAIKYU!! \u00a9 2012 by Haruichi Furudate/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": true, "header_img": null, "link_img": "img/manga_series_link_img/450-th-878-SeriesThumbnailsManga_HKU_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707441390, "has_gns": true, "num_gns": 45, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5440-Tier03_SeriesHeader_HKU_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/450-th-878-SeriesThumbnailsManga_HKU_400x320.jpg", "label": null, "recommended_series_ids": "604,223,647,454,755,798,129,714", "latest_author": "Haruichi Furudate", "title_sort": "haikyu!!"}}, {"manga_series": {"id": 453, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 453, "device_id": 4, "keyart": "img/manga_series_keyart/1541-CWO16185_SeriesBricks_Yona_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2138, "manga_imprint_id": 2, "title": "Yona of the Dawn", "synopsis": "Princess Yona lives an ideal life as the only princess of her kingdom. Doted on by her father, the king, and protected by her faithful guard Hak, she cherishes the time spent with the man she loves, Su-won. But everything changes on her 16th birthday when tragedy strikes her family!", "tagline": "A red-haired princess loses her family and her kingdom\u2014now she must rise and fight for her throne!", "rating": "t", "vanityurl": "yona-of-the-dawn", "copyright": "Akatsuki no Yona \u00a9 Mizuho Kusanagi 2010/ HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1707290326, "has_gns": true, "num_gns": 40, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5467-Tier04_SeriesHeaders_YON_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/902-SeriesThumbnailsManga_YONA_400x320.jpg", "label": null, "recommended_series_ids": "146,89,296,472,595,231,275,585", "latest_author": "Mizuho Kusanagi", "title_sort": "yona of the dawn"}}, {"manga_series": {"id": 454, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 454, "device_id": 4, "keyart": "img/manga_series_keyart/1545-CWO16185_SeriesBricks_kuroko_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2132, "manga_imprint_id": 1, "title": "Kuroko\u2019s Basketball", "synopsis": "Tetsuya Kuroko doesn\u2019t stand out much. In fact, he\u2019s so plain that people hardly ever notice when he\u2019s around. Though he\u2019s just as unremarkable on the basketball court, that\u2019s where his plainness gives him an unexpected edge\u2014one that lets him execute awesome moves without others noticing!", "tagline": "Seirin High\u2019s greatest basketball superstar was the one no one saw coming\u2014the invisible Kuroko!", "rating": "t", "vanityurl": "kurokos-basketball", "copyright": "KUROKO NO BASUKE \u00a9 2008 by Tadatoshi Fujimaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1703066436, "has_gns": true, "num_gns": 15, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5488-Tier04_SeriesHeaders_KRK_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/895-SeriesThumbnailsManga_KUR_400x320.jpg", "label": null, "recommended_series_ids": "223,450,755,798,499,129", "latest_author": "Tadatoshi Fujimaki", "title_sort": "kuroko\u2019s basketball"}}, {"manga_series": {"id": 461, "updated_at": "2023-09-13T13:39:00.000-07:00", "manga_series_common_id": 461, "device_id": 4, "keyart": "img/manga_series_header/461-Header_Boruto_2000x800_v2_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2238, "manga_imprint_id": null, "title": "Boruto: Naruto Next Generations", "synopsis": "Naruto was a young shinobi with an incorrigible knack for mischief. He achieved his dream to become the greatest ninja in his village, and now his face sits atop the Hokage monument. But this is not his story... A new generation of ninja are ready to take the stage, led by Naruto's own son, Boruto!", "tagline": "A new generation of ninja are ready to take the stage!", "rating": "t", "vanityurl": "boruto", "copyright": " BORUTO: NARUTO NEXT GENERATIONS \u00a9 2016 by Masashi Kishimoto, MIkio Ikemoto, Ukyo Kodachi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/461-Header_Boruto_2000x800_v2_wm.jpg", "link_img": "img/manga_series_link_img/1552-WSJ_Boruto_400x320_v2.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1701763747, "has_gns": true, "num_gns": 18, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/461-Header_Boruto_2000x800_v2_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1552-WSJ_Boruto_400x320_v2.jpg", "label": null, "recommended_series_ids": "922,138,1,856,5,599,260", "latest_author": "Creator/Supervisor: Masashi Kishimoto, Art by Mikio Ikemoto", "title_sort": "boruto: naruto next generations"}}, {"manga_series": {"id": 464, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 464, "device_id": 4, "keyart": "img/manga_series_keyart/1565-Emperor_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2226, "manga_imprint_id": 1, "title": "The Emperor and I", "synopsis": "One day something emerges from high school girl Kaho\u2019s refrigerator\u2014an emperor penguin, the largest of all penguins! When this emperor joins the household, fun and wacky antics with family and friends ensue!", "tagline": "A high school girl and her penguin. Enough said...", "rating": "a", "vanityurl": "the-emperor-and-i", "copyright": "EMPEROR TO ISSHO \u00a9 2015 by mato/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/1564-SeriesThumbnailsManga_Penguin_v2_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5812-SeriesHeaders_EmperorAndI_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1564-SeriesThumbnailsManga_Penguin_v2_400x320.jpg", "label": null, "recommended_series_ids": "448,795,717,180", "latest_author": "mato", "title_sort": "emperor and i"}}, {"manga_series": {"id": 465, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 465, "device_id": 4, "keyart": "img/manga_series_header/465-SeriesHeaders_TokyoGhoulJack_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1918, "manga_imprint_id": 1, "title": "Tokyo Ghoul [Jack]", "synopsis": "A prequel to the hit series Tokyo Ghoul featuring the high school adventures of Kisho Arima as a bourgeoning Ghoul investigator!", "tagline": "A prequel to the hit series Tokyo Ghoul!", "rating": "tp", "vanityurl": "tokyo-ghoul-jack", "copyright": "TOKYO GHOUL [JACK] \u00a9 2013 by Sui Ishida/SHUEISHA Inc. ", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/465-SeriesHeaders_TokyoGhoulJack_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1568-SeriesThumbnailsManga_TKGJack_v2_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/465-SeriesHeaders_TokyoGhoulJack_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1568-SeriesThumbnailsManga_TKGJack_v2_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,763,85,79,483,537,579", "latest_author": "Sui Ishida", "title_sort": "tokyo ghoul [jack]"}}, {"manga_series": {"id": 466, "updated_at": "2023-04-03T17:47:22.000-07:00", "manga_series_common_id": 466, "device_id": 4, "keyart": "img/manga_series_header/466-SeriesHeaders_DBSuper_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": null, "title": "Dragon Ball Super", "synopsis": "Ever since Goku became Earth\u2019s greatest hero and gathered the seven Dragon Balls to defeat the evil Boo, his life on Earth has grown a little dull. But new threats loom overhead, and Goku and his friends will have to defend the planet once again in this continuation of Akira Toriyama\u2019s best-selling series, Dragon Ball!", "tagline": "Goku's adventure from the best-selling manga Dragon Ball continues!", "rating": "t", "vanityurl": "dragon-ball-super", "copyright": "DRAGON BALL SUPER \u00a9 2015 by BIRD STUDIO, Toyotarou/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/466-SeriesHeaders_DBSuper_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1572-WSJ_DB_Super_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707206938, "has_gns": true, "num_gns": 20, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/466-SeriesHeaders_DBSuper_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1572-WSJ_DB_Super_400x320.jpg", "label": null, "recommended_series_ids": "446,80,566,138,362,724,694,739", "latest_author": "Original Story by Akira Toriyama, Story and Art by Toyotarou", "title_sort": "dragon ball super"}}, {"manga_series": {"id": 467, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 467, "device_id": 4, "keyart": "img/manga_series_header/467-SeriesHeaders_ChibiSasuke_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 593, "manga_imprint_id": 1, "title": "Naruto: Chibi Sasuke's Sharingan Legend", "synopsis": "Uchiha Sasuke, the brooding loner who will do anything to avenge his clan and kill his older brother\u2026 Yes, this is that story, but with a hilarious twist! In Naruto: Chibi Sasuke\u2019s Sharingan Legend, the characters and story have been flipped on their heads, all for the sake of comedy! With his Taka teammates Suigetsu, Karin and Jugo, Sasuke travels the land and gets into all kinds of wacky adventures. This is a side of Sasuke you\u2019ve never seen before. One bit of advice: do not mock the Uchiha!", "tagline": "A side of Sasuke like you've never seen before. Do not mock the Uchiha!", "rating": "t", "vanityurl": "naruto-chibi-sasukes-sharingan-l", "copyright": "UCHIHA SASUKE NO SHARINGAN DEN \u00a9 2014 by Masashi Kishimoto, Kenji Taira/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/467-SeriesHeaders_ChibiSasuke_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1576-SeriesThumbnailsManga_NARChibi_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1706810341, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/467-SeriesHeaders_ChibiSasuke_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1576-SeriesThumbnailsManga_NARChibi_400x320.jpg", "label": null, "recommended_series_ids": "461,80,724,399,1,856,855,414", "latest_author": "By Kenji Taira, Original Concept by Masashi Kishimoto", "title_sort": "naruto: chibi sasuke's sharingan legend"}}, {"manga_series": {"id": 468, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 468, "device_id": 4, "keyart": "img/manga_series_header/468-SeriesHeaders_TokyoGhoulNovel_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1918, "manga_imprint_id": 4, "title": "Tokyo Ghoul Novels", "synopsis": "Ghouls live among us, the same as normal people in every way\u2014except their craving for human flesh.\r\n\r\nKen Kaneki is an ordinary college student until a violent encounter turns him into the first half-human half-ghoul hybrid. Trapped between two worlds, he must survive Ghoul turf wars, learn more about Ghoul society and master his new powers.", "tagline": "Explore the world of Tokyo Ghoul with these prose fiction spin-offs!", "rating": "t", "vanityurl": "tokyo-ghoul-novels", "copyright": "TOKYO GHOUL-HIBI- \u00a9 2013 by Sui Ishida, Shin Towada/SHUEISHA Inc.,TOKYO GHOUL-KUHAKU- \u00a9 2014 by Sui Ishida, Shin Towada/SHUEISHA Inc.,TOKYO GHOUL-SEKIJITSU- \u00a9 2014 by Sui Ishida, Shin Towada/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/468-SeriesHeaders_TokyoGhoulNovel_2000x800.jpg", "link_img": "img/manga_series_link_img/1580-SeriesThumbnailsManga_TKGNovels_400x320.jpg", "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1668629534, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/468-SeriesHeaders_TokyoGhoulNovel_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1580-SeriesThumbnailsManga_TKGNovels_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,763,85,79,483,537,579", "latest_author": "Novel by Shin Towada, Original Concept by Sui Ishida", "title_sort": "tokyo ghoul novels"}}, {"manga_series": {"id": 469, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 469, "device_id": 4, "keyart": "img/manga_series_header/469-SeriesHeaders_JoJoPart03_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": 5, "title": "JoJo\u2019s Bizarre Adventure: Part 3--Stardust Crusaders", "synopsis": "The legendary Shonen Jump series is now available in deluxe editions featuring color pages and newly drawn cover art! JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles.", "tagline": "Jotaro Kujo\u2019s Star Platinum is the fastest Stand in the world...but can it measure up to Dio?!", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-thr", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by Hirohiko Araki & LUCKY LAND COMMUNICATIONS/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/469-SeriesHeaders_JoJoPart03_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1584-SeriesThumbnailsManga_JoJoPart03_400x320.jpg", "subscription_type": "sj", "imprint_id": 5, "imprint_title": "Shonen Jump Advanced", "mod_ts": 1699998923, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/469-SeriesHeaders_JoJoPart03_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1584-SeriesThumbnailsManga_JoJoPart03_400x320.jpg", "label": null, "recommended_series_ids": "22,10,339,376,596", "latest_author": "Hirohiko Araki", "title_sort": "jojo\u2019s bizarre adventure: part 3--stardust crusaders"}}, {"manga_series": {"id": 470, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 470, "device_id": 4, "keyart": "img/manga_series_keyart/1589-Astra_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2225, "manga_imprint_id": 1, "title": "Astra Lost in Space", "synopsis": "In the year 2063, interstellar space travel has become the norm. What sort of adventure awaits on the new frontier?", "tagline": "Can eight teenagers find their way home from 5,000 light-years away?", "rating": "t", "vanityurl": "astra-lost-in-space", "copyright": "KANATA NO ASTRA \u00a9 2016 by Kenta Shinohara/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/1588-WSJ_Astra_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5806-SeriesHeaders_Astra_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1588-WSJ_Astra_400x320.jpg", "label": null, "recommended_series_ids": "687,466,488,126,599,753,324", "latest_author": "Kenta Shinohara", "title_sort": "astra lost in space"}}, {"manga_series": {"id": 471, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 471, "device_id": 4, "keyart": "img/manga_series_header/471-SeriesHeaders_PromisedNeverland_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2235, "manga_imprint_id": null, "title": "The Promised Neverland", "synopsis": "Life at Grace Field House is good for Emma and her fellow orphans. While the daily studying and exams they have to take are tough, their loving caretaker provides them with delicious food and plenty of playtime. But perhaps not everything is as it seems\u2026", "tagline": "The children of Grace Field House must escape a macabre fate before it\u2019s too late. ", "rating": "tp", "vanityurl": "the-promised-neverland", "copyright": "YAKUSOKU NO NEVERLAND \u00a9 2016 by Kaiu Shirai, Posuka Demizu/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/471-SeriesHeaders_PromisedNeverland_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1592-WSJ_PromisedNeverland_v4_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1691712978, "has_gns": true, "num_gns": 20, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/471-SeriesHeaders_PromisedNeverland_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1592-WSJ_PromisedNeverland_v4_400x320.jpg", "label": null, "recommended_series_ids": "356,703,792,700,730,728,632,519", "latest_author": "Story by Kaiu Shirai, Art by Posuka Demizu", "title_sort": "promised neverland"}}, {"manga_series": {"id": 472, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 472, "device_id": 4, "keyart": "img/manga_series_keyart/1597-CWO16320_ComixologyBricks_KamisamaKiss_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1284, "manga_imprint_id": 2, "title": "Kamisama Kiss", "synopsis": "Nanami Momozono is alone and homeless after her dad skips town to evade his gambling debts and the debt collectors kick her out of her apartment. So when a man she's just saved from a dog offers her his home, she jumps at the opportunity. But it turns out that his place is a shrine, and Nanami has unwittingly taken over his job as a local deity!", "tagline": "When Nanami inherits a shrine, it comes with divine powers and a hot fox spirit!", "rating": "t", "vanityurl": "kamisama-kiss", "copyright": "Kamisama Hajimemashita \u00a9 Julietta Suzuki 2008/HAKUSENSHA,Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1704096031, "has_gns": true, "num_gns": 25, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5431-Tier03_SeriesHeader_KKS_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/254-SeriesThumbnailsManga_KamisamaKiss_400x320.jpg", "label": null, "recommended_series_ids": "101,146,577,21,231,275", "latest_author": "Julietta Suzuki", "title_sort": "kamisama kiss"}}, {"manga_series": {"id": 474, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 474, "device_id": 4, "keyart": "img/manga_series_keyart/1605-CWO16473_ComixologyBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1175, "manga_imprint_id": 4, "title": "All My Darling Daughters", "synopsis": "Fumi Yoshinaga weaves together the disparate lives of Yukiko and her friends in five short stories, exploring the women's various relationships with the skill and elegance she is famous for.", "tagline": "", "rating": "tp", "vanityurl": "all-my-darling-daugthers", "copyright": "Aisubeki Musumetachi \u00a9 Fumi Yoshinaga 2003/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1628719900, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1605-CWO16473_ComixologyBricks_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/223-SeriesThumbnailsManga_AllMyDar_400x320.jpg", "label": null, "recommended_series_ids": "114,473,157,98", "latest_author": "Fumi Yoshinaga", "title_sort": "all my darling daughters"}}, {"manga_series": {"id": 475, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 475, "device_id": 4, "keyart": "img/manga_series_header/475-SeriesHeaders_LoveRush_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2234, "manga_imprint_id": 1, "title": "Love Rush!", "synopsis": "Reiji Hakuba carries the ubermale gene, an unusual gene that causes women to see him as a super stud. It even attracts supernatural girls from other realms who hope to make Reiji their betrothed. But Reiji doesn\u2019t want a harem. He wants the heart of his childhood friend Shizuku, the only girl unaffected by his gene.\r\n\r\nEnter Kokoro Roko Rokoko, cupid princess from the Celestial Realm, who makes it her mission to protect Reiji from the otherworldly cuties out to snag his heart\u2014so she can win it for herself. Will Reiji be able to dodge the unearthly advances of Kokoro and the others long enough to confess his feelings to Shizuku?", "tagline": "Reiji was born with the rare ubermale gene. Now all the girls, human and not, are after him!", "rating": "t", "vanityurl": "love-rush", "copyright": "LOVE RUSH! \u00a9 2016 by Ryohei Yamamoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/475-SeriesHeaders_LoveRush_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1608-WSJ_LoveRush_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/475-SeriesHeaders_LoveRush_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1608-WSJ_LoveRush_400x320.jpg", "label": null, "recommended_series_ids": "470,702,265,722,717,180,492", "latest_author": "Ryohei Yamamoto", "title_sort": "love rush!"}}, {"manga_series": {"id": 477, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 477, "device_id": 4, "keyart": "img/manga_series_header/477-SeriesHeaders_RedSprite_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2236, "manga_imprint_id": 1, "title": "RED SPRITE", "synopsis": "Tatsu Frampt and his friends are quarantined in an orphanage in the militaristic nation of Edenia, believing they suffer from a disease that causes metal to grow in their hands. But an attack on the orphanage reveals the truth: the kids are living batteries.", "tagline": "An electric adventure like no other! Can Tatsu free an entire nation?! ", "rating": "t", "vanityurl": "red-sprite", "copyright": "RED SPRITE \u00a9 2016 by Tomohiro Yagi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/477-SeriesHeaders_RedSprite_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1616-WSJ_RedSprite_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560018, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/477-SeriesHeaders_RedSprite_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1616-WSJ_RedSprite_400x320.jpg", "label": null, "recommended_series_ids": "546,627,399,599,471", "latest_author": "Tomohiro Yagi", "title_sort": "red sprite"}}, {"manga_series": {"id": 478, "updated_at": "2023-06-14T11:07:06.000-07:00", "manga_series_common_id": 478, "device_id": 4, "keyart": "img/manga_series_keyart/1621-CWO16504_ChildrenNowadays_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2207, "manga_imprint_id": 6, "title": "The Children Nowadays", "synopsis": "Kirita is a typical child of the Eighties, equally worried about homework and nuclear war. His precocious friend Takumi can\u2019t figure out why the other kids won\u2019t acknowledge him as their obvious superior. And silent Tsugumu just wants to rock out. Welcome to the secret world of the children nowadays.", "tagline": "A quirky, slice-of-life story as seen through the eyes of a child in 1980\u2019s Japan. ", "rating": "a", "vanityurl": "the-children-nowadays", "copyright": "IMADOKI NO KODOMO \u00a9 2000 Kiriko KUBO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1686766026, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 307, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 307, "chapter_last_num": 307, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5663-childrennowadays_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1344-childrennowadays_400x320.jpg", "label": null, "recommended_series_ids": "218,236,141,422", "latest_author": "Kiriko Kubo", "title_sort": "children nowadays"}}, {"manga_series": {"id": 479, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 479, "device_id": 4, "keyart": "img/manga_series_keyart/1625-CWO16320_ComixologyBricks_FlowerinaStorm_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1177, "manga_imprint_id": 2, "title": "Flower in a Storm", "synopsis": "Riko Kunimi is trying to lead a normal high school life when Ran Tachibana bursts into her classroom carrying a gun and tells her that her life is now his. Ran, the richest, most powerful 17-year-old in Japan, wants her as his wife, and he's not taking no for an answer!", "tagline": "", "rating": "tp", "vanityurl": "flower-in-a-storm", "copyright": "Hana ni Arashi \u00a9 Shigeyoshi Takagi 2008/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1628890400, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5941-SeriesHeaders_FlowerInAStorm_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/224-SeriesThumbnailsManga_FlowerStorm_400x320.jpg", "label": null, "recommended_series_ids": "193,13,185,442", "latest_author": "Shigeyoshi Takagi", "title_sort": "flower in a storm"}}, {"manga_series": {"id": 483, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 483, "device_id": 4, "keyart": "img/manga_series_header/483-RWBY_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2227, "manga_imprint_id": 4, "title": "RWBY", "synopsis": "", "tagline": "Once, humans and beasts coexisted peacefully in the magical world of Remnant. Now they are at fierce odds. ", "rating": "t", "vanityurl": "rwby", "copyright": "RWBY \u00a9 2016 Rooster Teeth Productions, LLC   \u00a9 by Shirow Miwa/SHUEISHA INc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/483-RWBY_wm.jpg", "link_img": "img/manga_series_link_img/1640-noname.jpeg", "subscription_type": "sj", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/483-RWBY_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1640-noname.jpeg", "label": null, "recommended_series_ids": "105,580,851,170,301,312", "latest_author": "Manga by Shirow Miwa, Concept by Rooster Teeth Productions with Monty Oum", "title_sort": "rwby"}}, {"manga_series": {"id": 486, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 486, "device_id": 4, "keyart": "img/manga_series_keyart/1653-CWO17010_ComixologyBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2217, "manga_imprint_id": 2, "title": "Anonymous Noise", "synopsis": "Nino Arisugawa, a girl who loves to sing, experiences her first heart-wrenching goodbye when her beloved childhood friend, Momo, moves away. And after Nino befriends Yuzu, a music composer, she experiences another sad parting! With music as their common ground and only outlet, how will everyone's unrequited loves play out?", "tagline": "Music and longing collide in this ballad of unrequited love!", "rating": "t", "vanityurl": "anonymous-noise", "copyright": "Fukumenkei Noise  \u00a9 Ryoko Fukuyama 2013/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1649886369, "has_gns": true, "num_gns": 18, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5613-Header_AnonymousNoise_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1329-SeriesThumbnailsManga_AnonymousNoise_400x320.jpg", "label": null, "recommended_series_ids": "264,268,267,169,190", "latest_author": "Ryoko Fukuyama", "title_sort": "anonymous noise"}}, {"manga_series": {"id": 488, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 488, "device_id": 4, "keyart": "img/manga_series_keyart/1661-eldlive_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2242, "manga_imprint_id": null, "title": "\u00e9lDLIVE", "synopsis": "Chuta Kokonose is like any other middle school student. He's easily distracted, says things he shouldn't say out loud and accidentally creeped out the prettiest girl in his class--and all of his problems could be avoided if it weren't for the mysterious voice in his head. One day, Inspector Chips of the space police \u00e9lDLIVE appears in his locker and seeks to recruit him. But first, he'll have to pass their entrance test: apprehending a notorious space criminal!", "tagline": "A zany space adventure by the creator of Reborn!!", "rating": "t", "vanityurl": "eldlive", "copyright": "ELDLIVE \u00a9 2013 by Akira Amano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/1660-WSJ_elDLIVE_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 11, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5811-SeriesHeaders_elDLIVE_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1660-WSJ_elDLIVE_400x320.jpg", "label": null, "recommended_series_ids": "175,132,324", "latest_author": "Akira Amano", "title_sort": "eldlive"}}, {"manga_series": {"id": 491, "updated_at": "2023-09-07T17:17:45.000-07:00", "manga_series_common_id": 491, "device_id": 4, "keyart": "img/manga_series_keyart/1673-SeriesBricks_WaterDragon_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2211, "manga_imprint_id": 2, "title": "The Water Dragon\u2019s Bride", "synopsis": "In the blink of an eye, a modern-day girl named Asahi is whisked away from her warm and happy home and stranded in a strange and mysterious world where she meets a water dragon god!", "tagline": "A girl gets whisked away to a strange land where she is sacrificed to a water dragon god!", "rating": "t", "vanityurl": "the-water-dragons-bride", "copyright": "SUIJIN NO HANAYOME \u00a9 2015 Rei TOMA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1694132265, "has_gns": true, "num_gns": 11, "has_chapters": true, "num_chapters": 44, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 44, "chapter_last_num": 44, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5739-Header_WaterDragonBride_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1365-SeriesThumbnailsManga_WaterDragonBride_400x320.jpg", "label": null, "recommended_series_ids": "146,720,103,505,134,231,742", "latest_author": "Rei Toma", "title_sort": "water dragon\u2019s bride"}}, {"manga_series": {"id": 492, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 492, "device_id": 4, "keyart": "img/manga_series_header/492-SeriesHeaders_WeNeverLearn_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2258, "manga_imprint_id": 1, "title": "We Never Learn", "synopsis": "Nariyuki Yuiga comes from an impoverished family, so he\u2019s eager to secure a full scholarship to college before he graduates high school. His principal agrees, with one stipulation\u2014he must tutor the two smartest girls at school and make sure they get into their target colleges!", "tagline": "When studious Nariyuki tutors two supergeniuses who are total dunces in their favorite subjects, he\u2019ll get a crash course in love!", "rating": "t", "vanityurl": "we-never-learn", "copyright": "BOKUTACHI WA BENKYOU GA DEKINAI \u00a9 2017 by Taishi Tsutsui/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/492-SeriesHeaders_WeNeverLearn_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1676-WSJ_WeNeverLearn_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 21, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/492-SeriesHeaders_WeNeverLearn_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1676-WSJ_WeNeverLearn_400x320.jpg", "label": null, "recommended_series_ids": "702,311,546,450,751,180", "latest_author": "Taishi Tsutsui", "title_sort": "we never learn"}}, {"manga_series": {"id": 496, "updated_at": "2023-11-13T11:04:27.000-08:00", "manga_series_common_id": 496, "device_id": 4, "keyart": "img/manga_series_header/496-SeriesHeaders_DrStone_v2_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2257, "manga_imprint_id": null, "title": "Dr. STONE", "synopsis": "One fateful day, all of humanity turned to stone. Many millennia later, Taiju frees himself from the petrification and finds himself surrounded by statues. The situation looks grim\u2014until he runs into his science-loving friend Senku! Together they plan to restart civilization with the power of science!", "tagline": "Imagine waking to a world where every last human has been mysteriously turned to stone...", "rating": "t", "vanityurl": "dr-stone", "copyright": "Dr. STONE \u00a9 2017 by Riichiro Inagaki, Boichi/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/496-SeriesHeaders_DrStone_v2_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1696-WSJ_DrStone_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1702594032, "has_gns": true, "num_gns": 27, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/496-SeriesHeaders_DrStone_v2_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1696-WSJ_DrStone_400x320.jpg", "label": null, "recommended_series_ids": "703,700,648,938,138,694,520,739", "latest_author": "Story by Riichiro Inagaki, Art by Boichi", "title_sort": "dr. stone"}}, {"manga_series": {"id": 497, "updated_at": "2023-09-07T17:21:56.000-07:00", "manga_series_common_id": 497, "device_id": 4, "keyart": "img/manga_series_keyart/1701-Afterhours_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2215, "manga_imprint_id": 6, "title": "After Hours", "synopsis": "Emi Ashiana is 24, unemployed and not really sure what she wants to do with her life. When a friend invites her to a dance club, Emi doesn\u2019t expect much. But what she finds will change her world!", "tagline": "There\u2019s always something going on at night. Sooner or later, you\u2019ll find your scene.", "rating": "tp", "vanityurl": "after-hours", "copyright": "AFTER HOURS  \u00a9 2015 Yuhta NISHIO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1694132516, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 18, "chapter_last_num": 18, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5792-SeriesHeaders_AfterHours_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1443-SeriesThumbnailsManga_AfterHours_400x320.jpg", "label": null, "recommended_series_ids": "709,836,234,710,169,685,97", "latest_author": "Yuhta Nishio", "title_sort": "after hours"}}, {"manga_series": {"id": 499, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 499, "device_id": 4, "keyart": "img/manga_series_header/499-SeriesHeaders_RobotLaserbeam_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2256, "manga_imprint_id": 1, "title": "ROBOT\u00d7LASERBEAM", "synopsis": "Robato Hatohara, a stupidly serious, creepily thorough and socially clueless high school boy, appears to have no interest in anything\u2014including joining his friend Tomoya in the golf club. But when it\u2019s discovered that Robo\u2019s perfect accuracy and calculations enable him to golf like a practiced professional, will he be able to escape playing golf?", "tagline": "The latest from Tadatoshi Fujimaki, creator of Kuroko's Basketball! ", "rating": "t", "vanityurl": "robot-laserbeam", "copyright": "ROBOT\u00d7LASERBEAM \u00a9 2017 by Tadatoshi Fujimaki/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/499-SeriesHeaders_RobotLaserbeam_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/1708-WSJ_RobotLaserbeam_400x320.jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560018, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/499-SeriesHeaders_RobotLaserbeam_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/1708-WSJ_RobotLaserbeam_400x320.jpg", "label": null, "recommended_series_ids": "604,757,223,450,454", "latest_author": "Tadatoshi Fujimaki", "title_sort": "robot\u00d7laserbeam"}}, {"manga_series": {"id": 500, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 500, "device_id": 4, "keyart": "img/manga_series_keyart/1713-MITAP_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2216, "manga_imprint_id": 1, "title": "Manga in Theory and Practice", "synopsis": "Hirohiko Araki is the author of one of the longest-running and most beloved manga of all time, the epic fan favorite JoJo\u2019s Bizarre Adventure. According to him, manga is the ultimate synthesis of all forms of art, and in this book he reveals the secrets behind how to make the magic happen using concrete examples from his own work. Read all about his \u201cgolden ratio\u201d for drawing, the character histories he draws up for each of the characters he creates, his methodology for storytelling inspired by the great Ernest Hemingway, and many more aspects of manga creation in this how-to guide penned by an industry legend.", "tagline": "Learn how to create manga from a master of the medium!", "rating": "t", "vanityurl": "manga-in-theory-and-practice", "copyright": "ARAKI HIROHIKO NO MANGAJYUTSU \u00a92015 LUCKY LAND COMMUNICATIONS/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1626329269, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/1713-MITAP_SeriesBrick_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1487-SeriesThumbnailsManga_MangaInTheory_400x320.jpg", "label": null, "recommended_series_ids": "22,10,80,299,446,466,566,138,452,323,339,376,469,596,768,814,820", "latest_author": "Hirohiko Araki", "title_sort": "manga in theory and practice"}}, {"manga_series": {"id": 501, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 501, "device_id": 4, "keyart": "img/manga_series_header/501-SeriesHeaders_VKMemories_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 478, "manga_imprint_id": 2, "title": "Vampire Knight: Memories", "synopsis": "Vampire Knight returns with stories that delve into Yuki and Zero\u2019s time as a couple in the past and explore the relationship between Yuki\u2019s children and Kaname in the present.", "tagline": "Meet your knights in shining darkness in this fan-favorite series about eternal love. ", "rating": "tp", "vanityurl": "vampire-knight-memories", "copyright": "Vampire Knight memories\u00a9 Matsuri Hino 2016/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/501-SeriesHeaders_VKMemories_2000x800.jpg", "link_img": "img/manga_series_link_img/501-th-SeriesThumbnailsManga_VampireKnightMem_v2_400x320.jpg", "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1707377794, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/501-SeriesHeaders_VKMemories_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/501-th-SeriesThumbnailsManga_VampireKnightMem_v2_400x320.jpg", "label": null, "recommended_series_ids": "24,188,392,25,442", "latest_author": "Matsuri Hino", "title_sort": "vampire knight: memories"}}, {"manga_series": {"id": 505, "updated_at": "2023-12-12T10:00:00.000-08:00", "manga_series_common_id": 505, "device_id": 4, "keyart": "img/manga_series_keyart/1733-QQ_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2210, "manga_imprint_id": 2, "title": "Queen\u2019s Quality", "synopsis": "Fumi Nishioka lives with Kyutaro Horikita and his family of \u201cSweepers,\u201d people who specialize in cleaning the minds of those overcome by negative energy and harmful spirits. Fumi has always displayed mysterious abilities, but will those powers be used for evil when she begins to truly awaken as a Queen?", "tagline": "Is this Queen with mind-control powers going to incite good or evil?", "rating": "t", "vanityurl": "queens-quality", "copyright": "QUEEN'S QUALITY \u00a9 2016 Kyousuke MOTOMI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1707502069, "has_gns": true, "num_gns": 18, "has_chapters": true, "num_chapters": 96, "num_chapters_free": 6, "chapter_latest_pub_date": 1705107510, "chapter_latest_num": 96, "chapter_last_num": 96, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5840-SeriesHeaders_QueensQuality_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1608-SeriesThumbnailsManga_QueenQuality_400x320.jpg", "label": null, "recommended_series_ids": "100,102,777,720,413,118", "latest_author": "Kyousuke Motomi", "title_sort": "queen\u2019s quality"}}, {"manga_series": {"id": 506, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 506, "device_id": 4, "keyart": "img/manga_series_keyart/1737-SBF_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2213, "manga_imprint_id": 4, "title": "Sweet Blue Flowers", "synopsis": "Akira Okudaira is starting high school and is ready for exciting new experiences. And on the first day of school, she runs into her best friend from kindergarten at the train station! Now Akira and Fumi have the chance to rekindle their friendship, but life has gotten a lot more complicated since they were kids\u2026", "tagline": "A genre-defining saga of love and friendship between girls.", "rating": "tp", "vanityurl": "sweet-blue-flowers", "copyright": "Aoi hana\u00a9Takako Shimura/Ohta Publishing Company", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1641196820, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5841-SeriesHeaders_SweetBlueFlowers_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1609-SeriesThumbnailsManga_SweetBlueFlowers_400x320.jpg", "label": null, "recommended_series_ids": "155,16,729,157", "latest_author": "Takako Shimura", "title_sort": "sweet blue flowers"}}, {"manga_series": {"id": 518, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 518, "device_id": 4, "keyart": "img/manga_series_keyart/1753-JuniTaisen_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2243, "manga_imprint_id": null, "title": "Juni Taisen: Zodiac War", "synopsis": "Rampage. Weep. Kill. Every 12 years, the 12 signs of the Chinese zodiac take the form of warriors and engage in the ultimate battle royal. They face one another in battles to the death, using all the powers of their star signs, and the sole survivor is granted the ultimate prize\u2014a wish. Any wish.", "tagline": "Twelve warriors enter a death match, but only one can survive to win the ultimate prize.", "rating": "t", "vanityurl": "juni-taisen-zodiac-war", "copyright": "JUUNI TAISEN \u00a9 2015 by NISIOISIN, Hikaru Nakamura/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687291036, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5872-SeriesHeadersManga_JuniTaisen_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1696-SeriesThumbnailsManga_JuniTaisen_400x320.jpg", "label": null, "recommended_series_ids": "307,318,597,9,801,371,465,468,519", "latest_author": "Story by Nisioisin, Art by Hikaru Nakamura", "title_sort": "juni taisen: zodiac war"}}, {"manga_series": {"id": 519, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 519, "device_id": 4, "keyart": "img/manga_series_header/519-SeriesHeaders_TKGre_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1918, "manga_imprint_id": 4, "title": "Tokyo Ghoul: re", "synopsis": "The Commission of Counter Ghoul is the only organization fighting the Ghoul menace, and they will use every tool at their disposal to protect humanity from its ultimate predator. Their newest weapon in this hidden war is an experimental procedure that implants human investigators with a Ghoul\u2019s Kagune, giving them Ghoul powers and abilities. But both the procedure and the newly formed Qs Squad are untested. Will they become heroes\u2026or monsters?!", "tagline": "Ghouls live among us, the same as normal people in every way\u2014except for their craving for human flesh. ", "rating": "tp", "vanityurl": "tokyo-ghoul-re", "copyright": "TOKYO GHOUL:RE \u00a9 2014 by Sui Ishida/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/519-SeriesHeaders_TKGre_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/519-th-SeriesThumbnailsManga_TokyoGhoulRe_400x320.jpg", "subscription_type": "sj", "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1677484819, "has_gns": true, "num_gns": 16, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/519-SeriesHeaders_TKGre_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/519-th-SeriesThumbnailsManga_TokyoGhoulRe_400x320.jpg", "label": null, "recommended_series_ids": "8,763,722,498,730,451,471,371", "latest_author": "Sui Ishida", "title_sort": "tokyo ghoul: re"}}, {"manga_series": {"id": 520, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 520, "device_id": 4, "keyart": "img/manga_series_header/520-WSJHeader_MHVigilante_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: Vigilantes", "synopsis": "", "tagline": "Not everyone needs a license to fight for justice!", "rating": "t", "vanityurl": "my-hero-academia-vigilantes", "copyright": "VIGILANTE -BOKU NO HERO ACADEMIA ILLEGALS- \u00a9 2016 by Hideyuki Furuhashi, Betten Court, Kohei Horikoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/520-WSJHeader_MHVigilante_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/520-th-SeriesThumbnailsManga_MHVigilante_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1696921804, "has_gns": true, "num_gns": 15, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/520-WSJHeader_MHVigilante_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/520-th-SeriesThumbnailsManga_MHVigilante_400x320.jpg", "label": null, "recommended_series_ids": "580,722,540,724,694,704,611,624", "latest_author": "Story by Hideyuki Furuhashi, Art by Betten Court, Original Concept by Kohei Horikoshi", "title_sort": "my hero academia: vigilantes"}}, {"manga_series": {"id": 521, "updated_at": "2023-10-26T10:00:00.000-07:00", "manga_series_common_id": 521, "device_id": 4, "keyart": "img/manga_series_keyart/1765-SPBaby_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2230, "manga_imprint_id": 2, "title": "SP Baby", "synopsis": "Tamaki Hasegawa misses an interview for a much-needed job in order to stop an assault on a man running for his life! The man\u2014Kagetora Sugo, the prime minister\u2019s nephew\u2014then asks Tamaki to become his bodyguard.", "tagline": "Will this Security Police rookie let down her guard and accept her client\u2019s advances?", "rating": "tp", "vanityurl": "sp-baby", "copyright": "SP\u00d7BABY \u00a9 2015 Maki ENJOJI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1698339632, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 10, "num_chapters_free": 3, "chapter_latest_pub_date": 1698339570, "chapter_latest_num": 10, "chapter_last_num": 10, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5866-SeriesHeaders_SPBaby_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1690-SeriesThumbnailsManga_SPBaby_400x320.jpg", "label": null, "recommended_series_ids": "618,725,255,600,169,685,302", "latest_author": "Maki Enjoji", "title_sort": "sp baby"}}, {"manga_series": {"id": 524, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 524, "device_id": 4, "keyart": "img/manga_series_header/524-SeriesHeadersManga_JuniTaisen_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2243, "manga_imprint_id": null, "title": "Juni Taisen: Zodiac War (manga)", "synopsis": "Every 12 years, 12 fighters take the form of the Chinese zodiac and engage in a battle royale. With their strength and mysterious powers, they fight to the death and the sole survivor is granted the ultimate prize\u2014any wish.", "tagline": "The manga adaptation of Juni Taisen from the creator of Medaka Box!", "rating": "tp", "vanityurl": "juni-taisen-zodiac-war-manga", "copyright": "JUUNI TAISEN \u00a9 2017 by NISIOISIN, Hikaru Nakamura, Akira Akatsuki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/524-SeriesHeadersManga_JuniTaisen_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/524-th-WSJ_JuniTaisenManga_400x320_v2.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687291036, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/524-SeriesHeadersManga_JuniTaisen_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/524-th-WSJ_JuniTaisenManga_400x320_v2.jpg", "label": null, "recommended_series_ids": "318,448,9,339,371", "latest_author": "Manga by Akira Akatsuki, Original Novel by Nisioisin", "title_sort": "juni taisen: zodiac war (manga)"}}, {"manga_series": {"id": 528, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 528, "device_id": 4, "keyart": "img/manga_series_keyart/1793-TakaneHana_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2254, "manga_imprint_id": null, "title": "Takane & Hana", "synopsis": "After her older sister refuses to go to an arranged marriage meeting with Takane Saibara, the heir to a vast business fortune, high schooler Hana Nonomura agrees to be her stand-in to save face for the family. But when these two utter opposites pair up, get ready for some sparks to fly!", "tagline": "An arranged marriage meeting gone awry... Now sparks fly between two utter opposites!", "rating": "t", "vanityurl": "takane-and-hana", "copyright": "Takane to Hana \u00a9 Yuki Shiwasu 2015/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694199621, "has_gns": true, "num_gns": 18, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5878-SeriesHeaders_TakaneHana_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1756-SeriesThumbnailsManga_TakaneHana_400x320.jpg", "label": null, "recommended_series_ids": "102,152,316,162,870", "latest_author": "Yuki Shiwasu", "title_sort": "takane & hana"}}, {"manga_series": {"id": 529, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 529, "device_id": 4, "keyart": "img/manga_series_keyart/1797-YMR_ComixologyBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2253, "manga_imprint_id": 2, "title": "The Young Master\u2019s Revenge", "synopsis": "When Leo was a young boy, he had his pride torn to shreds by Tenma, a girl from a wealthy background who was always getting him into trouble. Now, years after his father\u2019s successful clothing business has made him the heir to a fortune, he searches out Tenma to enact a dastardly plan\u2014he\u2019ll get his revenge by making her fall in love with him!", "tagline": "Love\u2019s revenge can be sweet.", "rating": "t", "vanityurl": "the-young-masters-revenge", "copyright": "Kimi no Kotonado Zettaini \u00a9 Meca Tanaka 2015/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1668474394, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5882-SeriesHeaders_YoungMastersRev_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1797-SeriesThumbnailsManga_YoungMasterRev_400x320.jpg", "label": null, "recommended_series_ids": "84,152,361,13,585", "latest_author": "Meca Tanaka", "title_sort": "young master\u2019s revenge"}}, {"manga_series": {"id": 530, "updated_at": "2023-12-19T10:00:00.000-08:00", "manga_series_common_id": 530, "device_id": 4, "keyart": "img/manga_series_keyart/1801-KaguyaLIW_ComixologyBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2263, "manga_imprint_id": null, "title": "Kaguya-sama: Love Is War", "synopsis": "", "tagline": "Two geniuses. Two brains. Two hearts. One battle. Who will confess their love first\u2026?!", "rating": "t", "vanityurl": "kaguya-sama-love-is-war", "copyright": "KAGUYA-SAMA WA KOKURASETAI\uff5eTENSAITACHI NO REN'AI ZUNO SEN\uff5e \u00a9 2015 by Aka Akasaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704438317, "has_gns": true, "num_gns": 27, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5883-SeriesHeaders_KaguyaSama_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1800-SeriesThumbnailsManga_KaguyaSama_v2_400x320.jpg", "label": null, "recommended_series_ids": "702,795,180,78,86,492", "latest_author": "Aka Akasaka", "title_sort": "kaguya-sama: love is war"}}, {"manga_series": {"id": 532, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 532, "device_id": 4, "keyart": "img/manga_series_keyart/1809-HoshinEngi_April2018_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 699, "manga_imprint_id": 1, "title": "Hoshin Engi", "synopsis": "When his clan is wiped out by a beautiful demon, young Taikobo finds himself in charge of the mysterious Hoshin Project. Its mission: find all immortals living in the human world and seal them away forever. But what is the ultimate goal of the Project? And does Taikobo even know whose side he's really on?!", "tagline": "Betrayed by an immortal, trained by a God, hunted by Demons.", "rating": "t", "vanityurl": "hoshin-engi", "copyright": "HOSHIN ENGI \u00a9 1996 by Ryu Fujisaki, Tsutomu Ano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1672560017, "has_gns": true, "num_gns": 23, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5932-SeriesHeaders_HoshinEngi_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/119-SeriesThumbnailsManga_HoshinEngi_400x320.jpg", "label": null, "recommended_series_ids": "546,80,124,1,841,241", "latest_author": "Ryu Fujisaki", "title_sort": "hoshin engi"}}, {"manga_series": {"id": 534, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 534, "device_id": 4, "keyart": "img/manga_series_keyart/1817-KenkaBancho_April2018_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2255, "manga_imprint_id": 2, "title": "Kenka Bancho Otome: Love\u2019s Battle Royale", "synopsis": "Hinako thought she didn't have any family, but on the day she starts high school, her twin brother Hikaru suddenly appears and tricks her into taking his place. But the new school Hinako attends in his stead is beyond unusual. Now she must fight her way to the top of Shishiku Academy, an all-boys school of delinquents!", "tagline": "Beautiful boy rebels using their fists to fall in love!", "rating": "t", "vanityurl": "kenka-bancho-otome-loves-battle-", "copyright": "Kenka Bancho Otome: Koi no Battle Royal \u00a9 Chie Shimada / HAKUSENSHA, INC. \u00a9 Spike Chunsoft ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 2, "imprint_title": "Shojo Beat", "mod_ts": 1626912038, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5886-SeriesHeaders_KenkaBancho_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1812-SeriesThumbnailsManga_KenkaBancho_v2_400x320.jpg", "label": null, "recommended_series_ids": "264,268,162,13,163", "latest_author": "Chie Shimada", "title_sort": "kenka bancho otome: love\u2019s battle royale"}}, {"manga_series": {"id": 537, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 537, "device_id": 4, "keyart": "img/manga_series_keyart/1829-CWO18157_RWBY_ComixologyBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2227, "manga_imprint_id": 4, "title": "RWBY: Official Manga Anthology", "synopsis": "Defeating monsters and stopping evil is a tough job, but TEAM RWBY is up for any challenge! Well, except for homework.", "tagline": "Experience the international smash hit series RWBY in a whole new way\u2014manga!", "rating": "t", "vanityurl": "rwby-official-manga-anthology", "copyright": "RWBY Anthology \u00a9 2017 Rooster Teeth Productions, LLC   \u00a9 2017 Home-sha", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": "img/manga_series_link_img/537-th-WSJ_RWBYAnthology_400x320.jpg", "subscription_type": null, "imprint_id": 4, "imprint_title": "Viz Signature", "mod_ts": 1635799313, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6113-Header_RWBYOfficialManga_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/537-th-WSJ_RWBYAnthology_400x320.jpg", "label": null, "recommended_series_ids": "105,580,851,170,301,312", "latest_author": "Original Concept by Monty Oum & Rooster Teeth Productions, Story and Art by Various Artists", "title_sort": "rwby: official manga anthology"}}, {"manga_series": {"id": 538, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 538, "device_id": 4, "keyart": "img/manga_series_keyart/1833-NekoAtsume-Haiku_ComixologyBrick940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2275, "manga_imprint_id": 6, "title": "Neko Atsume Kitty Collector Haiku: Seasons of the Kitty", "synopsis": "Haiku for Cat Lovers\r\n\r\nFollow the cute cartoon kitties of the Neko Atsume: Kitty Collector mobile game as they stalk through the seasons of the year, their misadventures captured in witty haiku.\r\n\r\nHave you ever wondered what the Neko Atsume kitties get up to when they\u2019re not playing with the toys you set out for them or leaving you fish\u2026? Turn the inventive pages of this haiku almanac and find out!\r\n\r\nWarning: Includes kitty stats, kitty bios, rare kitties, and kitty shenanigans!", "tagline": "Fun activity books based on the super-popular mobile game!", "rating": "a", "vanityurl": "neko-atsume-kitty-collector-haik", "copyright": "\u00a9 2017 Hit-Point / KADOKAWA CORPORATION", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1665698735, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5879-SeriesHeaders_NekoAtsume_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1761-SeriesThumbnailsManga_NekoAtsume_400x320.jpg", "label": null, "recommended_series_ids": "291,322,380,894,108,109,110,111,573,574,575,576,578,773,779,789,905,926", "latest_author": "Hit Point", "title_sort": "neko atsume kitty collector haiku: seasons of the kitty"}}, {"manga_series": {"id": 539, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 539, "device_id": 4, "keyart": "img/manga_series_keyart/1837-NekoAtsume-WAIM_ComixologyBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2275, "manga_imprint_id": 6, "title": "Neko Atsume Kitty Collector: Where Am I Meow?", "synopsis": "An activity book with so many ways to enjoy the Neko Atsume kitties: seek-and-finds, stickers and the only place to find the official kitty bios! This book makes it easy for you to explore the wider world of Neko Atsume with exclusive kitty habitats that take you out of the yard and into your imagination. Come play with them!", "tagline": "Fun activity books based on the super-popular mobile game!", "rating": "a", "vanityurl": "neko-atsume-kitty-collector-wher", "copyright": "\u00a9 2017 Hit-Point / KADOKAWA CORPORATION", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": 6, "imprint_title": "Viz Media", "mod_ts": 1665698735, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5879-SeriesHeaders_NekoAtsume_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1761-SeriesThumbnailsManga_NekoAtsume_400x320.jpg", "label": null, "recommended_series_ids": "291,322,380,894,108,109,110,111,573,574,575,576,578,773,779,789,905,926", "latest_author": "Hit Point", "title_sort": "neko atsume kitty collector: where am i meow?"}}, {"manga_series": {"id": 540, "updated_at": "2024-01-22T11:28:46.000-08:00", "manga_series_common_id": 540, "device_id": 4, "keyart": "img/manga_series_header/540-MangaHeaders_JuJutsuKaisen_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2331, "manga_imprint_id": null, "title": "Jujutsu Kaisen", "synopsis": "In a world where cursed spirits feed on unsuspecting humans, fragments of the legendary and feared demon Ryomen Sukuna were lost and scattered about. Should any demon consume Sukuna\u2019s body parts, the power they gain could destroy the world as we know it. Fortunately, there exists a mysterious school of Jujutsu Sorcerers who exist to protect the precarious existence of the living from the supernatural!", "tagline": "To save the world from demons, Yuji Itadori may have to become one himself!", "rating": "tp", "vanityurl": "jujutsu-kaisen", "copyright": "JUJUTSU KAISEN \u00a9 2018 by Gege Akutami/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/540-MangaHeaders_JuJutsuKaisen_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/540-th-WSJ_JuJutsuKaisen_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663615, "has_gns": true, "num_gns": 22, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/540-MangaHeaders_JuJutsuKaisen_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/540-th-WSJ_JuJutsuKaisen_400x320.jpg", "label": null, "recommended_series_ids": "580,796,496,718,724,5,732,739,260", "latest_author": "Gege Akutami", "title_sort": "jujutsu kaisen"}}, {"manga_series": {"id": 541, "updated_at": "2023-12-05T14:00:00.000-08:00", "manga_series_common_id": 541, "device_id": 4, "keyart": "img/manga_series_keyart/1845-SPitDC_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2262, "manga_imprint_id": null, "title": "Sleepy Princess in the Demon Castle", "synopsis": "Kidnapped by the Demon King and imprisoned in his castle, Princess Syalis is\u2026bored.", "tagline": "A captured princess just wants a good night\u2019s sleep! Shhh\u2026", "rating": "t", "vanityurl": "sleepy-princess-in-the-demon-cas", "copyright": "MAOUJO DE OYASUMI \u00a9 2016 Kagiji KUMANOMATA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434413, "has_gns": true, "num_gns": 22, "has_chapters": true, "num_chapters": 342, "num_chapters_free": 6, "chapter_latest_pub_date": 1707260310, "chapter_latest_num": 354, "chapter_last_num": 354, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5890-SeriesHeaders_SleepyPrincess_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1840-SeriesThumbnailsManga_SleepyPrincess_400x320.jpg", "label": null, "recommended_series_ids": "754,146,148,777,136,685,395", "latest_author": "Kagiji Kumanomata", "title_sort": "sleepy princess in the demon castle"}}, {"manga_series": {"id": 546, "updated_at": "2023-05-30T11:20:12.000-07:00", "manga_series_common_id": 546, "device_id": 4, "keyart": "img/manga_series_keyart/1865-DemonSlayer_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2267, "manga_imprint_id": null, "title": "Demon Slayer: Kimetsu no Yaiba", "synopsis": "In Taisho-era Japan, Tanjiro Kamado is a kindhearted boy who makes a living selling charcoal. But his peaceful life is shattered when a demon slaughters his entire family. His little sister Nezuko is the only survivor, but she has been transformed into a demon herself! Tanjiro sets out on a dangerous journey to find a way to return his sister to normal and destroy the demon who ruined his life.", "tagline": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "rating": "t", "vanityurl": "demon-slayer-kimetsu-no-yaiba", "copyright": "KIMETSU NO YAIBA \u00a9 2016 by Koyoharu Gotouge/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705537557, "has_gns": true, "num_gns": 24, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5945-SeriesHeaders_DemonSlayer_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1880-SeriesThumbnailsManga_DemonSlayer_400x320.jpg", "label": null, "recommended_series_ids": "8,105,461,722,540,694,781,371", "latest_author": "Koyoharu Gotouge", "title_sort": "demon slayer: kimetsu no yaiba"}}, {"manga_series": {"id": 548, "updated_at": "2023-09-07T17:30:09.000-07:00", "manga_series_common_id": 548, "device_id": 4, "keyart": "img/manga_series_keyart/1873-Shortcake_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2268, "manga_imprint_id": null, "title": "Shortcake Cake", "synopsis": "When Ten moves out of her parents\u2019 home in the mountains to live in a boardinghouse, she finds herself becoming fast friends with her male roommates. But can love and romance be far behind?", "tagline": "An unflappable girl and a cast of lovable roommates create bonds of friendship and romance.", "rating": "t", "vanityurl": "shortcake-cake", "copyright": "SHORTCAKE CAKE \u00a9 2015 by suu Morishita/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694133009, "has_gns": true, "num_gns": 12, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5947-SeriesHeaders_ShortCakeCake_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1898-SeriesThumbnailsManga_ShortCakeCake_400x320.jpg", "label": null, "recommended_series_ids": "606,436,135,848,695,505,157,190", "latest_author": "Suu Morishita", "title_sort": "shortcake cake"}}, {"manga_series": {"id": 549, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 549, "device_id": 4, "keyart": "img/manga_series_keyart/1877-BlackTorch_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2265, "manga_imprint_id": null, "title": "Black Torch", "synopsis": "Jiro Azuma is descended from of a long line of shinobi, and he also can talk to animals. One day, he rescues a very unique black cat named Rago, a supernatural being, and is dragged into a secret supernatural war.", "tagline": "Ninja and animal lover Jiro Azuma finds himself in the middle of a war with ninjas vs. demons.", "rating": "tp", "vanityurl": "black-torch", "copyright": "BLACK TORCH \u00a9 2016 by Tsuyoshi Takaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1684432324, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5946-SeriesHeaders_BlackTorch_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1897-SeriesThumbnails_BlackTorch_400x320.jpg", "label": null, "recommended_series_ids": "8,105,461,724,1,126,312", "latest_author": "Tsuyoshi Takaki", "title_sort": "black torch"}}, {"manga_series": {"id": 550, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 550, "device_id": 4, "keyart": "img/manga_series_keyart/1881-BlueSky_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2276, "manga_imprint_id": null, "title": "That Blue Sky Feeling", "synopsis": "Outgoing high school student Noshiro finds himself drawn to Sanada, the school outcast, who is rumored to be gay. Rather than deter Noshiro, the rumor makes him even more determined to get close to Sanada, setting in motion a bittersweet tale of first love.", "tagline": "A romance about two very different high school boys who find themselves unexpectedly falling for each other.", "rating": "t", "vanityurl": "that-blue-sky-feeling", "copyright": "\u00a92017 Okura, Coma Hashii/SQUARE ENIX", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1667606255, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5950-SeriesHeaders_ThatBlueSkyFeeling_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1908-SeriesThumbnailsManga_ThatBlueSkyFeeling_400x320.jpg", "label": null, "recommended_series_ids": "264,268,316,13,506", "latest_author": "Story by Okura, Art by Coma Hashii", "title_sort": "that blue sky feeling"}}, {"manga_series": {"id": 552, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 552, "device_id": 4, "keyart": "img/manga_series_header/552-SJ_RightWayToMakeJump_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2294, "manga_imprint_id": null, "title": "The Right Way to Make Jump!", "synopsis": "Join a self-professed inept manga artist and his editor as they go on an adventure to learn just how Weekly Shonen Jump is made. Shonen Jump is the world\u2019s most popular manga magazine and the birthplace of classics like Dragon Ball, Naruto and One Piece. But how did it become so successful? This duo will visit the editorial office, the printer, the paper supplier and even the home of My Hero Academia creator Kohei Horikoshi\u2014anything to uncover the secrets of Shonen Jump!", "tagline": "Unlock the secrets of Shonen Jump!", "rating": "t", "vanityurl": "the-right-way-to-make-jump", "copyright": "JUMP NO TADASHII TSUKURIKATA! \u00a9 2014 by Takeshi Sakurai/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/552-SJ_RightWayToMakeJump_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/552-th-SJ_HowToMakeJump_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1676505556, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/552-SJ_RightWayToMakeJump_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/552-th-SJ_HowToMakeJump_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "7,496,10,791,5,471", "latest_author": "By Takeshi Sakurai, Translated by Emily Taylor", "title_sort": "right way to make jump!"}}, {"manga_series": {"id": 558, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 558, "device_id": 4, "keyart": "img/manga_series_keyart/1913-Radiant_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2291, "manga_imprint_id": null, "title": "Radiant", "synopsis": "Seth is an aspiring wizard living in a pastoral village under the watchful eye of his mentor. Like all wizards, he is an \u201cinfected\u201d: one of the few living creatures that has survived contact with one of the Nemeses, monsters fallen from the sky that contaminate all they touch. His apparent immunity led him to choose a path that seemed to be perfect\u2014to become someone who hunts and fights Nemeses. But Seth longs for a quest that goes beyond the simple hunt for monsters. He wants to find their home, Radiant. Along with other wizards, he travels the world in search of Radiant, under the sinister eye of the Inquisition\u2026", "tagline": "The world is overrun with monsters called Nemesis\u2014and a young boy infected by them will stop at nothing to defeat them all!", "rating": "t", "vanityurl": "radiant", "copyright": "RADIANT \u00a9 ANKAMA by Tony Valente", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707466253, "has_gns": true, "num_gns": 17, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5949-SeriesHeaders_Radiant_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1905-SeriesThumbnailsManga_Radiant_400x320.jpg", "label": null, "recommended_series_ids": "448,89,296,257,444,324", "latest_author": "Story and Art by Tony Valente", "title_sort": "radiant"}}, {"manga_series": {"id": 562, "updated_at": "2023-12-01T16:27:19.000-08:00", "manga_series_common_id": 562, "device_id": 4, "keyart": "img/manga_series_keyart/1929-AoHaru_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2284, "manga_imprint_id": null, "title": "Ao Haru Ride", "synopsis": "Futaba Yoshioka thought all boys were loud and obnoxious until she met Kou Tanaka in junior high. But as soon as she realized she really liked him, he had already moved away because of family issues. Now, in high school, Kou has reappeared, but is he still the same boy she fell in love with?", "tagline": "The popular shojo manga series that was adapted into the Blue Spring Ride anime!", "rating": "t", "vanityurl": "ao-haru-ride", "copyright": "AOHA RIDE \u00a9 2011 by Io Sakisaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096038, "has_gns": true, "num_gns": 13, "has_chapters": true, "num_chapters": 49, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 49, "chapter_last_num": 49, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5955-SeriesHeaders_AoHaru_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1930-SeriesThumbnails_AoHaru_400x320.jpg", "label": null, "recommended_series_ids": "436,785,135,600,695,776,873,190", "latest_author": "Io Sakisaka", "title_sort": "ao haru ride"}}, {"manga_series": {"id": 566, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 566, "device_id": 4, "keyart": "img/manga_series_header/566-Yamcha_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 621, "manga_imprint_id": null, "title": "Dragon Ball: That Time I Got Reincarnated as Yamcha!", "synopsis": "A Dragon Ball fan\u2019s greatest dream is getting to live in the Dragon Ball universe and fight alongside Goku and his friends! One particular fan is in for a rude awakening when he suddenly dies and gets reincarnated as everyone\u2019s favorite punching bag, Yamcha!", "tagline": "One fan's dream of being reincarnated in the Dragon Ball world turns into a nightmare!", "rating": "t", "vanityurl": "dragon-ball-that-time--got-reincarnated-as-yamcha", "copyright": "DRAGON BALL GAIDEN: TENSEI SHITARA YAMCHA DATTA KEN \u00a9 2017 by BIRD STUDIO, dragongarow LEE/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/566-Yamcha_wm.jpg", "link_img": "img/manga_series_link_img/566-th-WSJ_DBYamcha_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/566-Yamcha_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/566-th-WSJ_DBYamcha_400x320.jpg", "label": null, "recommended_series_ids": "774,496,466,80,856,414,5", "latest_author": "Manga by dragongarow LEE, Original Concept by Akira Toriyama", "title_sort": "dragon ball: that time i got reincarnated as yamcha!"}}, {"manga_series": {"id": 569, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 569, "device_id": 4, "keyart": "img/manga_series_keyart/1957-RanGrayWorld_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2287, "manga_imprint_id": null, "title": "Ran and the Gray World", "synopsis": "Ran Uruma can\u2019t wait to grow up and become a sorceress like her mother, so with the help of a magical pair of sneakers, she transforms into an adult and sets off! Her father and older brother Jin try to keep her home safe, but Ran is determined to advance her powers and have adventures of her own!", "tagline": "A young sorceress transforms into an adult and sets out on magical adventures!", "rating": "tp", "vanityurl": "ran-and-the-gray-world", "copyright": "\u00a92009 Aki Irie / KADOKAWA CORPORATION", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1626912316, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5956-SeriesHeaders_RanGrayWorld_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1937-SeriesThumbnailsManga_RanGrayWorld_400x320.jpg", "label": null, "recommended_series_ids": "472,21,491", "latest_author": "Aki Irie", "title_sort": "ran and the gray world"}}, {"manga_series": {"id": 570, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 570, "device_id": 4, "keyart": "img/manga_series_keyart/1961-Nier_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2278, "manga_imprint_id": null, "title": "NieR:Automata", "synopsis": "When alien forces invade with an army of Machines, the remnants of humanity must depend on Androids of their own design\u2014the placid 2B and the excitable 9S\u2014to survive.", "tagline": "Experience the world and characters of the hit video game franchise!", "rating": "a", "vanityurl": "nier-automata", "copyright": "\u00a92017 Jun Eishima/SQUARE ENIX   \u00a92017 SQUARE ENIX CO.,LTD. All Rights Reserved.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1665698948, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5951-SeriesHeaders_NierAutomata_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1915-SeriesThumbnailsNovel_NierAutomata_400x320.jpg", "label": null, "recommended_series_ids": "658", "latest_author": "Written by Jun Eishima and Yoko Taro, Original Story by Yoko Taro", "title_sort": "nier:automata"}}, {"manga_series": {"id": 573, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 573, "device_id": 4, "keyart": "img/manga_series_header/573-PokemonHeartGoldSoulSilver_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": null, "title": "Pok\u00e9mon Adventures: HeartGold and SoulSilver", "synopsis": "All your favorite Pok\u00e9mon game characters jump out of the screen into the pages of this action-packed manga!", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-adventures-heart-gold-soul-silver", "copyright": "\u00a92018 The Pok\u00e9mon Company International.   \u00a91995-2012 Nintendo / Creatures Inc. / GAME FREAK inc.    TM, \u00ae, and character names are trademarks of Nintendo.   POCKET MONSTERS SPECIAL \u00a9 1997 Hidenori KUSAKA, Satoshi YAMAMOTO/SHOGAKUKAN  ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/573-PokemonHeartGoldSoulSilver_2000x800.jpg", "link_img": "img/manga_series_link_img/573-th-Pokemon_Gold_Silver.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1674460840, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/573-PokemonHeartGoldSoulSilver_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/573-th-Pokemon_Gold_Silver.jpg", "label": null, "latest_author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "title_sort": "pok\u00e9mon adventures: heartgold and soulsilver"}}, {"manga_series": {"id": 574, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 574, "device_id": 4, "keyart": "img/manga_series_header/574-PokemonBW_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": null, "title": "Pok\u00e9mon Adventures: Black and White", "synopsis": "Pok\u00e9mon Trainer Black meets White, a Pok\u00e9mon Trainer who runs a growing talent agency for performing Pok\u00e9mon. Will Black catch show biz fever too? Meanwhile, mysterious Team Plasma is urging everyone to release their beloved Pok\u00e9mon into the wild! What are they thinking?!\r\n\r\nAll your favorite Pok\u00e9mon game characters jump out of the screen into the pages of this action-packed manga!", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-adventures-black-and-white", "copyright": "\u00a92018 The Pok\u00e9mon Company International.   \u00a91995-2013  Nintendo / Creatures Inc. / GAME FREAK inc.    TM, \u00ae, and character names are trademarks of Nintendo.   POCKET MONSTERS SPECIAL \u00a9 1997 Hidenori KUSAKA, Satoshi YAMAMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/574-PokemonBW_2000x800.jpg", "link_img": "img/manga_series_link_img/574-th-Pokemon_Blk_White.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1674460844, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/574-PokemonBW_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/574-th-Pokemon_Blk_White.jpg", "label": null, "latest_author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "title_sort": "pok\u00e9mon adventures: black and white"}}, {"manga_series": {"id": 575, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 575, "device_id": 4, "keyart": "img/manga_series_header/575-PokemonB2W2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": null, "title": "Pok\u00e9mon Adventures: Black 2 & White 2", "synopsis": "Two years have passed since Team Plasma was defeated and Trainer Black was sucked into the Light Stone along with Legendary Pok\u00e9mon Reshiram\u2026 Now Team Plasma is back to its wicked ways, controlling other people\u2019s Pok\u00e9mon and even wild Pok\u00e9mon with technology. Luckily, a new young hero and Looker of the International Police are on their trail\u2026", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-adventures-black-2-white-2", "copyright": "\u00a92018 The Pok\u00e9mon Company International.   \u00a91995-2014  Nintendo / Creatures Inc. / GAME FREAK inc.   TM, \u00ae, and character names are trademarks of Nintendo.   POCKET MONSTERS SPECIAL \u00a9 1997 Hidenori KUSAKA, Satoshi YAMAMOTO/SHOGAKUKAN ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/575-PokemonB2W2_2000x800.jpg", "link_img": "img/manga_series_link_img/575-th-PokemonBlk2_white2.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1674460852, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/575-PokemonB2W2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/575-th-PokemonBlk2_white2.jpg", "label": null, "latest_author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "title_sort": "pok\u00e9mon adventures: black 2 & white 2"}}, {"manga_series": {"id": 576, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 576, "device_id": 4, "keyart": "img/manga_series_header/576-PokemonAdv_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": null, "title": "Pok\u00e9mon the Movie (manga)", "synopsis": "", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-the-movie-manga", "copyright": "\u00a92018 Pok\u00e9mon.   \u00a91998\u20132017 PIKACHU PROJECT.   \u00a91997\u20132017 Nintendo, Creatures, GAME FREAK, TV Tokyo, ShoPro, JR Kikaku.   TM, \u00ae, and character names are trademarks of Nintendo.   GEKIJOBAN POCKET MONSTERS KIMI NI KIMETA! \u00a9 2017 Ryo TAKAMISAKI/SHOGAKUKAN", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/576-PokemonAdv_2000x800.jpg", "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1676505556, "has_gns": true, "num_gns": 15, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/576-PokemonAdv_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/64-SeriesThumbnailsManga_POK_400x320.jpg", "label": null, "latest_author": "Machito Gomi", "title_sort": "pok\u00e9mon the movie (manga)"}}, {"manga_series": {"id": 577, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 577, "device_id": 4, "keyart": "img/manga_series_keyart/1989-_SeriesBricks_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2288, "manga_imprint_id": null, "title": "Kakuriyo: Bed & Breakfast for Spirits", "synopsis": "Aoi Tsubaki inherited her grandfather\u2019s ability to see spirits\u2014and his massive debt to them! Now she\u2019s been kidnapped and taken to Kakuriyo, the spirit world, to make good on his bill. Her options: marry the head of the inn her grandfather trashed, or get eaten by demons. But Aoi isn\u2019t the type to let spirits push her around, and she\u2019s determined to redeem her grandfather\u2019s IOU on her own terms!", "tagline": "Get married to a strange spirit or become dinner? Aoi decides to create a third option for herself!", "rating": "t", "vanityurl": "kakuriyo-bed-and-breakfast-for-spirits", "copyright": "\u00a92016 Waco Ioka, Midori Yuma, Laruha / KADOKAWA CORPORATION", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1700031848, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5966-SeriesHeaders_Kakuriyo_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1966-SeriesThumbnailsManga_Kakuriyo_400x320.jpg", "label": null, "recommended_series_ids": "392,89,296,211,491", "latest_author": "Story and Art by Waco Ioka, Original Story by Midori Yuma, Character Design by Laruha", "title_sort": "kakuriyo: bed & breakfast for spirits"}}, {"manga_series": {"id": 579, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 579, "device_id": 4, "keyart": "img/manga_series_header/579-SJMangaHeaders_RWBY_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2227, "manga_imprint_id": null, "title": "RWBY The Official Manga", "synopsis": "Monsters known as the Grimm are wreaking havoc on the world of Remnant. Ruby Rose seeks to become a Huntress, someone who eliminates the Grimm and protects the land. She enrolls at Beacon Academy, eager for the tests and combat challenges to come.", "tagline": "The official manga adaptation of the hit Rooster Teeth anime!", "rating": "t", "vanityurl": "rwby-the-official-manga", "copyright": "RWBY THE OFFICIAL MANGA \u00a9 2018 Rooster Teeth Productions, LLC  \u00a9 2018 by Bunta Kinami/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/579-SJMangaHeaders_RWBY_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/579-th-WSJ_RWBY_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/579-SJMangaHeaders_RWBY_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/579-th-WSJ_RWBY_400x320.jpg", "label": null, "recommended_series_ids": "105,703,580,581,339,312,753", "latest_author": "Bunta Kunami", "title_sort": "rwby the official manga"}}, {"manga_series": {"id": 580, "updated_at": "2023-10-11T15:29:55.000-07:00", "manga_series_common_id": 580, "device_id": 4, "keyart": "img/manga_series_header/580-SJMangaHeaders_ChainsawMan_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2326, "manga_imprint_id": null, "title": "Chainsaw Man", "synopsis": "Denji was a small-time devil hunter just trying to survive in\u00a0a harsh world. After being killed on a job,\u00a0he is revived by his pet devil-dog Pochita and becomes something new and dangerous\u2014Chainsaw Man!", "tagline": "Broke young man + chainsaw demon = Chainsaw Man!", "rating": "tp", "vanityurl": "chainsaw-man", "copyright": "CHAINSAW MAN \u00a9 2018 by Tatsuki Fujimoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/580-SJMangaHeaders_ChainsawMan_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/580-th-WSJ_Chainsaw_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434650, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/580-SJMangaHeaders_ChainsawMan_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/580-th-WSJ_Chainsaw_400x320.jpg", "label": null, "recommended_series_ids": "796,527,138,540,724,791,249,739", "latest_author": "Tatsuki Fujimoto", "title_sort": "chainsaw man"}}, {"manga_series": {"id": 581, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 581, "device_id": 4, "keyart": "img/manga_series_header/581-SJMangaHeaders_Gokutei_Higuma_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2327, "manga_imprint_id": null, "title": "Hell Warden Higuma", "synopsis": "Fugitive spirits are the souls of criminals who have escaped hell and infest the mortal world. They possess the living to commit evil deeds, and only the Hell Wardens can stop them.", "tagline": "Watch out malevolent fugitive souls, Higuma will send you straight back from where you came!", "rating": "t", "vanityurl": "hell-warden-higuma", "copyright": "GOKUTEI HIGUMA \u00a9 2018 by Natsuki Hokami/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/581-SJMangaHeaders_Gokutei_Higuma_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/581-th-WSJ_Gokuta_Higma_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560019, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/581-SJMangaHeaders_Gokutei_Higuma_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/581-th-WSJ_Gokuta_Higma_400x320.jpg", "label": null, "recommended_series_ids": "8,105,18,546,466,627", "latest_author": "Natsuki Hokami", "title_sort": "hell warden higuma"}}, {"manga_series": {"id": 583, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 583, "device_id": 4, "keyart": "img/manga_series_header/583-SeriesHeader_Neolation_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2328, "manga_imprint_id": null, "title": "ne0;lation", "synopsis": "Daigo Minai only has two goals\u2014helping his sister pay off their late parents\u2019 debt and graduating high school. But when he meets Arata One, a computer genius with an IQ of 191 and a penchant for punishing criminals, he gets saddled with a third\u2014using his muscle to help One achieve his dream of one day ruling the city as the wizard-level hacker \u201cne0\u201d by taking down one criminal at a time.", "tagline": "A technical delinquent and a regular delinquent take over the Japanese criminal underworld!", "rating": "t", "vanityurl": "ne0lation", "copyright": "NE0;LATION \u00a9 2018 by Tomohide Hirao, Mizuki Yoda/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/583-SeriesHeader_Neolation_2000x800.jpg", "link_img": "img/manga_series_link_img/583-th-WSJ__ne0;lation_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1702330300, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/583-SeriesHeader_Neolation_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/583-th-WSJ__ne0;lation_400x320.jpg", "label": null, "recommended_series_ids": "105,496,627,632,325,393", "latest_author": "Story by Tomohide Hirao, Art by Mizuki Yoda", "title_sort": "ne0;lation"}}, {"manga_series": {"id": 584, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 584, "device_id": 4, "keyart": "img/manga_series_keyart/2017-AS_SeriesBricks_708x250.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2297, "manga_imprint_id": null, "title": "Amigurumi Sweets", "synopsis": "Crochet a variety of sweet things, including key chains, pouches, bag mascots, and more!", "tagline": "", "rating": "a", "vanityurl": "amigurumisweets", "copyright": "Lady Boutique Series No. 4137 Amigurumi Sweets \u00a9 2015 Boutique-sha, Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1650492296, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/2017-AS_SeriesBricks_708x250.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1883-SeriesThumbnails_AmigurumiSanX_400x320.jpg", "label": null, "recommended_series_ids": "735,741,764,767,852,874,877,291,322,380,894,108,109,110,111,573,574,575,576,578,773,779,789,905,926", "latest_author": "Miyuki Ichikawa", "title_sort": "amigurumi sweets"}}, {"manga_series": {"id": 585, "updated_at": "2023-05-10T13:21:51.000-07:00", "manga_series_common_id": 585, "device_id": 4, "keyart": "img/manga_series_keyart/2021-UY_SeriesBricks_708x250.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2286, "manga_imprint_id": null, "title": "Urusei Yatsura", "synopsis": "Beautiful space alien princess Lum invades Earth on her UFO, and unlucky Ataru Moroboshi\u2019s world gets turned upside down! Will Lum become Earth\u2019s electrifying new leader? Or will Ataru somehow miraculously save Earth from space alien onslaught?", "tagline": "The hilarious manga classic featuring beautiful space alien princess Lum!", "rating": "tp", "vanityurl": "urusei-yatsura", "copyright": "URUSEI YATSURA [SHINSOBAN] \u00a9 2006 Rumiko TAKAHASHl/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704900767, "has_gns": true, "num_gns": 17, "has_chapters": true, "num_chapters": 365, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 366, "chapter_last_num": 366, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5970-SeriesHeaders_UruseiYatsura_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1989-SeriesThumbnailsManga_UruseiYatsura_400x320.jpg", "label": null, "recommended_series_ids": "754,720,89,710,778,303,698,806", "latest_author": "Rumiko Takahashi", "title_sort": "urusei yatsura"}}, {"manga_series": {"id": 589, "updated_at": "2019-08-21T15:14:48.000-07:00", "manga_series_common_id": 589, "device_id": 4, "keyart": "img/manga_series_header/589-5983-SeriesHeaders_WorldNextDoor_2000x800_v3.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2329, "manga_imprint_id": null, "title": "The World Next Door", "synopsis": "", "tagline": null, "rating": "a", "vanityurl": "the-world-next-door", "copyright": "", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/589-5983-SeriesHeaders_WorldNextDoor_2000x800_v3.jpg", "link_img": "img/manga_series_link_img/589-th-2064-Series_Thumbnail_WorldNextDoor_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1596146463, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/589-5983-SeriesHeaders_WorldNextDoor_2000x800_v3.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/589-th-2064-Series_Thumbnail_WorldNextDoor_400x320.jpg", "label": null, "recommended_series_ids": "533,894,483,537,579,541", "latest_author": "Story by Sandra Lanz, Corey Warning and S.A. Farnham, Art by Zachary Sterling", "title_sort": "world next door"}}, {"manga_series": {"id": 590, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 590, "device_id": 4, "keyart": "img/manga_series_header/590-030319_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2338, "manga_imprint_id": null, "title": "The Last Saiyuki", "synopsis": "Her voice has the power to annihilate the world...", "tagline": "Her voice has the power to annihilate the world...", "rating": "t", "vanityurl": "the-last-saiyuki", "copyright": "SAIGO NO SAIYUKI \u00a9 2019 by Daijiro Nonoue/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/590-030319_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/590-th-030319_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/590-030319_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/590-th-030319_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "105,461,466,694,79", "latest_author": "Daijiro Nonoue", "title_sort": "last saiyuki"}}, {"manga_series": {"id": 591, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 591, "device_id": 4, "keyart": "img/manga_series_header/591-MHASB_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: School Briefs", "synopsis": "Prose short stories featuring the everyday school lives of My Hero Academia\u2019s fan-favorite characters.", "tagline": "Midoriya inherits the superpower of the world\u2019s greatest hero, but greatness won\u2019t come easy.", "rating": "a", "vanityurl": "my-hero-academia-school-briefs", "copyright": "BOKU NO HERO ACADEMIA YUUEI HAKUSHO \u00a9 2016 by Kohei Horikoshi, Anri Yoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/591-MHASB_2000x800.jpg", "link_img": "img/manga_series_link_img/591-th-MHASB_400x332.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1688580381, "has_gns": true, "num_gns": 6, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/591-MHASB_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/591-th-MHASB_400x332.jpg", "label": null, "recommended_series_ids": "461,922,496,648,938,10,80,299,446,466,566,249,391,471,821,589", "latest_author": "Original Story by Kohei Horikoshi, Written by Anri Yoshi", "title_sort": "my hero academia: school briefs"}}, {"manga_series": {"id": 593, "updated_at": "2023-04-05T08:45:45.000-07:00", "manga_series_common_id": 593, "device_id": 4, "keyart": "img/manga_series_keyart/2053-BF_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 549, "manga_imprint_id": null, "title": "Banana Fish", "synopsis": "VICE CITY: NEW YORK IN THE 80s...\r\n\r\nNature made Ash Lynx beautiful; nurture made him a cold ruthless killer. A runaway brought up as the adopted heir and sex toy of \"\"Papa\"\" Dino Golzine, Ash, now at the rebellious age of seventeen, forsakes the kingdom held out by the devil who raised him. But the hideous secret that drove Ash's older brother mad in Vietnam has suddenly fallen into Papa's insatiably ambitious hands--and it's exactly the wrong time for Eiji Okamura, a pure-hearted young photographer from Japan, to make Ash Lynx's acquaintance... Epic in scope, and one of the best-selling shojo titles of all time in Japan, Akimi Yoshida put an electric shock into the genre and gained a huge crossover audience through Banana Fish's stripped-down, non-stop style.", "tagline": "Nature made Ash beautiful. Nurture made him a killer!", "rating": "tp", "vanityurl": "banana-fish", "copyright": "BANANA FISH \u00a9 1987 Akimi YOSHIDA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096039, "has_gns": true, "num_gns": 19, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5954-SeriesHeaders_BananaFish_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1923-SeriesThumbnails_BananaFish_400x320.jpg", "label": null, "recommended_series_ids": "546,815,818,862,875,301,169,15,350,357,501", "latest_author": "Akimi Yoshida", "title_sort": "banana fish"}}, {"manga_series": {"id": 594, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 594, "device_id": 4, "keyart": "img/manga_series_header/594-031019_Page_Header_2000x800_SERIES_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2339, "manga_imprint_id": null, "title": "Yui Kamio Lets Loose", "synopsis": "As a child, Yui Kamio terrorized everyone in her path. That is, until a monk imbued a hair tie with the ability to repress her powers, giving birth to two different Yuis. When her hair is tied, she\u2019s the model student Yui in White. When it\u2019s let loose, the wild delinquent Yui in Black grabs the reins!", "tagline": "The creator of Nura: Rise of the Yokai Clan, delivers a comedy that isn\u2019t afraid to let loose!", "rating": "t", "vanityurl": "yui-kamio-lets-loose", "copyright": "KAMIO YUI HA KAMI WO YUI \u00a9 2019 by Hiroshi Shiibashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/594-031019_Page_Header_2000x800_SERIES_wm.jpg", "link_img": "img/manga_series_link_img/594-th-031019_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/594-031019_Page_Header_2000x800_SERIES_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/594-th-031019_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "546,347,79,477", "latest_author": "Hiroshi Shiibashi", "title_sort": "yui kamio lets loose"}}, {"manga_series": {"id": 595, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 595, "device_id": 4, "keyart": "img/manga_series_keyart/2061-SWWTRH_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2316, "manga_imprint_id": null, "title": "Snow White with the Red Hair", "synopsis": "Shirayuki is an herbalist famous for her naturally bright-red hair, and the prince of Tanbarun wants her all to himself! The prince from the neighboring kingdom, Zen, rescues her from her plight, and thus begins their love story.", "tagline": "A romantic retelling of a classic fairy tale about a beautiful herbalist and a lovestruck prince.", "rating": "t", "vanityurl": "snow-white-with-the-red-hair", "copyright": "Akagami no Shirayukihime \u00a9 Sorata Akiduki 2007/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706772957, "has_gns": true, "num_gns": 25, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5984-SeriesHeaders_SnowWhiteRedHair_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2091-SeriesThumbnailsManga_SnowWhiteRedHair_400x320.jpg", "label": null, "recommended_series_ids": "146,472,17,585,453", "latest_author": "Sorata Akiduki", "title_sort": "snow white with the red hair"}}, {"manga_series": {"id": 596, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 596, "device_id": 4, "keyart": "img/manga_series_header/596-jojo4_1024_410.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": null, "title": "JoJo\u2019s Bizarre Adventure: Part 4--Diamond Is Unbreakable", "synopsis": "The legendary Shonen Jump series is now available in deluxe hardcover editions featuring color pages! JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles.", "tagline": "There\u2019s a killer on the loose in Morioh, and Josuke and his friends are on the hunt!", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-4-diamond-is-unbreakable", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by LUCKY LAND COMMUNICATIONS/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/596-jojo4_1024_410.jpg", "link_img": "img/manga_series_link_img/596-th-EEEF6C76-3EA7-42A5-B717-2EF30F3F152F.jpeg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699998923, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/596-jojo4_1024_410.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/596-th-EEEF6C76-3EA7-42A5-B717-2EF30F3F152F.jpeg", "label": null, "recommended_series_ids": "22,10,339,376,469", "latest_author": "Hirohiko Araki", "title_sort": "jojo\u2019s bizarre adventure: part 4--diamond is unbreakable"}}, {"manga_series": {"id": 597, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 597, "device_id": 4, "keyart": "img/manga_series_keyart/2069-BR_AngelsBorder_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 688, "manga_imprint_id": null, "title": "Battle Royale: Angels' Border", "synopsis": "A graphic novel side story of the best-selling novel Battle Royale.", "tagline": "The original dystopian survival story!", "rating": "tp", "vanityurl": "battle-royale-angels-border", "copyright": "\u00a9 2012 KOUSHUN TAKAMI / MIOKO OHNISHI / YOUHEI OGUMA (AKITASHOTEN)", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1649889558, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5571-Tier06_SeriesHeaders_BattleRoyale_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/919-Tier06_SeriesThumbnails_BRoyale_400x320.jpg", "label": null, "recommended_series_ids": "403", "latest_author": "Story by Koushun Takami, Art by Mioko Ohnishi and Youhei Oguma", "title_sort": "battle royale: angels' border"}}, {"manga_series": {"id": 599, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 599, "device_id": 4, "keyart": "img/manga_series_header/599-050519_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2350, "manga_imprint_id": null, "title": "Samurai 8: The Tale of Hachimaru", "synopsis": "Becoming a samurai seems like an impossible dream for Hachimaru, a boy who can\u2019t even survive without the help of his father. But when a samurai cat appears before him, his whole life changes! A legendary creator and a rising manga star come together to bring you this science fiction samurai epic!", "tagline": "A new series written by Masashi Kishimoto, the creator of Naruto! With art by Akira Okubo! A futuristic tale of samurai adventure!", "rating": "t", "vanityurl": "samurai-8", "copyright": "SAMURAI 8 HACHIMARUDEN \u00a9 2019 by Masashi Kishimoto, Akira Okubo/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/599-050519_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/599-th-051219_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560020, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/599-050519_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/599-th-051219_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "448,461,546,466,694,1", "latest_author": "Story by Masashi Kishimoto, Art by Akira Okubo", "title_sort": "samurai 8: the tale of hachimaru"}}, {"manga_series": {"id": 600, "updated_at": "2024-01-25T13:11:08.000-08:00", "manga_series_common_id": 600, "device_id": 4, "keyart": "img/manga_series_keyart/2081-KomiCant_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2315, "manga_imprint_id": null, "title": "Komi Can\u2019t Communicate", "synopsis": "Socially anxious high school student Shoko Komi\u2019s greatest dream is to make some friends, but everyone at school mistakes her crippling social anxiety for cool reserve. Luckily she meets Tadano, a timid wallflower who decides to step out of his comfort zone in order to help her achieve her goal of making 100 friends.", "tagline": "The journey to 100 friends begins with a single conversation.", "rating": "t", "vanityurl": "komi-cant-communicate", "copyright": "COMI-SAN WA, COMYUSHO DESU. \u00a9 2016 Tomohito ODA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434372, "has_gns": true, "num_gns": 28, "has_chapters": true, "num_chapters": 442, "num_chapters_free": 6, "chapter_latest_pub_date": 1707260338, "chapter_latest_num": 443, "chapter_last_num": 443, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5992-SeriesHeaders_Komi_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2115-SeriesThumbnailsManga_Komi_400x320.jpg", "label": null, "recommended_series_ids": "218,785,836,303,157,153,843", "latest_author": "Story and Art by Tomohito Oda", "title_sort": "komi can\u2019t communicate"}}, {"manga_series": {"id": 603, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 603, "device_id": 4, "keyart": "img/manga_series_header/603-051919_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2354, "manga_imprint_id": null, "title": "Double Taisei", "synopsis": "Genius shogi player, Taisei Tendo has a split personality. He is the well-behaved \"Tai\" during the day, but turns into the freewheeling \"Sei\" during the night. Tai is about to participate in the professional qualifying tournament for shogi, but his world is suddenly turned upside-down when he switches places with Sei!", "tagline": "A shogi manga with all the right pieces!", "rating": "t", "vanityurl": "double-taisei", "copyright": "FUTARI NO TAISEI \u00a9 2019 by Kentaro Fukuda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/603-051919_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/603-th-WSJ_FutariNoTaisei_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560020, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/603-051919_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/603-th-WSJ_FutariNoTaisei_400x320.jpg", "label": null, "recommended_series_ids": "265,450,124,632", "latest_author": "Kentaro Fukuda", "title_sort": "double taisei"}}, {"manga_series": {"id": 604, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 604, "device_id": 4, "keyart": "img/manga_series_header/604-052619_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2357, "manga_imprint_id": null, "title": "Beast Children", "synopsis": "Sakura Shishigaya is the captain and only member of his middle school\u2019s rugby team. One day, he learns that his schoolmate Yukito is the son of his idol, the deceased rugby player \"The Beast\" Onotora Itsuki! Sakura relentlessly tries to get Yukito play rugby with him, but Yukito refuses. He says that if Sakura wants to play with him, he needs to go to a Hyakkengawa high school! But when Sakura gets there, Yukito isn\u2019t there! Instead, he finds a team started and funded by none other than Onotora Itsuki, \"The Beast\u2019s\" children.", "tagline": "Blood, guts and glory! Give it your all on the rugby field!", "rating": "t", "vanityurl": "beast-children", "copyright": "BEAST CHILDREN \u00a9 2019 by Kento Terasaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/604-052619_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/604-th-WSJ_BeastChildren_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/604-052619_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/604-th-WSJ_BeastChildren_400x320.jpg", "label": null, "recommended_series_ids": "470,223,450,454,755,499,129", "latest_author": "Kento Terasaka", "title_sort": "beast children"}}, {"manga_series": {"id": 605, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 605, "device_id": 4, "keyart": "img/manga_series_header/605-060219_Page_Header_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2358, "manga_imprint_id": null, "title": "Tokyo Shinobi Squad", "synopsis": "It is the year 2049. Tokyo has become the greatest center of crime in the world, and shinobi have come out into public view. As violence sweeps the underworld, Jin Narumi and his elite shinobi crew rescue the weak and destroy the wicked. A story of near-future sci-fi ninja action begins!", "tagline": "In a future lawless Tokyo, retribution is delivered by shinobi!", "rating": "t", "vanityurl": "tokyo-shinobi-squad", "copyright": "TOKYO SHINOBI SQUAD \u00a9 2019 by Yuki Tanaka, Kento Matsuura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/605-060219_Page_Header_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/605-th-WSJ_TokyoShinobiSquad_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/605-060219_Page_Header_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/605-th-WSJ_TokyoShinobiSquad_400x320.jpg", "label": null, "recommended_series_ids": "175,732,499,159", "latest_author": "Story by Yuki Tanaka, Art by Kento Matsuura", "title_sort": "tokyo shinobi squad"}}, {"manga_series": {"id": 606, "updated_at": "2023-09-07T17:26:09.000-07:00", "manga_series_common_id": 606, "device_id": 4, "keyart": "img/manga_series_keyart/2105-DSS_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2310, "manga_imprint_id": null, "title": "Daytime Shooting Star", "synopsis": "After arriving in Tokyo to live with her uncle, Suzume collapses in a nearby park where she had once seen a shooting star during the day. A handsome stranger brings her to her new home and tells her they\u2019ll meet again. Suzume starts her first day at her new high school sitting next to a boy who blushes furiously at her touch. And her homeroom teacher is none other than the handsome stranger!", "tagline": "An optimistic teen moves to Tokyo and finds her heart caught between two men!", "rating": "t", "vanityurl": "daytime-shooting-star", "copyright": "HIRUNAKA NO RYUSEI \u00a9 2011 by Mika Yamamori/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096045, "has_gns": true, "num_gns": 12, "has_chapters": true, "num_chapters": 78, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 78, "chapter_last_num": 78, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6000-SeriesHeaders_DaytimeShootingStar_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2136-SeriesThumbnails_DaytimeShootingStar_400x320.jpg", "label": null, "recommended_series_ids": "562,135,600,848,234,776,190", "latest_author": "Mika Yamamori", "title_sort": "daytime shooting star"}}, {"manga_series": {"id": 608, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 608, "device_id": 4, "keyart": "img/manga_series_keyart/2113-Beastars_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2318, "manga_imprint_id": null, "title": "BEASTARS", "synopsis": "At a high school where the students are literally divided into predators and prey, friendships maintain the fragile peace. Who among them will become a Beastar\u2014a hero destined to lead in a society naturally rife with mistrust?", "tagline": "At this high school, instead of jocks and nerds, the students are divided into predators and prey.", "rating": "tp", "vanityurl": "beastars", "copyright": "\u00a9 2017 PARU ITAGAKI (AKITASHOTEN)", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096046, "has_gns": true, "num_gns": 22, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6004-SeriesHeaders_BEASTARSv3_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2137-SeriesThumbnails_BEASTARS_400x320.jpg", "label": null, "recommended_series_ids": "91,609,92,21", "latest_author": "Paru Itagaki", "title_sort": "beastars"}}, {"manga_series": {"id": 609, "updated_at": "2019-08-20T14:30:18.000-07:00", "manga_series_common_id": 609, "device_id": 4, "keyart": "img/manga_series_keyart/2117-CotW_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2241, "manga_imprint_id": null, "title": "Children of the Whales", "synopsis": "In an endless sea of sand drifts the Mud Whale, a floating island city of clay and magic. In its chambers a small community clings to survival, cut off from its own history by the shadows of the past.", "tagline": "In this postapocalyptic fantasy, a sea of sand swallows everything but the past.", "rating": "tp", "vanityurl": "children-of-the-whales", "copyright": "\u00a9 2013 ABI UMEDA (AKITASHOTEN)", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705443698, "has_gns": true, "num_gns": 22, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5865-SeriesHeaders_ChildrenoftheWhales_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1688-SeriesThumbnailsManga_ChildrenoftheWhales_400x320.jpg", "label": null, "recommended_series_ids": "271,91,192", "latest_author": "Abi Umeda", "title_sort": "children of the whales"}}, {"manga_series": {"id": 347, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 347, "device_id": 4, "keyart": "img/manga_series_header/347-SJ_HiFiCluster_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2360, "manga_imprint_id": 1, "title": "Hi-Fi Cluster", "synopsis": "In a society where you can download Ability Labels to instantly acquire new skills ranging from cooking to butt kicking, it would seem that everyone is equal. Except that you need to qualify for the Abilities you download\u2014and be capable of using them. Naturally a black market forms around buying and selling the rarest and most restricted Abilities... And evil forces scheme to use them to take over the world!", "tagline": "Villains and heroes with downloadable abilities fight in a futuristic Tokyo!  ", "rating": "t", "vanityurl": "hi-fi-cluster", "copyright": "HI-FI CLUSTER \u00a9 2014 by Ippei Goto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/347-SJ_HiFiCluster_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/347-th-SJ_HiFiCluster_400x320_jpg", "subscription_type": "sj", "imprint_id": 1, "imprint_title": "Shonen Jump", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/347-SJ_HiFiCluster_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/347-th-SJ_HiFiCluster_400x320_jpg", "label": null, "recommended_series_ids": "466,627,5,477,312,594", "latest_author": "Ippei Goto", "title_sort": "hi-fi cluster"}}, {"manga_series": {"id": 611, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 611, "device_id": 4, "keyart": "img/manga_series_header/611-SeriesHeaders_MHSmash_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: Smash!!", "synopsis": "The superpowered society of My Hero Academia takes a hilarious turn in this reimagining of the best-selling series! Join Midoriya, All Might and all the aspiring heroes of U.A. High, plus memorable villains, in an irreverent take on the main events of the series, complete with funny gags, ridiculous jokes and superpowered humor!", "tagline": "Hilarious hijinks featuring the characters and story lines of My Hero Academia!", "rating": "t", "vanityurl": "my-hero-academia-smash", "copyright": "BOKU NO HERO ACADEMIA SMASH!! \u00a9 2015 by Kohei Horikoshi, Hirofumi Neda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/611-SeriesHeaders_MHSmash_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/611-th-SeriesThumbnailsManga_MHASmash_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1688580381, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/611-SeriesHeaders_MHSmash_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/611-th-SeriesThumbnailsManga_MHASmash_400x320_jpg", "label": null, "recommended_series_ids": "175,461,496,10,446,717,721", "latest_author": "Hirofumi Neda", "title_sort": "my hero academia: smash!!"}}, {"manga_series": {"id": 613, "updated_at": "2023-05-10T13:21:52.000-07:00", "manga_series_common_id": 613, "device_id": 4, "keyart": "img/manga_series_keyart/2133-CotL_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2312, "manga_imprint_id": null, "title": "Cats of the Louvre", "synopsis": "The world-renowned Louvre museum in Paris contains more than just the most famous works of art in history. At night, within its darkened galleries, an unseen and surreal world comes alive\u2014a world witnessed only by the small family of cats that lives in the attic. Until now\u2026\r\n\r\nTranslated by Tekkonkinkreet film director Michael Arias.", "tagline": "A surreal tale of the secret world of the cats of the Louvre, told by Eisner Award winner Taiyo Matsumoto.", "rating": "t", "vanityurl": "cats-of-the-louvre", "copyright": "LOUVRE NO NEKO \u00a9\ufe0f 2017 Taiyou MATSUMOTO / Futuropolis / Mus\u00e9e du Louvre \u00e9ditions, Paris ", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096043, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 18, "chapter_last_num": 18, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6018-SeriesHeaders_CatsInTheLouvre_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2201-SeriesThumbnails_CatsInTheLouvre_400x320.jpg", "label": null, "recommended_series_ids": "91,194,766,96,726,228,713", "latest_author": "Taiyo Matsumoto", "title_sort": "cats of the louvre"}}, {"manga_series": {"id": 614, "updated_at": "2023-05-10T13:21:52.000-07:00", "manga_series_common_id": 614, "device_id": 4, "keyart": "img/manga_series_keyart/2137-Levius_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2300, "manga_imprint_id": null, "title": "Levius", "synopsis": "It\u2019s the 19th century, and the world has entered the Era of Rebirth, recovering from the devastating flames of war. The sport of mechanical martial arts has galvanized the nations. Cybernetically augmented fighters turn their blood into steam and their bodies into brutal fighting\u2014and killing\u2014machines.\r\n\r\nYoung Levius is one of those arena battlers, hell-bent on winning in order to simply survive.", "tagline": "As society rises from the ashes of war, cybernetically augmented arena fighters battle for fame and fortune\u2026or die trying.", "rating": "tp", "vanityurl": "levius", "copyright": "LEVIUS \u00a9 2014 Haruhisa NAKATA/SHOGAKUKAN", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705602700, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 18, "chapter_last_num": 18, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6019-SeriesHeaders_Levius_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2202-SeriesThumbnailsManga_Levius_400x320.jpg", "label": null, "recommended_series_ids": "19,151,685,726,620,760", "latest_author": "Haruhisa Nakata", "title_sort": "levius"}}, {"manga_series": {"id": 615, "updated_at": "2019-08-26T12:31:36.000-07:00", "manga_series_common_id": 615, "device_id": 4, "keyart": "img/manga_series_keyart/2141-NGL_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2335, "manga_imprint_id": null, "title": "No Guns Life", "synopsis": "After the war, cyborg soldiers known as the Extended were discharged. Juzo Inui is one of them, a man whose body was transformed, his head replaced with a giant gun! With no memory of his previous life\u2014or who replaced his head and why\u2014Inui now scratches out a living in the dark streets of the city as a Resolver, taking on cases involving the Extended.", "tagline": "Ex-soldier Juzo Inui has one question\u2014who turned him into a cyborg and erased his memories?", "rating": "tp", "vanityurl": "no-guns-life", "copyright": "NO\u30fbGUNS\u30fbLIFE \u00a9 2014 by Tasuku Karasuma/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1679475090, "has_gns": true, "num_gns": 13, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6017-SeriesHeaders_NoGunsLife_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2197-SeriesThumbnails_NoGunsLife_400x320.jpg", "label": null, "recommended_series_ids": "150,151,617,317,401", "latest_author": "Story and Art by Tasuku Karasuma", "title_sort": "no guns life"}}, {"manga_series": {"id": 616, "updated_at": "2022-07-19T15:40:57.000-07:00", "manga_series_common_id": 616, "device_id": 4, "keyart": "img/manga_series_keyart/2145-WOTHH_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2325, "manga_imprint_id": null, "title": "The Way of the Househusband", "synopsis": "A former yakuza legend leaves it all behind to become your everyday househusband. But it\u2019s not easy to walk away from the gangster life, and what should be mundane household tasks are anything but!", "tagline": "It\u2019s a day in the life of a househusband\u2014only this one is the legendary yakuza \u201cthe Immortal Dragon\u201d!", "rating": "tp", "vanityurl": "the-way-of-the-househusband", "copyright": "\u00a9 Kousuke Oono 2018/ SHINCHOSHA Publishing Co., Ltd.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705443802, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6015-SeriesHeaders_WayoftheHouseHusband_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2198-SeriesThumbnails_WayoftheHouseHusband_400x320.jpg", "label": null, "recommended_series_ids": "179,498,249,391", "latest_author": "Kousuke Oono", "title_sort": "way of the househusband"}}, {"manga_series": {"id": 620, "updated_at": "2024-01-18T10:37:48.000-08:00", "manga_series_common_id": 620, "device_id": 4, "keyart": "img/manga_series_header/620-Header_DriftingClassroom_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 539, "manga_imprint_id": null, "title": "The Drifting Classroom: Perfect Edition", "synopsis": "In the aftermath of a massive earthquake, a Japanese elementary school is transported into a hostile world where the students and teachers are besieged by terrifying creatures and beset by madness.", "tagline": "In an instant, a school vanished from the Earth. This is their story. ", "rating": "tp", "vanityurl": "drifting-classroom-perfect-edition", "copyright": "UMEZZ PERFECTION! 8 HYORYU KYOSHITSU \u00a9 2007 Kazuo UMEZZ/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/620-Header_DriftingClassroom_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705603068, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 42, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 42, "chapter_last_num": 42, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/620-Header_DriftingClassroom_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/24-SeriesThumbnailsManga_TheDriftingClassroom_400x320.jpg", "label": null, "recommended_series_ids": "218,189,174,257,787,706,884,744", "latest_author": "Kazuo Umezz", "title_sort": "drifting classroom: perfect edition"}}, {"manga_series": {"id": 621, "updated_at": "2022-03-25T11:56:18.000-07:00", "manga_series_common_id": 621, "device_id": 4, "keyart": "img/manga_series_keyart/2165-TropicalFish_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2334, "manga_imprint_id": null, "title": "A Tropical Fish Yearns for Snow", "synopsis": "When her dad gets a job overseas, Konatsu Amano has to leave the Tokyo life she\u2019s always known and relocate to a small seaside town to stay with her aunt. The move also means starting a new school surrounded by complete strangers, and it\u2019s a lot to handle for a girl who has trouble with change. But on her first day in her new town, Konatsu is instantly drawn to Koyuki, an older girl who is the sole member of the Aquarium Club. Konatsu\u2019s introverted tendencies are hard for her to overcome, but maybe she\u2019s found something worth coming out of her shell for?", "tagline": "Sometimes you find what you yearn for\u2026", "rating": "t", "vanityurl": "a-tropical-fish-yearns-for-snow", "copyright": "\u00a9 Makoto Hagino 2017-2021 / KADOKAWA CORPORATION", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1659552039, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6032-SeriesHeaders_TropicalFishYearnsForSnow_2000x800_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2246-SeriesThumbnails_TropicalFishYearnsForSnow_400x320_jpg", "label": null, "recommended_series_ids": "497,155,729,506", "latest_author": "Makoto Hagino", "title_sort": "tropical fish yearns for snow"}}, {"manga_series": {"id": 622, "updated_at": "2019-10-28T15:58:24.000-07:00", "manga_series_common_id": 622, "device_id": 4, "keyart": "img/manga_series_keyart/2169-RoseKing_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1884, "manga_imprint_id": null, "title": "Requiem of the Rose King", "synopsis": "Richard, the ambitious third son of the House of York, believes he is cursed, damned from birth to eternal darkness. But is it truly fate that sets him on the path to personal destruction? Or his own tormented longings? Based on an early draft of Shakespeare\u2019s Richard III, Aya Kanno\u2019s dark fantasy finds the man who could be king standing between worlds, between classes, between good and evil.", "tagline": "A gothic-tinged drama that gives a new gender-bent twist to Shakespeare\u2019s Richard III. ", "rating": "t", "vanityurl": "requiem-of-the-rose-king", "copyright": "\u00a9 2014 AYA KANNO (AKITASHOTEN)", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687244990, "has_gns": true, "num_gns": 17, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5464-Tier04_SeriesHeaders_RRK_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/356-SeriesThumbnailsManga_REQ_400x320.jpg", "label": null, "recommended_series_ids": "193,160,172,392,85", "latest_author": "Aya Kanno", "title_sort": "requiem of the rose king"}}, {"manga_series": {"id": 623, "updated_at": "2020-01-22T15:21:09.000-08:00", "manga_series_common_id": 623, "device_id": 4, "keyart": "img/manga_series_header/623-SeriesHeaders_LeviusEST_2000x800_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2300, "manga_imprint_id": null, "title": "Levius/est", "synopsis": "It\u2019s the 19th century, and the world has entered the Era of Rebirth, recovering from the devastating flames of war. The sport of Mechanical Martial Arts has galvanized the nations. Cybernetically augmented fighters turn their blood into steam and their bodies into brutal fighting\u2014and killing\u2014machines.\r\n\r\nYoung Levius is one of those arena battlers, hell-bent on winning in order to simply survive.", "tagline": "As society rises from the ashes of war, cybernetically augmented arena fighters battle for fame and fortune\u2026or die trying.", "rating": "tp", "vanityurl": "levius-est", "copyright": "LEVIUS/EST \u00a9 2015 by Haruhisa Nakata/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/623-SeriesHeaders_LeviusEST_2000x800_jpg", "link_img": "img/manga_series_link_img/623-th-SeriesThumbnailsManga_LeviusEST_400x320_jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1679433678, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/623-SeriesHeaders_LeviusEST_2000x800_jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/623-th-SeriesThumbnailsManga_LeviusEST_400x320_jpg", "label": null, "recommended_series_ids": "200,620,553", "latest_author": "Haruhisa Nakata", "title_sort": "levius/est"}}, {"manga_series": {"id": 627, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 627, "device_id": 4, "keyart": "img/manga_series_header/627-082519_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2377, "manga_imprint_id": null, "title": "Mission: Yozakura Family", "synopsis": "Taiyo Asano has been on his own ever since his parents died and the only one who seems to care for him is his childhood friend and classmate, Mutsumi Yozakura. But Mutsumi has a secret--she is the head of a family of spies! And on top of that, her brother Kyoichiro is dangerously protective of her! To stop Kyoichiro from killing him, Taiyo and Mutsumi must take the ultimate leap--marriage! Because in the Yozakura family, family cannot kill family.", "tagline": "Romance! A crazy, overprotective brother! And... Spies?! ", "rating": "t", "vanityurl": "mission-yozakura-family", "copyright": "YOZAKURA-SANCHI NO DAISAKUSEN \u00a9 2019 by Hitsuji Gondaira/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/627-082519_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/627-th-082519_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663619, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/627-082519_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/627-th-082519_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "356,717,694,721,628,739,632,693", "latest_author": "Hitsuji Gondaira", "title_sort": "mission: yozakura family"}}, {"manga_series": {"id": 628, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 628, "device_id": 4, "keyart": "img/manga_series_header/628-090119_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2378, "manga_imprint_id": null, "title": "Mitama Security: Spirit Busters", "synopsis": "Rena Haze has possessed the ability to see spirits since she was a little girl, but instead of being frightened by them, she simply pretends they don\u2019t exist. Now in high school, Rena is being haunted by a line of nearly 100 spirits. The incredible length of her spirit line catches the attention of Mitama, a SecuREIty agent dead set on protecting her from the spirits she\u2019s so desperate to ignore. There's just one problem\u2014he's deathly afraid of spirits!", "tagline": "Rena's haunted by spirits, but when a strange guy comes to bust them, he may be more of a hindrance than a help! ", "rating": "t", "vanityurl": "mitama-security", "copyright": "MITAMA SECURETY \u00a9 2019 by Tsurun Hatomune/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/628-090119_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/628-th-mitamathumb_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/628-090119_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/628-th-mitamathumb_jpg", "label": null, "recommended_series_ids": "132,626,733,454,721,750,464", "latest_author": "Tsurun Hatomune", "title_sort": "mitama security: spirit busters"}}, {"manga_series": {"id": 632, "updated_at": "2023-11-03T09:47:25.000-07:00", "manga_series_common_id": 632, "device_id": 4, "keyart": "img/manga_series_header/632-SJ_SpyFamily_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2375, "manga_imprint_id": null, "title": "Spy x Family", "synopsis": "Master spy Twilight is unparalleled when it comes to going undercover on dangerous missions for the betterment of the world. But when he receives the ultimate assignment\u2014to get married and have a kid\u2014he may finally be in over his head!", "tagline": "An action-packed comedy about a fake family that includes a spy, an assassin and a telepath!", "rating": "tp", "vanityurl": "spy-x-family", "copyright": "SPYxFAMILY \u00a9 2019 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/632-SJ_SpyFamily_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/632-th-SJ_SpyFamily_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707437300, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/632-SJ_SpyFamily_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/632-th-SJ_SpyFamily_400x320_jpg", "label": null, "recommended_series_ids": "356,703,722,717,627,78,739,464", "latest_author": "Tatsuya Endo", "title_sort": "spy x family"}}, {"manga_series": {"id": 684, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 684, "device_id": 4, "keyart": "img/manga_series_header/684-120119_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2388, "manga_imprint_id": null, "title": "Zipman!!", "synopsis": "Kaname Tatara is a 17-year-old high schooler with superhuman strength who has idolized the superhero Jackman ever since he was a kid. His twin younger brother Koshiro is a genius who founded his own robotics company. One day, Koshiro dies an a mysterous accident, but then reappears before Kaname\u2026as a robot!", "tagline": "Zip up and kick robot butt!", "rating": "t", "vanityurl": "zipman", "copyright": "ZIPMAN!! \u00a9 2019 by Yusaku Shibata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/684-120119_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/684-th-120819_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/684-120119_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/684-th-120819_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "738,466,694,739,23", "latest_author": "Yusaku Shibata", "title_sort": "zipman!!"}}, {"manga_series": {"id": 687, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 687, "device_id": 4, "keyart": "img/manga_series_header/687-120819_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2389, "manga_imprint_id": null, "title": "Agravity Boys", "synopsis": "Space\u2014the final frontier. Four young men from the Freedom Federation are sent on a mission of intergalactic space exploration, only to get sucked into a black hole and stranded on the planet a-Jumbro. Thus begin their wacky adventures on an unexplored planet!", "tagline": "A bro-tastic space comedy adventure!", "rating": "tp", "vanityurl": "agravity-boys", "copyright": "AGRAVITY BOYS \u00a9 2019 by Atsushi Nakamura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/687-120819_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/687-th-120819_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1690475119, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/687-120819_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/687-th-120819_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "470,716,703,718,724,694,739,324", "latest_author": "Atsushi Nakamura", "title_sort": "agravity boys"}}, {"manga_series": {"id": 685, "updated_at": "2024-01-11T10:00:00.000-08:00", "manga_series_common_id": 685, "device_id": 4, "keyart": "img/manga_series_keyart/2221-P5_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2344, "manga_imprint_id": null, "title": "Persona 5", "synopsis": "After being arrested and having to transfer to a new high school in Tokyo, Akira Kurusu is given the goal of rehabilitation and awakened to a new power\u2014the power of one\u2019s true self, a Persona. Using his Persona and the mysterious navigation app Mementos, Akira and his friends take on the role of phantom thieves, saving people from the twisted desires of those around them.", "tagline": "Based on the popular video game, this manga\u2019s phantom thieves will steal your heart!", "rating": "tp", "vanityurl": "persona-5", "copyright": "PERSONA 5 \u00a9 2017 Hisato MURASAKI/SHOGAKUKAN   \u00a9 ATLUS \u00a9 SEGA All rights reserved.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707613210, "has_gns": true, "num_gns": 11, "has_chapters": true, "num_chapters": 93, "num_chapters_free": 6, "chapter_latest_pub_date": 1707613110, "chapter_latest_num": 78.1, "chapter_last_num": 78.1, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6045-SeriesHeaders_Persona5_2000x800_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2275-SeriesThumbnails_Persona5_400x320_jpg", "label": null, "recommended_series_ids": "218,302,505,541,896,760,744", "latest_author": "Story and Art by Hisato Murasaki, Based on the video game by Atlus", "title_sort": "persona 5"}}, {"manga_series": {"id": 686, "updated_at": "2021-07-09T13:14:01.000-07:00", "manga_series_common_id": 686, "device_id": 4, "keyart": "img/manga_series_header/686-SeriesHeaders_StarWars_2000x800_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2385, "manga_imprint_id": null, "title": "Star Wars: The Legends of Luke Skywalker Manga", "synopsis": "Jump into hyperspace with all-new Star Wars publishing!", "tagline": "Jump into hyperspace with all-new Star Wars publishing!", "rating": "tp", "vanityurl": "star-wars-luke-skywalker-manga", "copyright": "\u00a9 & TM 2017 LUCASFILM", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/686-SeriesHeaders_StarWars_2000x800_jpg", "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1685516457, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/686-SeriesHeaders_StarWars_2000x800_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2341-SeriesThumbnails_StarWars_400x320_jpg", "label": null, "recommended_series_ids": "461,922,894,1,414,417,421,460,467,855,856,108,109,110,111,573,574,575,576,578,773,779,789,905,926,697", "latest_author": "Original Story by Ken Liu, Adapted by Akira Himekawa, Haruichi, Subaru, Akira Fukaya, and Takashi Kisaki", "title_sort": "star wars: the legends of luke skywalker manga"}}, {"manga_series": {"id": 693, "updated_at": "2023-11-22T19:35:01.000-08:00", "manga_series_common_id": 693, "device_id": 4, "keyart": "img/manga_series_header/693-011920_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2391, "manga_imprint_id": null, "title": "Undead Unluck", "synopsis": "Tired of inadvertently killing people with her special ability Unluck, Fuuko Izumo sets out to end it all. But when she meets Andy, a man who longs for death but can\u2019t die, she finds a reason to live\u2014and he finds someone capable of giving him the death he\u2019s been longing for.", "tagline": "What happens when an unlucky girl meets an undead guy? Pure chaos! ", "rating": "tp", "vanityurl": "undead-unluck", "copyright": "UNDEAD UNLUCK \u00a9 2020 by Yoshifumi Tozuka/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/693-011920_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/693-th-011920_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663623, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/693-011920_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/693-th-011920_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "700,496,138,717,628,732,739,632", "latest_author": "Yoshifumi Tozuka", "title_sort": "undead unluck"}}, {"manga_series": {"id": 689, "updated_at": "2023-05-10T13:21:52.000-07:00", "manga_series_common_id": 689, "device_id": 4, "keyart": "img/manga_series_keyart/2233-Hayate_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 486, "manga_imprint_id": null, "title": "Hayate the Combat Butler", "synopsis": "Since the tender age of nine, Hayate Ayasaki has busted his behind at various part-time jobs to support his degenerate gambler parents. And how do they repay their son\u2019s selfless generosity? By selling his organs to the yakuza to cover their debts! But fate throws Hayate a bone\u2026sort of. Now the butler of a wealthy young lady, Hayate can finally pay back his debts, and it\u2019ll only take him 40 years to do it.", "tagline": "For Hayate, the money may run out, but the gags never do!", "rating": "tp", "vanityurl": "hayate-the-combat-butler", "copyright": "HAYATE NO GOTOKU! \u00a9 2005 Kenjiro HATA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707465875, "has_gns": true, "num_gns": 42, "has_chapters": true, "num_chapters": 448, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 448, "chapter_last_num": 448, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5597-Tier07_Headers_Hayate_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/5-SeriesThumbnailsManga_HAY_400x320.jpg", "label": null, "recommended_series_ids": "765,725,709,257,710,685,541,585", "latest_author": "Kenjiro Hata", "title_sort": "hayate the combat butler"}}, {"manga_series": {"id": 694, "updated_at": "2024-01-05T06:59:00.000-08:00", "manga_series_common_id": 694, "device_id": 4, "keyart": "img/manga_series_header/694-012620_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2392, "manga_imprint_id": null, "title": "Mashle: Magic and Muscles", "synopsis": "In the magic realm, magic is everything\u2014everyone can use it, and one\u2019s skill determines their social status . Deep in the forest, oblivious to the ways of the world, lives Mash. Thanks to his daily training, he\u2019s become a fitness god. When Mash is discovered, he has no choice but to enroll in magic school where he must beat the competition without revealing his secret\u2014he can\u2019t use magic!", "tagline": "Can muscles crush magic?!", "rating": "t", "vanityurl": "mashle", "copyright": "MASHLE \u00a9 2020 by Hajime Komoto/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/694-012620_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/694-th-012620_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707468229, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/694-012620_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/694-th-012620_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "703,138,540,717,732,739,712,693", "latest_author": "Hajime Komoto", "title_sort": "mashle: magic and muscles"}}, {"manga_series": {"id": 699, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 699, "device_id": 4, "keyart": "img/manga_series_header/699-020220_Page_Header_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2393, "manga_imprint_id": null, "title": "Guardian of the Witch", "synopsis": "Only witches possess the power to stand up to the Evils overrunning the world. But the power of the witches is just as dark as the Evils themselves. One witch, Manasfa, along with her guardian, Fafner, fights against her fate of succumbing to the Evils\u2019 curse by seeking a cure that will save witches everywhere!", "tagline": "In a world full of Evils, humanity's only hope is the inhuman power of the witches.", "rating": "t", "vanityurl": "guardian-of-the-witch", "copyright": "MAJO NO MORIBITO \u00a9 2020 by Asahi Sakano/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/699-020220_Page_Header_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/699-th-020220_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560022, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/699-020220_Page_Header_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/699-th-020220_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "448,105,461,703,312,781", "latest_author": "Asahi Sakano", "title_sort": "guardian of the witch"}}, {"manga_series": {"id": 695, "updated_at": "2023-12-01T16:28:34.000-08:00", "manga_series_common_id": 695, "device_id": 4, "keyart": "img/manga_series_keyart/2253-LMLMN_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2367, "manga_imprint_id": null, "title": "Love Me, Love Me Not", "synopsis": "Fast friends Yuna and Akari are complete opposites\u2014Yuna is an idealist, while Akari is a realist. When lady-killer Rio and the oblivious Kazuomi join their ranks, love and friendship become quite complicated!", "tagline": "A new romance from the leading shojo manga creator of Ao Haru Ride!", "rating": "t", "vanityurl": "love-me-love-me-not", "copyright": "OMOI, OMOWARE, FURI, FURARE \u00a9 2015 by Io Sakisaka/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1701476914, "has_gns": true, "num_gns": 12, "has_chapters": true, "num_chapters": 48, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 48, "chapter_last_num": 48, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6065-SeriesHeaders_LoveMeLoveMeNot_2000x800_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2339-SeriesThumbManga_LoveMeLoveMeNot_400x320_jpg", "label": null, "recommended_series_ids": "562,436,709,234,776,873,190,843", "latest_author": "Io Sakisaka", "title_sort": "love me, love me not"}}, {"manga_series": {"id": 697, "updated_at": "2020-02-19T11:48:50.000-08:00", "manga_series_common_id": 697, "device_id": 4, "keyart": "img/manga_series_keyart/2261-TransformersManga_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2337, "manga_imprint_id": null, "title": "Transformers: The Manga", "synopsis": "The Autobots and the Decepticons have been locked in a brutal civil war for eons, and now their battle has come to Earth! The Autobots seek peace and coexistence, while the Decepticons seek power and control. Earth and its populace are caught in the middle as these mighty factions go head-to-head. Transformers took the world by storm shortly after their debut, and these previously uncollected stories were a vital part of that takeover!", "tagline": "One of the world\u2019s most popular franchises, delighting fans for 35 years!", "rating": "a", "vanityurl": "transformers-the-manga", "copyright": "TRANSFORMERS THE COMICS \u00a9 MASUMI KANEDA \u00a9 BAN MAGAMI Originally released in Japan by HERO-X", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1619707150, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6040-SeriesHeaders_Transformers_v4_2000x800_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2265-SeriesThumbnails_Transformers_v3_400x320_jpg", "label": null, "recommended_series_ids": "108,109,110,111,573,574,575,576,578,773,779,789,905,926,483,537,579,422,128,133,158,247,248,256,286,326,489", "latest_author": "Story by Masumi Kaneda, Art by Ban Magami", "title_sort": "transformers: the manga"}}, {"manga_series": {"id": 698, "updated_at": "2023-05-10T13:21:52.000-07:00", "manga_series_common_id": 698, "device_id": 4, "keyart": "img/manga_series_keyart/2265-Rinne_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1228, "manga_imprint_id": null, "title": "RIN-NE", "synopsis": "After a mysterious encounter in her childhood, Sakura Mamiya gained the power to see ghosts. Now a teenager, she just wishes the ghosts would leave her alone! Then one day she meets Rinne Rokudo, a boy who is far more than what he seems.", "tagline": "Manga legend Rumiko Takahashi\u2019s lighthearted tale of a girl who can see ghosts and a boy from the beyond.", "rating": "tp", "vanityurl": "rin-ne", "copyright": "KYOKAI NO RINNE \u00a9 2009 Rumiko TAKAHASHI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1683750112, "has_gns": true, "num_gns": 40, "has_chapters": true, "num_chapters": 398, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 398, "chapter_last_num": 398, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5444-Tier03_SeriesHeader_RIN_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/239-Tier06_SeriesThumbnails_RIN_400x320.jpg", "label": null, "recommended_series_ids": "765,720,89,207,778,303,541,806", "latest_author": "Rumiko Takahashi", "title_sort": "rin-ne"}}, {"manga_series": {"id": 701, "updated_at": "2020-04-07T08:55:47.000-07:00", "manga_series_common_id": 701, "device_id": 4, "keyart": "img/manga_series_keyart/2269-PrinceFreya_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2320, "manga_imprint_id": null, "title": "Prince Freya", "synopsis": "The powerful kingdom of Sigurd has slowly been conquering all the lands that share its borders, and now it has turned its voracious attention to the small, resource-rich Tyr. Tyr cannot hope to match Sigurd in strength, so in order to survive, it must rely on the intelligence, skill and cunning of its prince and his loyal knights. But should their prince fall, so too shall Tyr\u2026", "tagline": "To save her kingdom, a simple village girl must live a royal lie.", "rating": "tp", "vanityurl": "prince-freya", "copyright": "Itsuwari no Freya \u00a9 Keiko Ishihara 2018/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707206952, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6077-SeriesHeaders_PrinceFreya_2000x800_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2357-SeriesThumbnails_PrinceFreya_400x320_jpg", "label": null, "recommended_series_ids": "146,89,296,595,231,275", "latest_author": "Keiko Ishihara", "title_sort": "prince freya"}}, {"manga_series": {"id": 690, "updated_at": "2020-05-13T16:30:40.000-07:00", "manga_series_common_id": 690, "device_id": 4, "keyart": "img/manga_series_keyart/2273-OPAce_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 630, "manga_imprint_id": null, "title": "One Piece Novels", "synopsis": "Get the backstory on Luffy\u2019s brother Ace! This volume contains the origin story of Luffy\u2019s adopted brother Ace, and tells of his of his thrilling quest for the legendary One Piece treasure.", "tagline": "Join Monkey D. Luffy and his swashbuckling crew in their search for the ultimate treasure, the One Piece.", "rating": "a", "vanityurl": "one-piece-novels", "copyright": "ONE PIECE NOVEL A \u00a9 2018 by Eiichiro Oda, Sho Hinata/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1599587694, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5265-SeriesHeaders_OP_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/526-SeriesThumb_OP_400x320.png", "label": null, "recommended_series_ids": "448,8,293,691,461,922,496,648,938,10,80,299,446,466,566,138,452,399,520,571,591,611,748,868,1,414,417,421,460,467,855,856", "latest_author": "Original Concept by Eiichiro Oda, Written by Tatsuya Hamazaki", "title_sort": "one piece novels"}}, {"manga_series": {"id": 702, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 702, "device_id": 4, "keyart": "img/manga_series_keyart/2277-BlueFlag_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2362, "manga_imprint_id": null, "title": "Blue Flag", "synopsis": "It\u2019s the last year of high school, and love is in the air. Romantic feelings that have been building up over years of friendship come to light. When Taichi\u2019s classmate Futaba asks him to help her confess to his best friend, Toma, it sparks the catalyst that begins the sweet and heart-wrenching journey of their third and final year of high school.", "tagline": "An unexpected love quadrangle with a dash of unrequited love.", "rating": "tp", "vanityurl": "blue-flag", "copyright": "AO NO FLAG \u00a9 2017 by KAITO/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6076-SeriesHeaders_BlueFlag_2000x800_jpg_wm", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2356-SeriesThumbnails_BlueFlag_400x320_jpg", "label": null, "recommended_series_ids": "265,434,223,647,450,180,492", "latest_author": "KAITO", "title_sort": "blue flag"}}, {"manga_series": {"id": 703, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 703, "device_id": 4, "keyart": "img/manga_series_header/703-081620_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2396, "manga_imprint_id": null, "title": "Burn the Witch", "synopsis": "Behind the world you think you know lies a land of magic and fairy tales\u2014but Reverse London isn\u2019t the pretty picture that\u2019s painted in children\u2019s books. Fairy tales have teeth, and the dedicated agents of Wing Bind are the only thing standing between you and the real story.", "tagline": "Special limited series by Bleach mangaka, Tite Kubo!", "rating": "t", "vanityurl": "burn-the-witch", "copyright": "BURN THE WITCH \u00a9 2018 by Tite Kubo/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/703-081620_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/703-th-081620_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560024, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/703-081620_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/703-th-081620_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "8,9,722,842,694,371,753,159", "latest_author": "Tite Kubo", "title_sort": "burn the witch"}}, {"manga_series": {"id": 707, "updated_at": "2023-04-14T17:23:00.000-07:00", "manga_series_common_id": 707, "device_id": 4, "keyart": "img/manga_series_header/707-041220_PageHeader_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2397, "manga_imprint_id": null, "title": "Moriking", "synopsis": "Shota Aikawa loves bugs. His sister, Shoko, hates them. One summer, Shota takes on the responsibility of raising Moriking, a rhinoceros beetle. But when the larva emerges from its pupa as an attractive man with a horn and crown on his head, Shota\u2019s summer becomes a lot more interesting! And Shoko\u2019s a lot more miserable\u2026", "tagline": "The king of insects will sweep you off your feet! You're going to larva this manga!", "rating": "t", "vanityurl": "moriking", "copyright": "SHINRIN OHJA MORIKING \u00a9 2020 by Tomohiro Hasegawa/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/707-041220_PageHeader_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/707-th-041220_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1681518180, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/707-041220_PageHeader_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/707-th-041220_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "132,724,717,694,721,628,693", "latest_author": "Tomohiro Hasegawa", "title_sort": "moriking"}}, {"manga_series": {"id": 711, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 711, "device_id": 4, "keyart": "img/manga_series_header/711-042620_PageHeader_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2398, "manga_imprint_id": null, "title": "Bone Collection", "synopsis": "Kazami Jinai is hopeless exorcist who isn't good at anything with one exception: he can use a forbidden spell that gives him access to a yokai's power! One fateful day, Kazami meets the beautiful Paira, one of the most powerful yokai around! But she doesn't plan on wreaking havoc on humans... She wants to become one herself!", "tagline": "Grow a backbone and tap into your inner exorcist powers with this exciting new manga!", "rating": "t", "vanityurl": "bone-collection", "copyright": "BONE COLLECTION \u00a9 2020 by Jun Kirarazaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/711-042620_PageHeader_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/711-th-042620_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560022, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/711-042620_PageHeader_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/711-th-042620_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "716,283,722,717,739", "latest_author": "Jun Kirarazaka", "title_sort": "bone collection"}}, {"manga_series": {"id": 712, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 712, "device_id": 4, "keyart": "img/manga_series_header/712-051720_SJBanners_PageHeader_2000x800_jpg_wm", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2399, "manga_imprint_id": null, "title": "Time Paradox Ghostwriter", "synopsis": "A struggling manga artist is about to give up on his dreams until lightning strikes and his destiny is forever changed. What would you do if you found an issue of Shonen Jump from ten years in the future in your microwave?\r\n", "tagline": "The future of Shonen Jump manga is here! Literally! In the microwave!", "rating": "t", "vanityurl": "time-paradox-ghostwriter", "copyright": "TIME PARADOX GHOSTWRITER \u00a9 2020 by Kenji Ichima, Tsunehiro Date/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/712-051720_SJBanners_PageHeader_2000x800_jpg_wm", "link_img": "img/manga_series_link_img/712-th-051720_SJBanners_Thumbnail_400x320_jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560022, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/712-051720_SJBanners_PageHeader_2000x800_jpg_wm", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/712-th-051720_SJBanners_Thumbnail_400x320_jpg", "label": null, "recommended_series_ids": "7,496,791,632,552", "latest_author": "Story by Kenji Ichima, Art by Tsunehiro Date", "title_sort": "time paradox ghostwriter"}}, {"manga_series": {"id": 705, "updated_at": "2023-09-07T17:28:43.000-07:00", "manga_series_common_id": 705, "device_id": 4, "keyart": "img/manga_series_keyart/2301-NotYourIdol_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2373, "manga_imprint_id": null, "title": "Not Your Idol", "synopsis": "After that day, she stopped being a girl.\r\n\r\n\r\n\r\nIn the wake of an assault, Nina Kamiyama, a former idol in the group Pure Club, shuns her femininity and starts dressing as a boy. At high school she keeps to herself, but fellow student Hikaru Horiuchi realizes who she is. What secrets is she keeping? The shocking drama starts.", "tagline": "A psychological suspense series about a girl who has given up her life as an idol after being assaulted by a fan.", "rating": "tp", "vanityurl": "not-your-idol", "copyright": "SAYONARA MINI SKIRT \u00a9 2018 by Aoi Makino/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694132923, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6090-SeriesHeaders_NotYourIdol_2000x800_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2380-SeriesThumbnails_NotYourIdol_400x320_jpg", "label": null, "recommended_series_ids": "606,725,836,848,835,729,97", "latest_author": "Aoi Makino", "title_sort": "not your idol"}}, {"manga_series": {"id": 706, "updated_at": "2023-08-28T15:23:39.000-07:00", "manga_series_common_id": 706, "device_id": 4, "keyart": "img/manga_series_header/706-SeriesHeaders_KingdomOfTheGods_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2371, "manga_imprint_id": null, "title": "The Kingdom of the Gods", "synopsis": "Years of war and famine and have plunged Joseon into chaos. Young Prince Yi Moon, after losing all his bodyguards to an assassination attempt, has no choice but to turn to the mountain bandit Jae-ha for help. But as the unlikely pair race to find safety in a world gone mad, it becomes horrifyingly clear that humans aren\u2019t the only thing they must fear!", "tagline": "Discover the comic that inspired the Netflix Original zombie series Kingdom! ", "rating": "tp", "vanityurl": "the-kingdom-of-the-gods", "copyright": "BURNING HELL KAMI NO KUNI \u00a9 2015 In-wan YOUN, Eun-hee KIM, Kyung-il YANG/SHOGAKUKAN", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/706-SeriesHeaders_KingdomOfTheGods_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1701387213, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 8, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 2.4, "chapter_last_num": 2.4, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/706-SeriesHeaders_KingdomOfTheGods_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2404-SeriesThumbnails_KingdomOfTheGods_400x320_jpg", "label": null, "recommended_series_ids": "271,754,881,614,787,620,744", "latest_author": "Original Concept by Eun-hee Kim, Story by In-Wan Youn, Art by Kyung-Il Yang", "title_sort": "kingdom of the gods"}}, {"manga_series": {"id": 709, "updated_at": "2024-02-08T10:00:00.000-08:00", "manga_series_common_id": 709, "device_id": 4, "keyart": "img/manga_series_keyart/2309-HDWR_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2342, "manga_imprint_id": null, "title": "How Do We Relationship?", "synopsis": "Shy Miwa has always dreamed of finding love, but living in small-town Japan made finding the right match difficult\u2014especially since she likes girls! Even going away to college didn\u2019t seem to increase her romantic odds until one day her outgoing classmate Saeko suggests they might as well start dating each other since it\u2019s not like either of them have other options. At first it seems like things won\u2019t work out as their personalities clash and misunderstandings abound. But when their casual friendship starts to become something more Miwa begins to wonder\u2014can a pragmatic proposal lead to true love?", "tagline": "A romance of convenience between two college women soon becomes the real thing.", "rating": "tp", "vanityurl": "how-do-we-relationship", "copyright": "TSUKIATTE AGETEMO IIKANA \u00a9 2019 TAMIFULL/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707415211, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 114, "num_chapters_free": 6, "chapter_latest_pub_date": 1707415170, "chapter_latest_num": 93, "chapter_last_num": 114, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6091-SeriesHeaders_HowDoWeRelationship_2000x800_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2381-SeriesThumbnailsManga_HowDoWeRelationship_400x320_jpg", "label": "New Library Chs.! ", "recommended_series_ids": "497,725,901,221,169,157,834,182", "latest_author": "Tamifull", "title_sort": "how do we relationship?"}}, {"manga_series": {"id": 708, "updated_at": "2020-05-14T12:11:40.000-07:00", "manga_series_common_id": 708, "device_id": 4, "keyart": "img/manga_series_keyart/2313-TokyoDBD_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2394, "manga_imprint_id": null, "title": "Tokyo: Day by Day", "synopsis": "Discover one of the world\u2019s most exhilarating cities! Beloved for its unique culture, tasty food, iconic shops, and fashion, Tokyo is a fascinating place to explore. From ramen and flower parks, to hidden bars and novelty cafes, Tokyo: Day by Day is jam-packed with fresh ideas and inspiring photography.", "tagline": "", "rating": "a", "vanityurl": "tokyo-day-by-day", "copyright": "\u00a9 2018 RETRIP", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1675928143, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/2313-TokyoDBD_SeriesBrick_940x332_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2382-Thumb_TokyoDaybyDay_v2_400x320_jpg", "label": null, "recommended_series_ids": "1,414,417,421,460,467,855,856,108,109,110,111,573,574,575,576,578,773,779,789,905,926,745", "latest_author": "Isabella Huang", "title_sort": "tokyo: day by day"}}, {"manga_series": {"id": 713, "updated_at": "2023-05-10T13:21:53.000-07:00", "manga_series_common_id": 713, "device_id": 4, "keyart": "img/manga_series_keyart/2321-TK_SeriesBrick_940x332_jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 609, "manga_imprint_id": null, "title": "TEKKONKINKREET: Black & White", "synopsis": "Orphaned on the mean streets of Treasure Town, lost boys Black and White must mug, steal and fight to survive. Around them moves a world of corruption and loneliness, small-time crooks and neurotic police officers, and a band of sadistic yakuza who have plans for their once-fair city. Can they rise above their environment? Surreal manga influenced by European comics.", "tagline": "Punk rock meets fine art on the mean streets of Treasure Town.", "rating": "tp", "vanityurl": "tekkonkinkreet", "copyright": "TEKKON KINKREET ALL IN ONE \u00a9 2007 Taiyo MATSUMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1701114821, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 32, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 32, "chapter_last_num": 32, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5596-Tier07_Headers_TekkonKinkreet_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/936-SeriesThumbnailsManga_TEK_400x320.jpg", "label": null, "recommended_series_ids": "166,531,151,617,766,726,228", "latest_author": "Taiyo Matsumoto", "title_sort": "tekkonkinkreet: black & white"}}, {"manga_series": {"id": 717, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 717, "device_id": 4, "keyart": "img/manga_series_header/717-062120_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2404, "manga_imprint_id": null, "title": "Magu-chan: God of Destruction", "synopsis": "Long, long ago, the Gods of Chaos were worshipped and feared all over the world. One in particular, the God of Destruction Mag Menuek, was the most fearsome of all. But his reign ended when the Holy Knights sealed him away inside a gem for what they thought was forever\u2026until one day, eons later, when that gem washes up on the shores of a rural seaside town in Japan and is picked up by a young girl named Ruru.", "tagline": "Foolish lowly humans! A washed-up god of destruction finds the human world quite perplexing.", "rating": "t", "vanityurl": "magu-chan-god-of-destruction", "copyright": "HAKAISHIN MAGU-CHAN \u00a9 2020 by Kei Kamiki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/717-062120_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/717-th-062120_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096071, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/717-062120_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/717-th-062120_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "687,648,446,362,795,284,750,324", "latest_author": "Story and Art by Kei Kamiki", "title_sort": "magu-chan: god of destruction"}}, {"manga_series": {"id": 691, "updated_at": "2020-07-14T09:21:12.000-07:00", "manga_series_common_id": 691, "device_id": 4, "keyart": "img/manga_series_header/691-8_SeriesHeaders_Bleach_v3_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 657, "manga_imprint_id": null, "title": "Bleach: Can\u2019t Fear Your Own World", "synopsis": "The Quincies\u2019 Thousand Year Blood War is over, but the embers of turmoil still smolder in the Soul Society. Tokinada Tsunayashiro, elevated to head of his clan after a slew of assassinations take out every other claimant to the title, has a grand plan to create a new Soul King. His dark ambitions soon sow the seeds of a new total war across the realms, but all is not lost. There is one unlikely Soul Reaper who holds the key to defusing the conflict\u2014Shuhei Hisagi, Assistant Captain of the Ninth Company and reporter for the Seireitei Bulletin!", "tagline": "Part-time student, full-time Soul Reaper, Ichigo is one of the chosen few guardians of the afterlife.", "rating": "a", "vanityurl": "bleach-cant-fear-your-own-world", "copyright": "BLEACH CAN'T FEAR YOUR OWN WORLD \u00a9 2017 by Tite Kubo, Ryohgo Narita/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/691-8_SeriesHeaders_Bleach_v3_2000x800.jpg", "link_img": "img/manga_series_link_img/691-th-106_SeriesThumbnailsManga_BLH_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694625315, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/691-8_SeriesHeaders_Bleach_v3_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/691-th-106_SeriesThumbnailsManga_BLH_400x320.jpg", "label": null, "recommended_series_ids": "105,703,580,851,9,801,1,414,417,421,460,467,855,856,5,690,904,910,483,537,579", "latest_author": "Original Story by Tite Kubo, Written by Ryohgo Narita", "title_sort": "bleach: can\u2019t fear your own world"}}, {"manga_series": {"id": 718, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 718, "device_id": 4, "keyart": "img/manga_series_header/718-062820_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2405, "manga_imprint_id": null, "title": "Hard-Boiled Cop and Dolphin", "synopsis": "Boyle Samejima is a tough-as-nails cop with a love for hard-boiled action. He's so hard-boiled that his internal monologue boxes have blood splatters on them! But after he punches a suspect in the middle of a hostage situation, he's shipped off to the remote island of Anegashima near Okinawa...pretty much the middle of nowhere and the complete opposite of hard-boiled. But soon after he arrives, things take an interesting turn when he's asked to help with a case involving the mass disappearance of a cult that worships a little girl who is said to have been raised by a dolphin. Furthermore, that girl is in the precinct's custody. But when Samejima arrives for his first day of work, he's faced with the shock of his life! His new partner, the father of that little girl, really is a dolphin! It's okay, though, the dolphin can walk on land and has two hands...and can talk.", "tagline": "Ryuhei Tamura brings you the fishiest cop manga to ever hit Shonen Jump!", "rating": "t", "vanityurl": "hard-boiled-cop-and-dolphin", "copyright": "SHAKUNETSU NO NIRAIKANAI \u00a9 2020 by Ryuhei Tamura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/718-062820_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/718-th-062820_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/718-062820_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/718-th-062820_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "356,733,520,624,249,632,750,693", "latest_author": "Ryuhei Tamura", "title_sort": "hard-boiled cop and dolphin"}}, {"manga_series": {"id": 721, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 721, "device_id": 4, "keyart": "img/manga_series_header/721-070520_PageHeader_SeriesOnly_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2408, "manga_imprint_id": null, "title": "Me & Roboco", "synopsis": "In a world where most families own a cute maid robot, average elementary kid Bondo hopes for one of his own. But the robot who shows up is anything but average! Meet Roboco\u2014the wackiest, most powerful maid imaginable!", "tagline": "Roboco Quiz! How crazy is this maid?!", "rating": "t", "vanityurl": "me-and-roboco", "copyright": "BOKU TO ROBOCO \u00a9 2020 by Shuhei Miyazaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/721-070520_PageHeader_SeriesOnly_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/721-th-070520_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663626, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/721-070520_PageHeader_SeriesOnly_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/721-th-070520_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "738,647,718,733,694,707,624,235", "latest_author": "Shuhei Miyazaki", "title_sort": "me & roboco"}}, {"manga_series": {"id": 722, "updated_at": "2023-11-06T13:44:04.000-08:00", "manga_series_common_id": 722, "device_id": 4, "keyart": "img/manga_series_header/722-071220_PageHeader_GhostGirl_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2409, "manga_imprint_id": null, "title": "Ghost Reaper Girl", "synopsis": "Chlo\u00e9 has dreamed of being a glamorous actress ever since she was little. But being the ripe old age of 28 might be working against her, as are her spontaneous displays of violence! But not all hope is lost\u2014she might be perfect for the role offered by a mysterious and charming new man in her life. Can Chlo\u00e9 become the Ghost Reaper Girl and take down the evil spirits that have escaped from Hades?", "tagline": "The latest from the mangaka of Rosario+Vampire! A scrappy girl\u2019s had it with grabby ghosts and fights back! Note: At the creator's request, this series will read left-to-right.", "rating": "tp", "vanityurl": "ghost-reaper-girl", "copyright": "GHOST GIRL \u00a9 2020 by Akissa Saik\u00e9/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": "img/manga_series_header/722-071220_PageHeader_GhostGirl_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/722-th-071220_Thumbnail_GhostGirl_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434621, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/722-071220_PageHeader_GhostGirl_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/722-th-071220_Thumbnail_GhostGirl_400x320.jpg", "label": null, "recommended_series_ids": "716,8,105,703,694,732,78,781", "latest_author": "Akissa Saik\u00e9", "title_sort": "ghost reaper girl"}}, {"manga_series": {"id": 720, "updated_at": "2023-10-31T11:43:02.000-07:00", "manga_series_common_id": 720, "device_id": 4, "keyart": "img/manga_series_header/720-Header_FushiYugiByakkoSenki_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 556, "manga_imprint_id": null, "title": "Fushigi Y\u00fbgi: Byakko Senki", "synopsis": "The year is 1923. Suzuno Osugi\u2019s father Takao warns her to stay away from The Universe of the Four Gods, telling her it\u2019s a book that only men can touch. Takao worked with late Einosuke Okuda, who translated its text. He knows that in order to enact its story, the book needs one last heroine: the priestess of Byakko!", "tagline": "The final Fushigi Y\u00fbgi story in the Universe of the Four Gods begins!", "rating": "tp", "vanityurl": "fushigi-yugi-byakko-senki", "copyright": "FUSHIGI YUGI BYAKKO SENKI\u00a9 2018 Yuu WATASE/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/720-Header_FushiYugiByakkoSenki_2000x800.jpg", "link_img": "img/manga_series_link_img/720-th-Thumb_FYByakkoSenki_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1698777782, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 4, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 4, "chapter_last_num": 4, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/720-Header_FushiYugiByakkoSenki_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/720-th-Thumb_FYByakkoSenki_400x320.jpg", "label": null, "recommended_series_ids": "84,87,229,777,778,742", "latest_author": "Yuu Watase", "title_sort": "fushigi y\u00fbgi: byakko senki"}}, {"manga_series": {"id": 724, "updated_at": "2024-01-26T11:04:43.000-08:00", "manga_series_common_id": 724, "device_id": 4, "keyart": "img/manga_series_header/724-072620_PageHeader_Kaiju8_2000x800_copy_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2411, "manga_imprint_id": null, "title": "Kaiju No. 8", "synopsis": "With the highest kaiju-emergence rates in the world, Japan is no stranger to attack by deadly monsters. Enter the Japan Defense Force, a military organization tasked with the neutralization of kaiju. Kafka Hibino, a kaiju corpse cleanup man, has always dreamed of joining the force and wants another shot at achieving his childhood dream of eliminating the kaiju. But how can he expect to fight kaiju when he suddenly becomes one himself?!", "tagline": "Kafka wants to clean up kaiju, but not literally! Will a sudden metamorphosis stand in the way of his dream?", "rating": "t", "vanityurl": "kaiju-no-8", "copyright": "KAIJU HACHI GO \u00a9 2020 by Naoya Matsumoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/724-072620_PageHeader_Kaiju8_2000x800_copy_wm.jpg", "link_img": "img/manga_series_link_img/724-th-072620_Thumbnail_Kaiju8_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434676, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/724-072620_PageHeader_Kaiju8_2000x800_copy_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/724-th-072620_Thumbnail_Kaiju8_400x320.jpg", "label": null, "recommended_series_ids": "763,496,722,941,5,249,739,599,632", "latest_author": "Naoya Matsumoto", "title_sort": "kaiju no. 8"}}, {"manga_series": {"id": 719, "updated_at": "2020-07-28T19:14:43.000-07:00", "manga_series_common_id": 719, "device_id": 4, "keyart": "img/manga_series_keyart/2357-BTS_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2400, "manga_imprint_id": null, "title": "Blood, Sweat & Tears: BTS & Their Music", "synopsis": "\u201cThe Beatles for the 21st Century\u201d \u2013 BBC\r\n\r\nBTS have exploded onto the global music scene with their distinctive brand of music, impressive choreography, and socially conscious lyrics. With multiple chart-topping albums and record-breaking music videos under their belt, this seven-man band, comprising of RM, Suga, J-Hope, Jin, V, Jimin, and Jungkook, are an unstoppable force and an\r\n\r\nIn Blood, Sweat &amp; Tears, K-pop columnist Tamar Herman explores the group\u2019s origins, meteoric rise, wide-ranging activism, and close-knit relationship with their fans. With full color photos, spotlights on each member, and a play-by-play of their discography, this book is a celebration of all things BTS and a must-have for fans worldwide!", "tagline": "", "rating": "tp", "vanityurl": "bts-and-their-music", "copyright": "", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1649957973, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_keyart/2357-BTS_SeriesBrick_940x332.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2455-Thumb_BTS_400x320.jpg", "label": null, "recommended_series_ids": "483,537,579,708", "latest_author": "Tamar Herman", "title_sort": "blood, sweat & tears: bts & their music"}}, {"manga_series": {"id": 725, "updated_at": "2023-12-12T11:14:41.000-08:00", "manga_series_common_id": 725, "device_id": 4, "keyart": "img/manga_series_keyart/2361-FMTTM_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2402, "manga_imprint_id": null, "title": "Fly Me to the Moon", "synopsis": "From the day his parents named him, Nasa Yuzaki has been destined for outer space\u2026or so he believes. But while trying to join the space program, he is thrown for a loop when an accident introduces him to Tsukasa, a mysterious girl with strange powers. Is she an alien, a moon goddess or something else? Since she insists on marrying him, Nasa has plenty of chances to find out!", "tagline": "First comes marriage, then comes an earthbound love that is out of this world!", "rating": "tp", "vanityurl": "fly-me-to-the-moon", "copyright": "TONIKAKUKAWAII \u00a9 2018 Kenjiro HATA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707466276, "has_gns": true, "num_gns": 21, "has_chapters": true, "num_chapters": 258, "num_chapters_free": 6, "chapter_latest_pub_date": 1707260310, "chapter_latest_num": 259, "chapter_last_num": 259, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6122-Header_FlyMeToMoon_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2450-Thumb_FlyMeToMoon_400x320.jpg", "label": null, "recommended_series_ids": "765,689,709,901,710,685,541,585", "latest_author": "Kenjiro Hata", "title_sort": "fly me to the moon"}}, {"manga_series": {"id": 726, "updated_at": "2023-05-10T13:21:53.000-07:00", "manga_series_common_id": 726, "device_id": 4, "keyart": "img/manga_series_keyart/2365-Pingpong_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 765, "manga_imprint_id": null, "title": "Ping Pong", "synopsis": "Makoto \u201cSmile\u201d Tsukimoto doesn\u2019t smile even though he\u2019s got a natural talent for playing ping pong. As one of the best players in school, all hopes are on him to win the regional high school tournament, but winning is not what Smile really wants to do. Will the fierce competition to be number one bring out his best or drive him away from the game? Ping Pong is Taiyo Matsumoto\u2019s masterwork reflection on friendship and self-discovery, presented here in two volumes, featuring color art, the bonus story \"Tamura\" and an afterword by the original Japanese series editor.\r\n\r\n\r\n\r\nTranslated by Michael Arias, director of Tekkonkinkreet.", "tagline": "Ace high school table tennis players push their passion to the limit, told by Eisner Award winner Taiyo Matsumoto.", "rating": "tp", "vanityurl": "ping-pong", "copyright": "PING PONG FULL GAME NO \u00a9 2014 Taiyou MATSUMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1702330633, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 56, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 55, "chapter_last_num": 55, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6114-Header_PingPong_v2_2000x800_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2438-Thumb_PingPong_v2_400x320_jpg", "label": null, "recommended_series_ids": "613,83,194,766,96,228,713", "latest_author": "Taiyo Matsumoto", "title_sort": "ping pong"}}, {"manga_series": {"id": 710, "updated_at": "2024-01-18T10:35:22.000-08:00", "manga_series_common_id": 710, "device_id": 4, "keyart": "img/manga_series_header/710-Header_MaisonIkkoku_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 585, "manga_imprint_id": null, "title": "Maison Ikkoku Collector\u2019s Edition", "synopsis": "Yusaku Godai didn\u2019t get accepted into college on the first try, so he\u2019s studying to retake the entrance exams. But living in a dilapidated building full of eccentric and noisy tenants is making it hard for him to achieve his goals. Now that a beautiful woman has moved in to become the new resident manager, Godai is driven to distraction!", "tagline": "Acclaimed author Rumiko Takahashi\u2019s classic romantic comedy about finding your path in life.", "rating": "tp", "vanityurl": "maison-ikkoku-collectors-edition", "copyright": "TOKUSEI WIDE BAN MAISON IKKOKU \u00a9 1992 Rumiko TAKAHASHI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/710-Header_MaisonIkkoku_v2_2000x800.jpg", "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705602922, "has_gns": true, "num_gns": 10, "has_chapters": true, "num_chapters": 161, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 161, "chapter_last_num": 161, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/710-Header_MaisonIkkoku_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/62-SeriesThumbnailsManga_MaisonIkkoku_v2_400x320.jpg", "label": null, "recommended_series_ids": "84,725,169,303,698,157,97,806", "latest_author": "Story and Art by Rumiko Takahashi", "title_sort": "maison ikkoku collector\u2019s edition"}}, {"manga_series": {"id": 732, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 732, "device_id": 4, "keyart": "img/manga_series_header/732-083020_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2412, "manga_imprint_id": null, "title": "Phantom Seer", "synopsis": "Iori Katanagi doesn\u2019t want to be a shaman. He yearns to lead a normal unassuming life\u2014not too likely for one of the most powerful shamans alive! And now he finds himself getting further and further away from his dream since meeting Riku Aibetsu, a cheerful girl with the unusual ability to attract phantoms.", "tagline": "Get into the spirit of this ghostly manga!", "rating": "t", "vanityurl": "phantom-seer", "copyright": "HONO MIERU SHONEN \u00a9 2020 by Togo Goto, Kento Matsuura/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/732-083020_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/732-th-083020_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/732-083020_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/732-th-083020_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "448,105,546,722,751,540,694,284", "latest_author": "Story by Togo Goto, Art by Kento Matsuura", "title_sort": "phantom seer"}}, {"manga_series": {"id": 733, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 733, "device_id": 4, "keyart": "img/manga_series_header/733-090620_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2415, "manga_imprint_id": null, "title": "High School Family: Kokosei Kazoku", "synopsis": "Kotaro Ietani looks forward to starting a fun, normal high school life\u2026until his family appears in matching uniforms at the same high school. His dad Ichiro, his mom Shizuka, his little sister Haruka, and even Gomez the cat all join Kotaro as students in his first-year class. The whole family makes friends, joins sports, and lives out their dreams of being high schoolers\u2014together!", "tagline": "High School is rough, but imagine going to school with your whole family!   ", "rating": "t", "vanityurl": "high-school-family", "copyright": "KOKOSEI KAZOKU \u00a9 2020 by Ryo Nakama/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/733-090620_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/733-th-090620_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706253152, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/733-090620_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/733-th-090620_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "356,703,721,467,632,750,492,714", "latest_author": "Story and Art by Ryo Nakama", "title_sort": "high school family: kokosei kazoku"}}, {"manga_series": {"id": 729, "updated_at": "2023-05-10T13:21:53.000-07:00", "manga_series_common_id": 729, "device_id": 4, "keyart": "img/manga_series_keyart/2385-UtenaATR_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 974, "manga_imprint_id": null, "title": "Revolutionary Girl Utena: After the Revolution", "synopsis": "Utena has saved Anthy by defeating Akio in the final duel, but in doing so she has vanished from the world. Now the student council members at Ohtori Academy find themselves in their own revolutions.", "tagline": "Lured into the twisted duels of Ohtori Academy, can Utena become the prince she\u2019s been waiting to meet?", "rating": "tp", "vanityurl": "revolutionary-girl-utena-after-the-revolution", "copyright": "SHOJO KAKUMEI UTENA AFTER THE REVOLUTION \u00a9 2018 Chiho SAITO, Be-PaPas/SHOGAKUKAN", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1683750113, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 3, "num_chapters_free": 1, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 3, "chapter_last_num": 3, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5626-Header_Utena_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1337-SeriesThumbnailsManga_Utena_400x320.jpg", "label": null, "recommended_series_ids": "271,720,709,302,505,303,134,742", "latest_author": "Story and Art by Chiho Saito", "title_sort": "revolutionary girl utena: after the revolution"}}, {"manga_series": {"id": 730, "updated_at": "2024-01-16T10:00:00.000-08:00", "manga_series_common_id": 730, "device_id": 4, "keyart": "img/manga_series_keyart/2389-Moriarty_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2406, "manga_imprint_id": null, "title": "Moriarty the Patriot", "synopsis": "Before he was Sherlock\u2019s rival, Moriarty fought against the unfair class caste system in London by making sure corrupt nobility got their comeuppance. But even the most well-intentioned plans can spin out of control\u2014will Moriarty\u2019s dream of a more just and equal world turn him into a hero\u2026or a monster?", "tagline": "The untold story of Sherlock Holmes' greatest rival, Moriarty!", "rating": "tp", "vanityurl": "moriarty-the-patriot", "copyright": "YUKOKU NO MORIARTY \u00a9 2016 by Ryosuke Takeuchi, Hikaru Miyoshi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377869, "has_gns": true, "num_gns": 14, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6133-Header_Moriarty_v2_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2479-Thumb_Moriarty_400x320.jpg", "label": null, "recommended_series_ids": "448,105,18,700,627,451,471,519", "latest_author": "Storyboards by Ryosuke Takeuchi, Art by Hikaru Miyoshi, Based on the works of Sir Arthur Conan Doyle", "title_sort": "moriarty the patriot"}}, {"manga_series": {"id": 731, "updated_at": "2023-05-02T14:33:46.000-07:00", "manga_series_common_id": 731, "device_id": 4, "keyart": "img/manga_series_keyart/2393-fangirl_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2390, "manga_imprint_id": null, "title": "Fangirl", "synopsis": "\u201cA deliciously warm-hearted nerd power ballad destined for greatness.\u201d\r\n\u2014 New York Journal of Books\r\n\r\nCath is a Simon Snow fan. Okay, everybody is a Simon Snow fan, but for Cath, being a fan is her life. Cath's sister has mostly grown away from fandom, but Cath just can't let go. Now that they\u2019re in college, Cath must decide if she\u2019s ready to start living her own life. But does she even want to if it means leaving Simon Snow behind?", "tagline": "The manga adaptation of the New York Times bestselling novel!", "rating": "t", "vanityurl": "fangirl", "copyright": "Copyright @ Rainbow Rowell, Art Copyright \u00a9 Gabi Nam", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096087, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6097-Fangirl_web_header_2000x800_REV2_jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2350-Fangirl_web_thumb_400x320_REV2_jpg", "label": null, "recommended_series_ids": "89,296,1,414,417,421,460,467,855,856,585", "latest_author": "Created by Rainbow Rowell, Adapted by Sam Maggs, Illustrated by Gabi Nam", "title_sort": "fangirl"}}, {"manga_series": {"id": 734, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 734, "device_id": 4, "keyart": "img/manga_series_header/734-091320_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2416, "manga_imprint_id": null, "title": "Our Blood Oath", "synopsis": "The Hizuki brothers may not be connected by blood, but they are bound by something stronger\u2014a vampire oath. Together they fight evil vampires and crazed beasts who try to hurt humans. Can they achieve their dream\u2014a peaceful coexistence between humans and vampires?", "tagline": "Blood is thicker than water, especially if you're a vampire!", "rating": "t", "vanityurl": "our-blood-oath", "copyright": "BOKURA NO KETSUMEI \u00a9 2020 by Kazu Kakazu/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/734-091320_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/734-th-091320_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1696975792, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/734-091320_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/734-th-091320_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "448,105,700,722,78,312,519,714", "latest_author": "Kazu Kakazu", "title_sort": "our blood oath"}}, {"manga_series": {"id": 735, "updated_at": "2021-02-19T15:26:52.000-08:00", "manga_series_common_id": 735, "device_id": 4, "keyart": "img/manga_series_header/735-Header_Disney_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2410, "manga_imprint_id": null, "title": "Disney Tsum Tsum Sushi Cookbook", "synopsis": "Bring the Disney magic home with\u00a0twenty-seven delicious sushi recipes! Create your family\u2019s favorite Tsum Tsum characters including Mickey, Minnie, Elsa, Olaf, and more.\r\n\r\nThese\u00a0fun recipes feature step-by-step photographic instructions to guide you every step of the way. Perfect for lunch boxes, picnics, and snacks,\u00a0Disney Tsum Tsum Sushi Cookbook will have you\u00a0making sushi masterpieces in no time!", "tagline": "Experience the magic with all-new Disney publishing titles!", "rating": "a", "vanityurl": "disney-tsum-tsum-sushi-cookbook", "copyright": "\u00a9 2020 Disney/Pixar   \u00a9 Disney, Based on the \"Winnie the Pooh\" works by A. A. Milne and E.H. Shepard", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/735-Header_Disney_2000x800.jpg", "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096052, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/735-Header_Disney_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2605-Disney_Thumbnail_AllFamilyBlue_400x320_1_.jpg", "label": null, "recommended_series_ids": "894,108,109,110,111,573,574,575,576,578,773,779,789,905,926,686,740,775,800,865,927", "latest_author": "Emi Tsuneoka", "title_sort": "disney tsum tsum sushi cookbook"}}, {"manga_series": {"id": 736, "updated_at": "2023-05-10T13:21:53.000-07:00", "manga_series_common_id": 736, "device_id": 4, "keyart": "img/manga_series_keyart/2405-MermaidSaga_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 888, "manga_imprint_id": null, "title": "Mermaid Saga Collector\u2019s Edition", "synopsis": "They say that if one consumes mermaid flesh, one can attain immortality. Unfortunately, the more likely results include becoming horribly deformed or turning into a vicious monster! Even if one were to gain eternal life, however, is such an anomaly a lucky blessing or a terrible curse?", "tagline": "Rumiko Takahashi\u2019s classic horror series about mermaid flesh and immortality!", "rating": "tp", "vanityurl": "mermaid-saga-collectors-edition", "copyright": "TAKAHASHI RUMIKO NINGYO SERIES \u00a9 2003 Rumiko TAKAHASHI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096055, "has_gns": true, "num_gns": 2, "has_chapters": true, "num_chapters": 16, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 16, "chapter_last_num": 16, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6142-Header_MermaidSaga_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2494-Thumb_MermaidSaga_400x320.jpg", "label": null, "recommended_series_ids": "91,777,89,778,787,620,806,744", "latest_author": "Rumiko Takahashi", "title_sort": "mermaid saga collector\u2019s edition"}}, {"manga_series": {"id": 738, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 738, "device_id": 4, "keyart": "img/manga_series_header/738-111520_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2421, "manga_imprint_id": null, "title": "Build King", "synopsis": "In a world where construction is everything, Tonkachi and Renga want nothing more than to become master builders just like their mentor Shovel. But it\u2019s going to take a lot more than big dreams to make it to that level, especially when none of the houses Tonkachi builds stay in one piece!", "tagline": "Build to survive on mysterious Hammer Island!", "rating": "t", "vanityurl": "build-king", "copyright": "BUILD KING \u00a9 2020 by Mitsutoshi Shimabukuro/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/738-111520_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/738-th-111520_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/738-111520_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/738-th-111520_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "461,496,466,5,249,739,23,693", "latest_author": "Mitsutoshi Shimabukuro", "title_sort": "build king"}}, {"manga_series": {"id": 739, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 739, "device_id": 4, "keyart": "img/manga_series_header/739-112220_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2422, "manga_imprint_id": null, "title": "Sakamoto Days", "synopsis": "Taro Sakamoto was once a legendary hit man considered the greatest of all time. Bad guys feared him! Assassins revered him! But then one day he quit, got married, and had a baby. He\u2019s now living the quiet life as the owner of a neighborhood store, but how long can Sakamoto enjoy his days of retirement before his past catches up to him?!", "tagline": "Kill some time with former hit man Taro Sakamoto!", "rating": "tp", "vanityurl": "sakamoto-days", "copyright": "SAKAMOTO DAYS \u00a9 2020 by Yuto Suzuki/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/739-112220_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/739-th-112220_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663629, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/739-112220_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/739-th-112220_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "718,724,694,627,632", "latest_author": "Yuto Suzuki", "title_sort": "sakamoto days"}}, {"manga_series": {"id": 740, "updated_at": "2021-01-13T08:32:33.000-08:00", "manga_series_common_id": 740, "device_id": 4, "keyart": "img/manga_series_header/740-SeriesHeaders_StarWars_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2385, "manga_imprint_id": null, "title": "How to Draw Star Wars", "synopsis": "Draw Yoda, Darth Vader, R2-D2, and more, with this fun and easy-to-follow illustration guide! Featuring all your favorite characters in a variety of styles and poses, these step-by-step instructions will have you drawing like a pro in no time!", "tagline": "Jump into hyperspace with all-new Star Wars publishing!", "rating": "a", "vanityurl": "how-to-draw-star-wars", "copyright": "\u00a9 & TM 2021 LUCASFILM LTD.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/740-SeriesHeaders_StarWars_2000x800.jpg", "link_img": "img/manga_series_link_img/740-th-SeriesThumbnails_StarWars_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096054, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/740-SeriesHeaders_StarWars_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/740-th-SeriesThumbnails_StarWars_400x320.jpg", "label": null, "recommended_series_ids": "461,922,894,1,414,417,421,460,467,855,856,108,109,110,111,573,574,575,576,578,773,779,789,905,926,697", "latest_author": "Adapted by VIZ Media", "title_sort": "how to draw star wars"}}, {"manga_series": {"id": 742, "updated_at": "2023-11-02T10:00:00.000-07:00", "manga_series_common_id": 742, "device_id": 4, "keyart": "img/manga_series_keyart/2421-TKB_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2418, "manga_imprint_id": null, "title": "The King\u2019s Beast", "synopsis": "Ajin boys who show signs of special abilities are conscripted to serve in the imperial palace as beast-servants\u2014status symbols and shields for their royal masters, to be kept or discarded on a whim. When they were children, Rangetsu\u2019s twin brother Sogetsu was ripped from her arms and sent to the palace to attend Prince Tenyou as a beast-servant, where he quickly fell victim to bloody dynastic intrigues. Now in a world that promises only bitterness, Rangetsu\u2019s one hope at avenging her brother is to disguise herself as a man and find a way into the palace!", "tagline": "A smoldering tale of romance and revenge set in the world of Dawn of the Arcana!", "rating": "t", "vanityurl": "the-kings-beast", "copyright": "OU NO KEMONO \u00a9 2019 Rei TOMA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707423909, "has_gns": true, "num_gns": 11, "has_chapters": true, "num_chapters": 59, "num_chapters_free": 6, "chapter_latest_pub_date": 1706057910, "chapter_latest_num": 59, "chapter_last_num": 59, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6168-Header_KingsBeast_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2610-Thumb_KingsBeast_400x320.jpg", "label": null, "recommended_series_ids": "87,146,720,89,505,231,491,806", "latest_author": "Rei Toma", "title_sort": "king\u2019s beast"}}, {"manga_series": {"id": 750, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 750, "device_id": 4, "keyart": "img/manga_series_header/750-WSJ2021_issue08_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2426, "manga_imprint_id": null, "title": "The Elusive Samurai", "synopsis": "", "tagline": "A samurai tale of redemption and revenge by Yusei Matsui, creator of Assassination Classroom!", "rating": "t", "vanityurl": "the-elusive-samurai", "copyright": "NIGEJYOZUNO WAKAGIMI \u00a9 2021 by Yusei Matsui/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/750-WSJ2021_issue08_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/750-th-WSJ2021_issue08_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663631, "has_gns": true, "num_gns": 10, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/750-WSJ2021_issue08_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/750-th-WSJ2021_issue08_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "356,461,738,123,546,626,540,724", "latest_author": "Yusei Matsui", "title_sort": "elusive samurai"}}, {"manga_series": {"id": 741, "updated_at": "2021-02-18T14:21:09.000-08:00", "manga_series_common_id": 741, "device_id": 4, "keyart": "img/manga_series_header/741-Header_Disney_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2410, "manga_imprint_id": null, "title": "Frozen 2", "synopsis": "An Adventure North\u2026\r\n\r\nWhy was Elsa born with magical powers? The answer is calling her and threatening her kingdom. Together with Anna, Kristoff, Olaf, and Sven, she'll set out on a dangerous but remarkable journey to discover her past in order to save their future. Are Elsa\u2019s powers enough to see her through their adventure into the unknown?", "tagline": "Experience the magic with all-new Disney publishing titles!", "rating": "t", "vanityurl": "frozen--2-manga", "copyright": "2021 \u00a9 Disney Enterprises, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/741-Header_Disney_2000x800.jpg", "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1700258651, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/741-Header_Disney_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2605-Disney_Thumbnail_AllFamilyBlue_400x320_1_.jpg", "label": null, "recommended_series_ids": "894,108,109,110,111,573,574,575,576,578,773,779,789,905,926,686,740,775,800,865,927", "latest_author": "Art by Arina Tanemura", "title_sort": "frozen 2"}}, {"manga_series": {"id": 743, "updated_at": "2021-01-22T11:21:13.000-08:00", "manga_series_common_id": 743, "device_id": 4, "keyart": "img/manga_series_keyart/2433-ACC_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2419, "manga_imprint_id": null, "title": "Assassin\u2019s Creed: Blade of Shao Jun", "synopsis": "1526 AD\u2014China is ruled by the Great Ming Empire. Though the empire flourishes, the winds of the new emperor\u2019s political purge are sweeping over the land, and turmoil is brewing. With the decimation of her comrades, Shao Jun has become China\u2019s last Assassin. After escaping to Europe, she has now returned alone to her homeland. Her purpose: vengeance!", "tagline": "A gripping manga based on Ubisoft\u2019s Assassin\u2019s Creed Chronicles: China video game.", "rating": "tp", "vanityurl": "assassins-creed-blade-of-shao-jun", "copyright": "Assassin\u2019s Creed \u00ae : Blade of Shao Jun", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1656400207, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6172-Header_AssassinsCreed_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2614-Thumb_AssassinsCreed_400x320.jpg", "label": null, "recommended_series_ids": "774,756,894,558", "latest_author": "Story and Art by Minoji Kurata", "title_sort": "assassin\u2019s creed: blade of shao jun"}}, {"manga_series": {"id": 744, "updated_at": "2023-12-14T10:00:00.000-08:00", "manga_series_common_id": 744, "device_id": 4, "keyart": "img/manga_series_header/744-Zom100_2000x800_v3.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2420, "manga_imprint_id": null, "title": "Zom 100: Bucket List of the Dead", "synopsis": "After spending years toiling away for a soul-crushing company, Akira\u2019s life has lost its luster. But when a zombie apocalypse ravages his town, it gives him the push he needs to live for himself. Now Akira\u2019s on a mission to complete all 100 items on his bucket list before he...well, kicks the bucket.", "tagline": "In a world full of zombies, Akira has never felt more alive.", "rating": "tp", "vanityurl": "zom-100", "copyright": "ZON 100 \u00a9 2019 Haro ASO, Kotaro TAKATA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/744-Zom100_2000x800_v3.jpg", "link_img": "img/manga_series_link_img/744-th-Thumb_ZOM100_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706811536, "has_gns": true, "num_gns": 12, "has_chapters": true, "num_chapters": 63, "num_chapters_free": 6, "chapter_latest_pub_date": 1705625910, "chapter_latest_num": 62, "chapter_last_num": 62, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/744-Zom100_2000x800_v3.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/744-th-Thumb_ZOM100_400x320.jpg", "label": null, "recommended_series_ids": "786,754,765,881,88,614,176,706", "latest_author": "Story by Haro Aso, Art by Kotaro Takata", "title_sort": "zom 100: bucket list of the dead"}}, {"manga_series": {"id": 751, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 751, "device_id": 4, "keyart": "img/manga_series_header/751-WSJ2021_issue09_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2427, "manga_imprint_id": null, "title": "i tell c", "synopsis": "Risa Aioi is a clever and unorthodox detective who falls in love with the very criminals she chases down! Her bizarre love knows no bounds, and Risa drives culprits to surrender themselves with her almost criminal investigation style. But is it possible to fight poison with poison without losing yourself?", "tagline": "Is it possible to fight poison with poison without losing yourself? A unique take on the crime-suspense genre! ", "rating": "t", "vanityurl": "i-tell-c", "copyright": "AITERUSHI \u00a9 2021 by Kazusa Inaoka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/751-WSJ2021_issue09_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/751-th-020721_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/751-WSJ2021_issue09_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/751-th-020721_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "18,730,284,732,579,739,312,632", "latest_author": "Story and Art by Kazusa Inaoka", "title_sort": "i tell c"}}, {"manga_series": {"id": 753, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 753, "device_id": 4, "keyart": "img/manga_series_header/753-WSJ2021_issue10_PageHeader_2000x800_edit_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2428, "manga_imprint_id": null, "title": "WITCH WATCH", "synopsis": "Morihito Otogi\u2019s surprisingly quiet life of being a human with the monstrous strength of an ogre is turned upside down when his father comes to him with life-changing news. Morihito is to become the familiar of his childhood friend Nico, a teenage witch\u2014and the two are going to live together, alone, under the same roof! Nico is head over heels in love with Morihito and wants to have the perfect high school rom-com life with him! But given all the magical hijinks and trouble she leaves in her wake, Nico\u2019s got a long road ahead of her if she wants to get more familiar with her familiar.", "tagline": "A teen witch wants to get familiar with her familiar! From the mangaka of Astra Lost in Space!", "rating": "t", "vanityurl": "witch-watch", "copyright": "WITCH WATCH \u00a9 2021 by Kenta Shinohara/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/753-WSJ2021_issue10_PageHeader_2000x800_edit_wm.jpg", "link_img": "img/manga_series_link_img/753-th-WSJ2021_issue10_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663634, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/753-WSJ2021_issue10_PageHeader_2000x800_edit_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/753-th-WSJ2021_issue10_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "470,702,265,739,235,632,464,492", "latest_author": "Kenta Shinohara", "title_sort": "witch watch"}}, {"manga_series": {"id": 755, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 755, "device_id": 4, "keyart": "img/manga_series_header/755-WSJ2021_issue11_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2429, "manga_imprint_id": null, "title": "Nine Dragons\u2019 Ball Parade", "synopsis": "Tamao Azukida's dream is to play for Hakuo\u2014the fearsome high school baseball team that has dominated the prestigious Koshien tournament. When the day of tryouts arrives, his life will be changed forever when he meets a mysterious baseball genius called Tao Ryudo. Come along with Azukida and Ryudo as they vow to make their way to the top at Koshien!", "tagline": "Swing for the fences and dream of making the team!", "rating": "t", "vanityurl": "nine-dragons-ball-parade", "copyright": "KOWLOONS\u2019 BALL PARADE \u00a9 2021 by Mikiyasu Kamada and Ashibi Fukui/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/755-WSJ2021_issue11_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/755-th-WSJ2021_issue11_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096080, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/755-WSJ2021_issue11_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/755-th-WSJ2021_issue11_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "604,757,223,450,751,454,739,750", "latest_author": "Story by Mikiyasu Kamada, Art by Ashibi Fukui", "title_sort": "nine dragons\u2019 ball parade"}}, {"manga_series": {"id": 748, "updated_at": "2023-12-05T10:00:00.000-08:00", "manga_series_common_id": 748, "device_id": 4, "keyart": "img/manga_series_header/748-Header_MHA_TeamUp_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: Team-Up Missions", "synopsis": "The ambitious Team-Up Missions Program pairs groups of aspiring heroes with pro heroes to go on action-packed missions! Although Izuku Midoriya and his U.A. High friends are thrilled to participate, there\u2019s just one catch\u2014there\u2019s no telling who will be teamed up with whom! From top heroes to students from other classes and schools, anyone could be on the same team.", "tagline": "The aspiring heroes of My Hero Academia team up with pro heroes for action-packed missions!", "rating": "a", "vanityurl": "my-hero-academia-team-up-missions", "copyright": "BOKU NO HERO ACADEMIA TEAM UP MISSION \u00a9 2019 by Kohei Horikoshi, Yoko Akiyama/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/748-Header_MHA_TeamUp_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/748-th-Thumb_MHA_TeamUp_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1702957577, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/748-Header_MHA_TeamUp_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/748-th-Thumb_MHA_TeamUp_400x320.jpg", "label": null, "recommended_series_ids": "792,700,399,793,520,249", "latest_author": "Story and Art by Yoko Akiyama, Original Concept by Kohei Horikoshi", "title_sort": "my hero academia: team-up missions"}}, {"manga_series": {"id": 749, "updated_at": "2021-03-08T12:46:14.000-08:00", "manga_series_common_id": 749, "device_id": 4, "keyart": "img/manga_series_header/749-Header_BeastComplex_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2318, "manga_imprint_id": null, "title": "Beast Complex", "synopsis": "In these six stories from the creator of the Eisner-nominated, best-selling series Beastars, a menagerie of carnivores and herbivores grapple with conflicts based on their differences and\u2014sometimes\u2014find common ground.", "tagline": "At this high school, instead of jocks and nerds, the students are divided into predators and prey.", "rating": "tp", "vanityurl": "beast-complex", "copyright": "\u00a9 2017 PARU ITAGAKI (AKITASHOTEN)", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/749-Header_BeastComplex_2000x800.jpg", "link_img": "img/manga_series_link_img/749-th-Thumb_BeastComplex_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687935697, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/749-Header_BeastComplex_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/749-th-Thumb_BeastComplex_400x320.jpg", "label": null, "recommended_series_ids": "91,609,92,21", "latest_author": "Paru Itagaki", "title_sort": "beast complex"}}, {"manga_series": {"id": 754, "updated_at": "2024-01-04T10:00:00.000-08:00", "manga_series_common_id": 754, "device_id": 4, "keyart": "img/manga_series_keyart/2465-CotN_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2424, "manga_imprint_id": null, "title": "Call of the Night", "synopsis": "Nanakusa is a vampire. That\u2019s okay with human Ko. He wants to be one too. But transformation doesn\u2019t come that easily...", "tagline": "Antisocial, dorky boy seeks fun-loving, sexy vampire.", "rating": "tp", "vanityurl": "call-of-the-night", "copyright": "YOFUKASHI NO UTA \u00a9 2019 KOTOYAMA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707459855, "has_gns": true, "num_gns": 14, "has_chapters": true, "num_chapters": 201, "num_chapters_free": 6, "chapter_latest_pub_date": 1706050738, "chapter_latest_num": 200, "chapter_last_num": 200, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6184-Header_CalloftheNight_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2790-Thumb_CalloftheNight_400x320.jpg", "label": null, "recommended_series_ids": "423,765,725,689,736,541,744", "latest_author": "Story and Art by Kotoyama", "title_sort": "call of the night"}}, {"manga_series": {"id": 727, "updated_at": "2021-03-29T16:04:36.000-07:00", "manga_series_common_id": 727, "device_id": 4, "keyart": "img/manga_series_keyart/2469-Real_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 862, "manga_imprint_id": null, "title": "Real", "synopsis": "Critically acclaimed, award-winning manga artist Takehiko Inoue doesn\u2019t pull any punches in this stunning portrayal of people struggling with serious life issues. Masterfully combining rich character development with beautifully detailed line art, Inoue, the creator of the mega-hit masterpieces Slam Dunk and Vagabond, lifts the manga medium to a completely new level of storytelling.", "tagline": "A tale of triumph over adversity through wheelchair basketball, by Eisner Award nominee Takehiko Inoue.", "rating": "tp", "vanityurl": "real", "copyright": "\u00a9 1999, 2001, 2021 by Takehiko Inoue and I.T. Planning, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1679384141, "has_gns": true, "num_gns": 15, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5555-Tier05_SeriesHeaders_Real_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/168-SeriesThumbnailsManga_Real_400x320.jpg", "label": null, "recommended_series_ids": "454", "latest_author": "Takehiko Inoue", "title_sort": "real"}}, {"manga_series": {"id": 757, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 757, "device_id": 4, "keyart": "img/manga_series_header/757-WSJ2021_issue19_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2436, "manga_imprint_id": null, "title": "Blue Box", "synopsis": "Taiki Inomata loves badminton, but he has a long way to go before he can reach nationals. When Taiki sees upperclassman Chinatsu Kano practicing her heart out on the girls\u2019 basketball team, he falls for her hard. After an unexpected turn of events brings the two closer together, sports might not be the first thing on their minds anymore!", "tagline": "A badminton guy falls for a basketball girl. Do these sports-crossed lovers have a chance?", "rating": "t", "vanityurl": "blue-box", "copyright": "AO NO HAKO \u00a9 2021 by Kouji Miura/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/757-WSJ2021_issue19_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/757-th-WSJ2021_issue19_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663637, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/757-WSJ2021_issue19_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/757-th-WSJ2021_issue19_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "702,223,450,795,755,180,492,753", "latest_author": "Kouji Miura", "title_sort": "blue box"}}, {"manga_series": {"id": 762, "updated_at": "2023-03-01T16:26:37.000-08:00", "manga_series_common_id": 762, "device_id": 4, "keyart": "img/manga_series_header/762-WSJ2021_issue20_PageHeader_2000x800_wm.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2437, "manga_imprint_id": null, "title": "Candy Flurry", "synopsis": "After the sudden appearance of sweets-empowered people, Tokyo is crushed by giant lollipops! Superhuman sweets users wreak havoc on what\u2019s left of Tokyo, but Recette, the candy police, aim to bring order to a lawless city. Tsumugi Minase, a lollipop wielder, keeps her powers to herself to avoid a case of mistaken identity. But with Recette officers patrolling the streets, Tsumugi's life might just melt into a sour mess!", "tagline": "After Tokyo's crushed by candy, sweets turn sour in this delectable manga!", "rating": "t", "vanityurl": "candy-flurry", "copyright": "AME NO FURU \u00a9 2021 by Ippon Takegushi, Santa Mitarashi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/762-WSJ2021_issue20_PageHeader_2000x800_wm.jpg", "link_img": "img/manga_series_link_img/762-th-WSJ2021_issue20_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096083, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/762-WSJ2021_issue20_PageHeader_2000x800_wm.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/762-th-WSJ2021_issue20_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "8,703,627,5,781,693,753", "latest_author": "Story by Ippon Takegushi, Art by Santa Mitarashi", "title_sort": "candy flurry"}}, {"manga_series": {"id": 763, "updated_at": "2023-06-01T14:29:27.000-07:00", "manga_series_common_id": 763, "device_id": 4, "keyart": "img/manga_series_header/763-Header_ChoujinX_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2438, "manga_imprint_id": null, "title": "Choujin X", "synopsis": "Best friends Tokio and Azuma do everything together, even if most of the time it feels like Tokio is just stumbling along in Azuma\u2019s cooler, more talented footsteps. But when they\u2019re attacked one night by a superhuman mutant called a choujin, Tokio finally has a chance to shine\u2014by turning into a choujin himself!", "tagline": "The latest from Sui Ishida, creator of Tokyo Ghoul! Sometimes to fight a monster, you must become one!", "rating": "tp", "vanityurl": "choujin-x", "copyright": "CHOUJIN X \u00a9 2021 by Sui Ishida/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/763-Header_ChoujinX_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/763-th-Thumb_ChoujinX_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707290057, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/763-Header_ChoujinX_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/763-th-Thumb_ChoujinX_400x320.jpg", "label": null, "recommended_series_ids": "762,9,540,724,728,781,371,519", "latest_author": "Sui Ishida", "title_sort": "choujin x"}}, {"manga_series": {"id": 761, "updated_at": "2021-05-07T11:25:45.000-07:00", "manga_series_common_id": 761, "device_id": 4, "keyart": "img/manga_series_keyart/2493-FotNS_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2433, "manga_imprint_id": null, "title": "Fist of the North Star", "synopsis": "In a postapocalyptic world, humanity has risen from the ashes of nuclear war to a nightmare of endless suffering. It is a time of chaos. Warlords and gangs of savage marauders and warlords rule the broken ruins of civilization, terrorizing and enslaving the survivors. Life has become a brutal struggle for existence and death the only release.", "tagline": "In a postapocalyptic wasteland ruled by savage gangs, a hero appears to bring justice to the guilty.", "rating": "tp", "vanityurl": "fist-of-the-north-star", "copyright": "HOKUTO NO KEN Ultimate Edition   \u24b81983 by BURONSON AND TETSUO HARA/COAMIX", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707290255, "has_gns": true, "num_gns": 11, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6194-Header_FistOfTheNorthStar_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2814-Thumb_FistOfNorthStar_400x320.jpg", "label": null, "recommended_series_ids": "22,300,756,323,339,376,469,596,768,814,820", "latest_author": "Story by Buronson, Art by Tetsuo Hara", "title_sort": "fist of the north star"}}, {"manga_series": {"id": 760, "updated_at": "2023-09-07T16:17:48.000-07:00", "manga_series_common_id": 760, "device_id": 4, "keyart": "img/manga_series_keyart/2497-WorldPiece_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2434, "manga_imprint_id": null, "title": "World Piece", "synopsis": "Lucas Densen has earned his easygoing high school reputation through hard work and optimism. Life seems to be smooth sailing for this basketball-playing stargazer until an alien artifact shrinks the world, along with everything Lucas loves. What awaits him in this new realm where worlds are the size of your palm, and can he find out how to restore the Earth?", "tagline": "After discovering an ancient artifact, Lucas holds the world in his hands\u2014literally.", "rating": "tp", "vanityurl": "world-piece", "copyright": "\u00a9 Josh Tierney, Agroshka", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707290166, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 20, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 20, "chapter_last_num": 20, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6368-Header_WorldPiece02_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3303-Thumb_WorldPiece02_400x320.jpg", "label": null, "recommended_series_ids": "19,754,216,89,214,176,896,806", "latest_author": "Story by Josh Tierney, Art by Agroshka", "title_sort": "world piece"}}, {"manga_series": {"id": 765, "updated_at": "2023-09-07T16:20:22.000-07:00", "manga_series_common_id": 765, "device_id": 4, "keyart": "img/manga_series_keyart/2501-DevilsCandy_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2435, "manga_imprint_id": null, "title": "Devil\u2019s Candy", "synopsis": "At Hemlock Heart Academy, science wiz Kazu Decker shows off his skills by creating a humanoid girl named Pandora. But in a world of monsters and mayhem, surviving high school is harder than getting good grades, and lessons often turn violent. Fortunately for them, Pandora\u2019s stoic nature and seemingly limitless strength, paired with Kazu\u2019s luck, knowledge and friends, get them out of trouble almost as often as they get mixed up in it!", "tagline": "Welcome to Hemlock Heart Academy, where devils rule the school.", "rating": "tp", "vanityurl": "devils-candy", "copyright": "Devil's Candy \u00a9 2021 by Rem, Bikkuri", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1696918453, "has_gns": true, "num_gns": 3, "has_chapters": true, "num_chapters": 11, "num_chapters_free": 2, "chapter_latest_pub_date": 1690477170, "chapter_latest_num": 11, "chapter_last_num": 11, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6217-Header_DevilsCandy_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2867-Thumb_DevilsCandy_TeamUp_400x320.jpg", "label": null, "recommended_series_ids": "88,135,600,729,541,896,190,139", "latest_author": "Created by Rem and Bikkuri", "title_sort": "devil\u2019s candy"}}, {"manga_series": {"id": 764, "updated_at": "2021-08-19T11:12:22.000-07:00", "manga_series_common_id": 764, "device_id": 4, "keyart": "img/manga_series_header/764-Header_Disney_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2410, "manga_imprint_id": null, "title": "Disney Bento: Easy Recipes for Delicious Sushi", "synopsis": "Fifty recipes for delicious bento boxes featuring your favorite Disney characters! Create masterpieces for any meal, including snack time, with Mickey, Minnie, Elsa, Anna, Winnie the Pooh, and more! Transform your lunch box with Disney Bento and enjoy the magic wherever you go!", "tagline": "Experience the magic with all-new Disney publishing titles!", "rating": "a", "vanityurl": "disney-bento", "copyright": "\u00a9 Disney/Pixar   Based on the \u201cWinnie the Pooh\u201d works, by A. A. Milne and E. H. Shepard", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/764-Header_Disney_2000x800.jpg", "link_img": "img/manga_series_link_img/764-th-2605_Disney_Thumbnail_AllFamilyBlue_400x320_1_.jpeg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096060, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/764-Header_Disney_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/764-th-2605_Disney_Thumbnail_AllFamilyBlue_400x320_1_.jpeg", "label": null, "recommended_series_ids": "894,108,109,110,111,573,574,575,576,578,773,779,789,905,926,686,740,775,800,865,927", "latest_author": "Masami Miyazaki", "title_sort": "disney bento: easy recipes for delicious sushi"}}, {"manga_series": {"id": 766, "updated_at": "2023-05-10T13:21:53.000-07:00", "manga_series_common_id": 766, "device_id": 4, "keyart": "img/manga_series_keyart/2509-No5_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 1406, "manga_imprint_id": null, "title": "No. 5", "synopsis": "In a world where most of the earth has become a harsh desert, the Rainbow Council of the Peace Corps has a growing crisis on its hands. No. 5, one member of a team of superpowered global security guardians and a top marksman, has gone rogue. Now the other guardians have to hunt down No. 5 and his mysterious companion, Matryoshka. But why did No. 5 turn against the council, and what will it mean for the future of the world?", "tagline": "A powerful vision of the future by the Eisner Award-winning creator of Tekkonkinkreet.", "rating": "t", "vanityurl": "no-5", "copyright": "NUMBER FIVE FUKYUBAN \u00a9 2006 Taiyo MATSUMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1702330565, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 38, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 37, "chapter_last_num": 37, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6214-Header_No5_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2859-Thumb_No5_400x320.jpg", "label": null, "recommended_series_ids": "613,250,194,685,726,228,713", "latest_author": "Taiyo Matsumoto", "title_sort": "no. 5"}}, {"manga_series": {"id": 781, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 781, "device_id": 4, "keyart": "img/manga_series_header/781-WSJ2021_issue30_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2443, "manga_imprint_id": null, "title": "The Hunters Guild: Red Hood", "synopsis": "In a world where fairy tales are fact and humans live in fear of werewolves, witches, and monsters, only the Hunters Guild can keep the monsters at bay. These red-hooded fighters are anything but little, and only those able to pay a king\u2019s ransom can afford their services, but it's a small price to stay alive.", "tagline": "A grim take on Grimm tales, the hunted become the hunters!", "rating": "t", "vanityurl": "the-hunters-guild-red-hood", "copyright": "RED HOOD \u00a9 2021 by Yuki Kawaguchi/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/781-WSJ2021_issue30_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/781-th-WSJ2021_issue30_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1683000352, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/781-WSJ2021_issue30_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/781-th-WSJ2021_issue30_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "762,22,546,722,699,399,790,579", "latest_author": "Yuki Kawaguchi", "title_sort": "hunters guild: red hood"}}, {"manga_series": {"id": 769, "updated_at": "2021-08-25T13:52:25.000-07:00", "manga_series_common_id": 769, "device_id": 4, "keyart": "img/manga_series_keyart/2521-ROR_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2446, "manga_imprint_id": null, "title": "Record of Ragnarok", "synopsis": "Once every millennium, the gods assemble to decide if humanity is worthy of its continued existence or if it should be destroyed! When the verdict is destruction, the final battle between the gods and mortal heroes will decide the survival or extinction of the human race\u2014a battle known as Ragnarok!", "tagline": "Humanity\u2019s greatest heroes battle the gods to save the human race!", "rating": "tp", "vanityurl": "record-of-ragnarok", "copyright": "Shumatsu no Walkure   \u00a92017 by AZYCHIKA AND SHINYA UMEMURA AND TAKUMI FUKUI/COAMIX", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707376962, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6264-Header_Ragnarok_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2915-Thumb_RecordRagnarok_v2_400x320.jpg", "label": null, "recommended_series_ids": "10,80,299,446,466,566,761,171,317", "latest_author": "Art by Azychika, Story by Shinya Umemura and Script by Takumi Fukui", "title_sort": "record of ragnarok"}}, {"manga_series": {"id": 790, "updated_at": "2023-01-17T11:59:34.000-08:00", "manga_series_common_id": 790, "device_id": 4, "keyart": "img/manga_series_header/790-WSJ2021_issue31_PageHeader_2000x800v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2449, "manga_imprint_id": null, "title": "Neru: Way of the Martial Artist", "synopsis": "Neru doesn\u2019t feel like he quite fits in, with his off-the-grid living and his obsession with martial arts. However, thanks to a chance encounter with Akebi, a high school girl who is adept at martial arts, he now finds himself immersed in a world of fighting. But Neru\u2019s spent his whole life training in isolation. How will he stack up against a whole school of experienced martial artists?!", "tagline": "A young martial artist finds his true path!", "rating": "t", "vanityurl": "neru-way-of-the-martial-artist", "copyright": "NERU: BUGEI DOUGYOU \u00a9 2021 by Minya Hiraga/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/790-WSJ2021_issue31_PageHeader_2000x800v2.jpg", "link_img": "img/manga_series_link_img/790-th-WSJ2021_issue31_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096082, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/790-WSJ2021_issue31_PageHeader_2000x800v2.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/790-th-WSJ2021_issue31_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "8,794,461,553,694,79,781", "latest_author": "Minya Hiraga", "title_sort": "neru: way of the martial artist"}}, {"manga_series": {"id": 768, "updated_at": "2023-09-05T10:00:00.000-07:00", "manga_series_common_id": 768, "device_id": 4, "keyart": "img/manga_series_header/768-Header_JoJoGW_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": null, "title": "JoJo\u2019s Bizarre Adventure: Part 5--Golden Wind", "synopsis": "The legendary Shonen Jump series is now available in deluxe hardcover editions featuring color pages! JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor and frenetic battles.", "tagline": "The highly-acclaimed fifth arc of JoJo\u2019s Bizarre Adventure shifts the action from Japan to Italy!", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-5", "copyright": "JOJO'S BIZARRE ADVENTURE \u00a9 1986 by LUCKY LAND COMMUNICATIONS/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/768-Header_JoJoGW_2000x800.jpg", "link_img": "img/manga_series_link_img/768-th-Thumb_JoJoGW_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699998923, "has_gns": true, "num_gns": 9, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/768-Header_JoJoGW_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/768-th-Thumb_JoJoGW_400x320.jpg", "label": null, "recommended_series_ids": "22,10,138,339,814", "latest_author": "Hirohiko Araki", "title_sort": "jojo\u2019s bizarre adventure: part 5--golden wind"}}, {"manga_series": {"id": 767, "updated_at": "2021-08-19T11:11:05.000-07:00", "manga_series_common_id": 767, "device_id": 4, "keyart": "img/manga_series_header/767-Header_Disney_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2410, "manga_imprint_id": null, "title": "Disney Cruella", "synopsis": "You don\u2019t become a legend by being nice.\r\n\r\nShe wasn\u2019t born Cruella. Gifted with talent, innovation, and ambition, Estella dreamed of becoming a fashion designer, but the world seemed intent on making sure her dreams would never come true.\r\n\r\nThe life of an amateur thief is hardly a glamourous one, but in 1970s London, at the crossroads of fashion, Estella has a vision for herself and her designs, if only she can afford it! Witness Estella\u2019s life on the streets with her best friends and partners in (petty) crime, Horace and Jasper, before the infamous diva Cruella emerges to make sure no one gets in her way!", "tagline": "Experience the magic with all-new Disney publishing titles!", "rating": "t", "vanityurl": "disney-cruella", "copyright": "2021 \u00a9 Disney Enterprises, Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/767-Header_Disney_2000x800.jpg", "link_img": "img/manga_series_link_img/767-th-2605_Disney_Thumbnail_AllFamilyBlue_400x320_1_.jpeg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1700258651, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/767-Header_Disney_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/767-th-2605_Disney_Thumbnail_AllFamilyBlue_400x320_1_.jpeg", "label": null, "recommended_series_ids": "894,108,109,110,111,573,574,575,576,578,773,779,789,905,926,686,740,775,800,865,927", "latest_author": "Hachi Ishie", "title_sort": "disney cruella"}}, {"manga_series": {"id": 789, "updated_at": "2022-01-11T13:56:01.000-08:00", "manga_series_common_id": 789, "device_id": 4, "keyart": "img/manga_series_header/789-Header_POK_AdventuresXY_v5_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": null, "title": "Pok\u00e9mon Adventures: X\u2022Y", "synopsis": "X was a Pok\u00e9mon Trainer child prodigy. He hated the shine of the spotlight, so he took to hiding in his room and avoiding everyone\u2014including his best friend Y. But now a surprise attack has brought X out of hiding!", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-adventures-x-y", "copyright": "\u00a92021 Pok\u00e9mon. \u00a91995-2020 Nintendo / Creatures Inc. / GAME FREAK inc. TM, \u00ae, and character names are trademarks of Nintendo.POCKET MONSTERS SPECIAL \u00a9 1997 Hidenori KUSAKA, Satoshi YAMAMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/789-Header_POK_AdventuresXY_v5_2000x800.jpg", "link_img": "img/manga_series_link_img/789-th-Thumb_POKAdventuresXY_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694502492, "has_gns": true, "num_gns": 6, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/789-Header_POK_AdventuresXY_v5_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/789-th-Thumb_POKAdventuresXY_400x320.jpg", "label": null, "latest_author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "title_sort": "pok\u00e9mon adventures: x\u2022y"}}, {"manga_series": {"id": 788, "updated_at": "2022-01-18T16:03:17.000-08:00", "manga_series_common_id": 788, "device_id": 4, "keyart": "img/manga_series_keyart/2541-DeadpoolSamurai_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2447, "manga_imprint_id": null, "title": "Deadpool: Samurai", "synopsis": "Everyone\u2019s favorite Merc with a Mouth is back! As a member of the newly formed Samurai Squad, Deadpool moves to Tokyo, where he soon runs afoul of some familiar faces. Whether he\u2019s teaming up with new heroes, battling gods, attending concerts, or being repeatedly dismembered, Deadpool always brings chaos and his characteristic sense of humor along with him!", "tagline": "Explore the multiverse with all-new Marvel manga and books!", "rating": "tp", "vanityurl": "deadpool-samurai", "copyright": "\u00a9 2021 MARVEL", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687330909, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6278-Header_Marvel_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3043-Thumb_Marvel_400x320_v2.jpg", "label": null, "recommended_series_ids": "735,741,764,767,852,874,877,399,520,571,591,611,748,868,249,391,686,740,775,800,865,927", "latest_author": "Story by Sanshiro Kasama, Art by Hikaru Uesugi", "title_sort": "deadpool: samurai"}}, {"manga_series": {"id": 784, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 784, "device_id": 4, "keyart": "img/manga_series_header/784-Header_DQAdventuresofDai_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2292, "manga_imprint_id": null, "title": "Dragon Quest: The Adventure of Dai", "synopsis": "Raised by monsters in a world scarred by battle, Dai has the heart of a hero! But it will take a grand world-spanning adventure and the help of some great friends for Dai to master the powers within him and become the hero he was always meant to be.", "tagline": "Raised by monsters in a battle-scarred world, Dai has the heart of a hero! Based on the legendary video game!", "rating": "a", "vanityurl": "dragon-quest-the-adventure-of-dai", "copyright": "DRAGON QUEST -DAI NO DAIBOKEN- SHINSOSAIROKUBAN \u00a9 SANJO RIKU, INADA KOJI/ SHUEISHA \u00a9 SQUARE ENIX CO., LTD.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/784-Header_DQAdventuresofDai_2000x800.jpg", "link_img": "img/manga_series_link_img/784-th-Thumb_DQAdventuresofDai_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1672560025, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/784-Header_DQAdventuresofDai_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/784-th-Thumb_DQAdventuresofDai_400x320.jpg", "label": null, "recommended_series_ids": "774,132,80,814,399,1,5,126", "latest_author": "Story by Riku Sanjo, Art by Koji Inada, Supervision by Yuji Horii", "title_sort": "dragon quest: the adventure of dai"}}, {"manga_series": {"id": 775, "updated_at": "2021-08-24T13:41:08.000-07:00", "manga_series_common_id": 775, "device_id": 4, "keyart": "img/manga_series_header/775-SeriesHeaders_StarWars_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2385, "manga_imprint_id": null, "title": "Star Wars: The High Republic: Edge of Balance", "synopsis": "\"It is the era of the High Republic and Republic expansion is at its height. As trusted guardians of peace, the renowned Jedi protect the Republic and shine their light on those exploring the darkest reaches of the galaxy.\r\n\r\n\u00a9 &amp; TM 2021 LUCASFILM LTD\r\nCopyright \u00a9 2021 Disney Enterprises, Inc. All rights reserved.\"", "tagline": "Jump into hyperspace with all-new Star Wars publishing!", "rating": "t", "vanityurl": "star-wars-high-republic-edge-balance", "copyright": "\u00a9 & TM 2021 LUCASFILM LTD\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Copyright \u00a9 2021 Disney Enterprises, Inc. All rights reserved.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/775-SeriesHeaders_StarWars_2000x800.jpg", "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096084, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/775-SeriesHeaders_StarWars_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2341-SeriesThumbnails_StarWars_400x320_jpg", "label": null, "recommended_series_ids": "461,922,894,1,414,417,421,460,467,855,856,108,109,110,111,573,574,575,576,578,773,779,789,905,926,697", "latest_author": "Story by Shima Shinya & Daniel Jos\u00e9 Older; Art by Mizuki Sakakibara", "title_sort": "star wars: the high republic: edge of balance"}}, {"manga_series": {"id": 778, "updated_at": "2023-12-05T14:00:00.000-08:00", "manga_series_common_id": 778, "device_id": 4, "keyart": "img/manga_series_keyart/2553-Mao_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2440, "manga_imprint_id": null, "title": "Mao", "synopsis": "When Nanoka travels back in time to a supernatural early 20th century, she gets recruited by aloof exorcist Mao. What is the thread of fate that connects them? Together, they seek answers...and kick some demon butt along the way!", "tagline": "An era-spanning supernatural adventure from the creator of Inuyasha!", "rating": "tp", "vanityurl": "mao", "copyright": "MAO \u00a9 2019 Rumiko TAKAHASHI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707463223, "has_gns": true, "num_gns": 15, "has_chapters": true, "num_chapters": 212, "num_chapters_free": 6, "chapter_latest_pub_date": 1706655510, "chapter_latest_num": 217, "chapter_last_num": 217, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6251-Header_Mao_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2943-Thumb_Mao_v2_400x320.jpg", "label": null, "recommended_series_ids": "782,92,89,710,736,303,585,806", "latest_author": "Rumiko Takahashi", "title_sort": "mao"}}, {"manga_series": {"id": 776, "updated_at": "2023-10-19T10:00:00.000-07:00", "manga_series_common_id": 776, "device_id": 4, "keyart": "img/manga_series_keyart/2557-MLM_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2444, "manga_imprint_id": null, "title": "My Love Mix-Up!", "synopsis": "Aoki has a crush on Hashimoto, the girl in the seat next to him in class. But he despairs when he borrows her eraser and sees she\u2019s written the name of another boy\u2014Ida\u2014on it. To make matters more confusing, Ida sees Aoki holding that very eraser and thinks Aoki has a crush on him!", "tagline": "A mistaken identity leads to a blossoming romance between two boys.", "rating": "t", "vanityurl": "my-love-mix-up", "copyright": "KIETA HATSUKOI \u00a9 2019 by Wataru Hinekure, Aruko/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096071, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 36, "num_chapters_free": 3, "chapter_latest_pub_date": 1697734770, "chapter_latest_num": 36, "chapter_last_num": 36, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6263-Header_MyLoveMixUp_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2969-Thumb_MyLoveMixUp_400x320.jpg", "label": null, "recommended_series_ids": "562,152,600,234,316,824,843", "latest_author": "Story by Wataru Hinekure, Art by Aruko", "title_sort": "my love mix-up!"}}, {"manga_series": {"id": 771, "updated_at": "2021-09-21T17:39:33.000-07:00", "manga_series_common_id": 771, "device_id": 4, "keyart": "img/manga_series_keyart/2561-MarvelMeow_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2447, "manga_imprint_id": null, "title": "Marvel Meow", "synopsis": "\"Join Captain Marvel\u2019s pet, Chewie, as she wreaks havoc in the lives of Marvel\u2019s most popular characters!\r\n\r\nGain a new perspective on beloved favorites such as Spider-Man and Iron Man, formidable villains including Thanos and Galactus, and antiheroes like Deadpool, as they all become the playthings of this capricious \u201ccat\u201d creature.\r\n\r\nOriginally shared on Marvel\u2019s official Instagram, these comic strips have been collected with all-new content into a gift book that will delight Marvel and cat enthusiasts alike!\"", "tagline": "Explore the multiverse with all-new Marvel manga and books!", "rating": "a", "vanityurl": "marvel-meow", "copyright": "\u00a9 2021 Marvel", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1700694308, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6278-Header_Marvel_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3043-Thumb_Marvel_400x320_v2.jpg", "label": null, "recommended_series_ids": "735,741,764,767,852,874,877,399,520,571,591,611,748,868,249,391,686,740,775,800,865,927", "latest_author": "Nao Fuji", "title_sort": "marvel meow"}}, {"manga_series": {"id": 779, "updated_at": "2021-11-08T13:18:30.000-08:00", "manga_series_common_id": 779, "device_id": 4, "keyart": "img/manga_series_header/779-Header_POKJourneys_2000x800_v3.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": null, "title": "Pok\u00e9mon Journeys: The Series", "synopsis": "Ash is back and more determined than ever to be the ultimate Pok\u00e9mon Master! Now he's teamed up with a new friend, Goh, who wants to collect every Pok\u00e9mon from every region!", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-journeys-the-series", "copyright": "\u00a92021 Pok\u00e9mon.\u00a91995-2021 Nintendo / Creatures Inc. / GAME FREAK inc. TM, \u00ae, and character names are trademarks of Nintendo.POCKET MONSTERS - SATOSHI TO GOH NO MONOGATARI! - \u00a9 2020 Machito GOMI/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/779-Header_POKJourneys_2000x800_v3.jpg", "link_img": "img/manga_series_link_img/779-th-Thumb_POKJourneys_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1674460857, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/779-Header_POKJourneys_2000x800_v3.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/779-th-Thumb_POKJourneys_400x320.jpg", "label": null, "latest_author": "Story and Art by Machito Gomi, Original Concept by Satoshi Tajiri, Junichi Masuda & Ken Sugimori, Supervised by Tsunekazu Ishihara", "title_sort": "pok\u00e9mon journeys: the series"}}, {"manga_series": {"id": 773, "updated_at": "2022-01-18T09:41:17.000-08:00", "manga_series_common_id": 773, "device_id": 4, "keyart": "img/manga_series_header/773-Header_POK_PocketComics_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": null, "title": "Pok\u00e9mon Pocket Comics", "synopsis": "The fifth volume in the best-selling Pok\u00e9mon activity and gag comic series, in a substantial brick book format.", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-pocket-comics", "copyright": "\u00a92021 The Pok\u00e9mon Company International.\u00a91995\u20132006 Nintendo / Creatures Inc. / GAME FREAK inc. TM, \u00ae, and character names are trademarks of Nintendo.ALL COLOR BAN\u00a0 POK\u00c9MON 4KOMA MANGA ZENSHU \u00a9 2006 Santa HARUKAZE /SHOGAKUKAN", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/773-Header_POK_PocketComics_2000x800.jpg", "link_img": "img/manga_series_link_img/773-th-Thumb_SunMoonPocketComics_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1674460853, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/773-Header_POK_PocketComics_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/773-th-Thumb_SunMoonPocketComics_400x320.jpg", "label": null, "latest_author": "Santa Harukaze", "title_sort": "pok\u00e9mon pocket comics"}}, {"manga_series": {"id": 791, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 791, "device_id": 4, "keyart": "img/manga_series_header/791-6369_Header_LookBack_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2478, "manga_imprint_id": null, "title": "Look Back", "synopsis": "The overly confident Fujino and the shut-in Kyomoto couldn\u2019t be more different, but a love of drawing manga brings these two small-town girls together. A poignant story of growing up and moving forward that only Tatsuki Fujimoto, the creator of Chainsaw Man, could have crafted.", "tagline": "When two students aspire to become manga artists, the paths they choose change their lives forever. From Chainsaw Man creator Tatsuki Fujimoto!", "rating": "t", "vanityurl": "look-back", "copyright": "LOOK BACK \u00a9 2021 by Tatsuki Fujimoto/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/791-6369_Header_LookBack_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/791-th-3286_Thumb_LookBack_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1695017937, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/791-6369_Header_LookBack_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/791-th-3286_Thumb_LookBack_400x320.jpg", "label": null, "recommended_series_ids": "7,580,9,399,790,728,552,712", "latest_author": "Tatsuki Fujimoto", "title_sort": "look back"}}, {"manga_series": {"id": 795, "updated_at": "2024-01-09T15:36:09.000-08:00", "manga_series_common_id": 795, "device_id": 4, "keyart": "img/manga_series_header/795-Kubo_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2452, "manga_imprint_id": null, "title": "Kubo Won\u2019t Let Me Be Invisible", "synopsis": "Junta Shiraishi blends into the background so much that even his classmates fail to spot him. His goal is to make the most of his high school years, but that pesky invisibility gets in the way\u2026until Nagisa Kubo notices him! Kubo\u2019s playful teasing kicks Shiraishi out of his comfort zone and begins a friendship\u2014or maybe something more?", "tagline": "You can't be invisible when the heroine has her eyes on you!", "rating": "tp", "vanityurl": "kubo-wont-let-me-be-invisible", "copyright": "KUBO SAN WA BOKU WO YURUSANAI \u00a9 2019 by Nene Yukimori/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/795-Kubo_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/795-th-Kubo_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707433878, "has_gns": true, "num_gns": 11, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/795-Kubo_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/795-th-Kubo_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "757,265,475,717,180,632,464,492", "latest_author": "Story and Art by Nene Yukimori", "title_sort": "kubo won\u2019t let me be invisible"}}, {"manga_series": {"id": 798, "updated_at": "2023-07-06T17:41:46.000-07:00", "manga_series_common_id": 798, "device_id": 4, "keyart": "img/manga_series_header/798-WSJ2021_issue42_PageHeader_2000x800_REVISED.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2458, "manga_imprint_id": null, "title": "PPPPPP", "synopsis": "Lucky Sonoda grew up loving the piano as part of the acclaimed Otogami family, but he was considered worthless compared to his renowned and talented siblings. After being abandoned by his famous father, Lucky\u2019s determined to make his way into the piano world with his own unorthodox style!", "tagline": "Strike the right chord with this music manga!", "rating": "t", "vanityurl": "pppppp", "copyright": "PPPPPP \u00a9 2021 by Mapollo 3/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/798-WSJ2021_issue42_PageHeader_2000x800_REVISED.jpg", "link_img": "img/manga_series_link_img/798-th-WSJ2021_Issue42_Thumbnail_400x320_REVISED.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377974, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/798-WSJ2021_issue42_PageHeader_2000x800_REVISED.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/798-th-WSJ2021_Issue42_Thumbnail_400x320_REVISED.jpg", "label": null, "recommended_series_ids": "7,757,304,450,124,454,399,129", "latest_author": "Story and Art by Mapollo 3", "title_sort": "pppppp"}}, {"manga_series": {"id": 800, "updated_at": "2021-10-06T16:37:28.000-07:00", "manga_series_common_id": 800, "device_id": 4, "keyart": "img/manga_series_header/800-SeriesHeaders_StarWars_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2385, "manga_imprint_id": null, "title": "Star Wars: Guardians of the Whills", "synopsis": "Jump into hyperspace with all-new Star Wars publishing!", "tagline": "Jump into hyperspace with all-new Star Wars publishing!", "rating": "tp", "vanityurl": "star-wars-guardians-of-the-whills", "copyright": "\u00a9 & TM 2017 LUCASFILM", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/800-SeriesHeaders_StarWars_2000x800.jpg", "link_img": "img/manga_series_link_img/800-th-SeriesThumbnails_StarWars_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096061, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/800-SeriesHeaders_StarWars_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/800-th-SeriesThumbnails_StarWars_400x320.jpg", "label": null, "recommended_series_ids": "461,922,894,1,414,417,421,460,467,855,856,108,109,110,111,573,574,575,576,578,773,779,789,905,926,697", "latest_author": "Adapted by Jon Tsuei, Illustrated by Subaru", "title_sort": "star wars: guardians of the whills"}}, {"manga_series": {"id": 756, "updated_at": "2021-10-12T06:36:03.000-07:00", "manga_series_common_id": 756, "device_id": 4, "keyart": "img/manga_series_header/756-Header_FMA_Novel06_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 525, "manga_imprint_id": null, "title": "Fullmetal Alchemist (Novel)", "synopsis": "Somewhere between magic, art and science exists a world of alchemy. And into this world travel Edward and Alphonse Elric\u2014two brothers in search of the Philosopher's Stone, the ultimate alchemical treasure!", "tagline": "Alchemy tore the Elric brothers\u2019 bodies apart. Can their bond make them whole again?", "rating": "a", "vanityurl": "fullmetal-alchemist-novels", "copyright": "\u00a9 2003-2007 Hiromu Arakawa, Makoto Inoue/SQUARE ENIX", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/756-Header_FMA_Novel06_2000x800.jpg", "link_img": "img/manga_series_link_img/756-th-Thumb_FMA_Novel06_v2_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1664956139, "has_gns": true, "num_gns": 6, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/756-Header_FMA_Novel06_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/756-th-Thumb_FMA_Novel06_v2_400x320.jpg", "label": null, "recommended_series_ids": "449,87,8,293,691,1,414,417,421,460,467,855,856", "latest_author": "Novel by Makoto Inoue, Original Concept by Hiromu Arakawa", "title_sort": "fullmetal alchemist (novel)"}}, {"manga_series": {"id": 777, "updated_at": "2023-11-09T10:00:00.000-08:00", "manga_series_common_id": 777, "device_id": 4, "keyart": "img/manga_series_header/777-Header_Frieren_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2451, "manga_imprint_id": null, "title": "Frieren: Beyond Journey\u2019s End", "synopsis": "Elf mage Frieren and her courageous fellow adventurers have defeated the Demon King and brought peace to the land. But Frieren will long outlive the rest of her former party. How will she come to understand what life means to the people around her?", "tagline": "The adventure is over but new life lessons await this young elf mage. ", "rating": "tp", "vanityurl": "frieren-the-journeys-end", "copyright": "SOSO NO FRIEREN \u00a9 2020 Kanehito YAMADA, Tsukasa ABE/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/777-Header_Frieren_2000x800.jpg", "link_img": "img/manga_series_link_img/777-th-Thumb_Frieren_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434326, "has_gns": true, "num_gns": 9, "has_chapters": true, "num_chapters": 114, "num_chapters_free": 6, "chapter_latest_pub_date": 1707260339, "chapter_latest_num": 124, "chapter_last_num": 124, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/777-Header_Frieren_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/777-th-Thumb_Frieren_400x320.jpg", "label": null, "recommended_series_ids": "271,146,720,736,541,118,742,806", "latest_author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "title_sort": "frieren: beyond journey\u2019s end"}}, {"manga_series": {"id": 809, "updated_at": "2023-01-17T11:22:54.000-08:00", "manga_series_common_id": 809, "device_id": 4, "keyart": "img/manga_series_header/809-SHOWHA_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2461, "manga_imprint_id": null, "title": "Show-ha Shoten!", "synopsis": "Shy Azemichi Shijima has secretly been studying the art of comedy. His outgoing classmate Taiyo Higashikata has big dreams of being funny but no follow-through. When the two team up, they just might take the comedy world by storm!", "tagline": "A pair of dreamers want to rise to the top of the comedy world! Story by Akinari Asakura and art by Takeshi Obata (Death Note)!!", "rating": "t", "vanityurl": "show-ha-shoten", "copyright": "SHOW-HA SHOTEN! \u00a9 2021 by Akinari Asakura, Takeshi Obata/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/809-SHOWHA_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/809-th-SHOWA_Thumbnail_400x320v5.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706816683, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/809-SHOWHA_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/809-th-SHOWA_Thumbnail_400x320v5.jpg", "label": null, "recommended_series_ids": "825,7,9,700,124,451,798,258", "latest_author": "Story by Akinari Asakura, Art by Takeshi Obata", "title_sort": "show-ha shoten!"}}, {"manga_series": {"id": 811, "updated_at": "2023-02-21T17:45:12.000-08:00", "manga_series_common_id": 811, "device_id": 4, "keyart": "img/manga_series_header/811-WSJ2021_issue50_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2462, "manga_imprint_id": null, "title": "Ayashimon", "synopsis": "When the Enma Syndicate\u2019s chairman dies, Japan\u2019s supernatural underworld is turned on its head, leaving gangs of ayashimon poised on the brink of war. Urara, the late chairman\u2019s daughter, has plans to come out on top, and she\u2019s found an unlikely ally to help make it happen\u2014Maruo, a human who dreams of being a manga hero.", "tagline": "Maruo dreams of becoming a manga protagonist as he punches his way into the monstrous world of the Ayashimon Yakuza. By the creator of Hell's Paradise.", "rating": "t", "vanityurl": "ayashimon", "copyright": "AYASHIMON \u00a9 2021 by Yuji Kaku/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/811-WSJ2021_issue50_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/811-th-WSJ2021_issue50_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1693415655, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/811-WSJ2021_issue50_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/811-th-WSJ2021_issue50_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "553,540,79,693", "latest_author": "Yuji Kaku", "title_sort": "ayashimon"}}, {"manga_series": {"id": 812, "updated_at": "2023-11-08T15:59:09.000-08:00", "manga_series_common_id": 812, "device_id": 4, "keyart": "img/manga_series_header/812-WSJ2021_issue51_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2463, "manga_imprint_id": null, "title": "Protect Me, Shugomaru!", "synopsis": "When famous heiress Sanagi learns that a faceless assassin named Skull is after her head, she needs some protection! Unfortunately for her, the first thing that Shugomaru the bodyguard does is use a grenade to kill a bee. Talk about overkill! Sanagi\u2019s life may indeed be at risk\u2014not only from an assassin, but also from her own bodyguard!", "tagline": "Being a bodyguard isn't easy, especially when you\u2019re a danger to everyone around you!  Chapter 8 is age-gated and web-only.", "rating": "t", "vanityurl": "protect-me-shugomaru", "copyright": "MAMORE! SHUGOMARU \u00a9 2021 by Daiki Ihara/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/812-WSJ2021_issue51_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/812-th-WSJ2021_issue51_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1703578121, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/812-WSJ2021_issue51_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/812-th-WSJ2021_issue51_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "132,10,733,694,721,627,753", "latest_author": "Daiki Ihara", "title_sort": "protect me, shugomaru!"}}, {"manga_series": {"id": 780, "updated_at": "2021-11-23T11:53:54.000-08:00", "manga_series_common_id": 780, "device_id": 4, "keyart": "img/manga_series_keyart/2637-RosenBlood_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2454, "manga_imprint_id": null, "title": "Rosen Blood", "synopsis": "After a horrific carriage accident, Stella Violetta awakens in a Gothic mansion to find that her saviors are gorgeous young men. The manor\u2019s residents let her stay as a maid, but Stella soon realizes that their allure hides a savage thirst.", "tagline": "Stella becomes imperiled by her rescuers\u2014a group of gorgeous young men, thirsty for blood.", "rating": "tp", "vanityurl": "rosen-blood", "copyright": "ROSEN BLOOD~HAITOKU NO MEIKAN~ \u00a9 2018 KACHIRU ISHIZUE (AKITASHOTEN)", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096076, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6281-Header_RosenBlood_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3046-Thumb_RosenBlood_400x320.jpg", "label": null, "recommended_series_ids": "430,349,272,15,350,357,501", "latest_author": "Kachiru Ishizue", "title_sort": "rosen blood"}}, {"manga_series": {"id": 774, "updated_at": "2023-03-07T16:25:01.000-08:00", "manga_series_common_id": 774, "device_id": 4, "keyart": "img/manga_series_keyart/2641-ATMT_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2455, "manga_imprint_id": null, "title": "Akira Toriyama's Manga Theater", "synopsis": "From Akira Toriyama, the legendary manga creator of Dragon Ball, comes this special collection of short stories spanning the first few decades of his career. Serving as both a collection of his early works and a history of his life as a manga writer and illustrator, this giant tome is packed with everything you could ever want as a fan of classic shonen manga.", "tagline": "Action-packed short stories from the creator of Dragon Ball!", "rating": "tp", "vanityurl": "akira-toriyamas-manga-theater", "copyright": "TORIYAMA AKIRA MARUSAKU GEKIJOU \u00a9 1983 by BIRD STUDIO/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1678235101, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6285-Header_AkiraToriyamaMangaTheater_B_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3054-Thumb_AkiraToriyamaMangaTheater_400x320.jpg", "label": null, "recommended_series_ids": "283,132,466,80,566", "latest_author": "Akira Toriyama", "title_sort": "akira toriyama's manga theater"}}, {"manga_series": {"id": 814, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 814, "device_id": 4, "keyart": "img/manga_series_header/814-JOJO_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": null, "title": "JoJo\u2019s Bizarre Adventure: Part 6--Stone Ocean", "synopsis": "", "tagline": "The action shifts from Italy to America as Jolyne Cujoh is sentenced to 15 years in prison for a crime she didn't commit!", "rating": "tp", "vanityurl": "jojos-bizarre-adventure-part-6", "copyright": "JOJO'S BIZARRE ADVENTURE PART6 STONE OCEAN \u00a9 1999 by LUCKY LAND COMMUNICATIONS/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/814-JOJO_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/814-th-JOJO_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434266, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/814-JOJO_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/814-th-JOJO_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "339,376,469,596,768", "latest_author": "Hirohiko Araki", "title_sort": "jojo\u2019s bizarre adventure: part 6--stone ocean"}}, {"manga_series": {"id": 782, "updated_at": "2023-05-10T13:21:54.000-07:00", "manga_series_common_id": 782, "device_id": 4, "keyart": "img/manga_series_keyart/2657-CTM_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2460, "manga_imprint_id": null, "title": "Came the Mirror & Other Tales", "synopsis": "Five intimate magical-realist tales from manga legend Rumiko Takahashi! A supernatural mirror compels a teenager to draw out and destroy the evil lurking within others. But will his duty destroy him? A has-been manga creator acquires the power to curse his competition. Is it worth it? A pet cat possesses a human\u2014warning, side effects may include partial transmogrification... And more!\r\n\r\nPlus, a rare behind-the-scenes autobiographical story about Takahashi\u2019s lifelong love affair with manga (and friendship with manga creator Mitsuru Adachi)!", "tagline": "An eclectic collection of short stories from the beloved creator of Inuyasha!", "rating": "tp", "vanityurl": "came-the-mirror-and-other-tales", "copyright": "KAGAMI GA KITA TAKAHASHI RUMIKO TANPENSHU \u00a9\ufe0f 2015 Rumiko TAKAHASHI/SHOGAKUKAN", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1683750114, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 6, "chapter_last_num": 6, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6306-Header_CameTheMirror_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3111-Thumb_CameTheMirror_400x320.jpg", "label": null, "recommended_series_ids": "83,836,89,710,778,698,187,806", "latest_author": "Rumiko Takahashi", "title_sort": "came the mirror & other tales"}}, {"manga_series": {"id": 825, "updated_at": "2023-07-03T21:08:38.000-07:00", "manga_series_common_id": 825, "device_id": 4, "keyart": "img/manga_series_header/825-WSJ2022_issue11_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2472, "manga_imprint_id": null, "title": "Akane-banashi", "synopsis": "Shinta Arakawa wants nothing more than to pass his shin\u2019uchi exam\u2014the test that would make him a top-rank headliner and master storyteller in the traditional Japanese art of rakugo. Akane Osaki, his daughter and biggest fan, spies on him while he practices and learns his routines for herself. When rakugo master Issho Arakawa expels everyone after the exam with no explanation, a fire is lit inside Akane. From that day forth, she has had one goal\u2014to avenge her father and prove his art was worthy of the title of shin\u2019uchi.", "tagline": "Akane takes on the world of rakugo to avenge her father!", "rating": "t", "vanityurl": "akane-banashi", "copyright": "AKANE BANASHI \u00a9 2022 by Yuki Suenaga, Takamasa Moue/SHUEISHA Inc. ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/825-WSJ2022_issue11_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/825-th-WSJ2022_issue11_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707663638, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/825-WSJ2022_issue11_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/825-th-WSJ2022_issue11_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "7,450,124,798,809", "latest_author": "Story by Yuki Suenaga, Art by Takamasa Moue", "title_sort": "akane-banashi"}}, {"manga_series": {"id": 785, "updated_at": "2023-12-21T10:00:00.000-08:00", "manga_series_common_id": 785, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2464, "manga_imprint_id": null, "title": "Ima Koi: Now I'm in Love", "synopsis": "After missing out on love because she was too shy to confess her feelings, high school student Satomi blurts out how she feels the next time she gets a crush\u2014and it\u2019s to her impossibly handsome schoolmate Yagyu! To her surprise, he agrees to date her. Now that Satomi\u2019s suddenly in a relationship, what next?", "tagline": "Sometimes the greatest rush isn\u2019t falling in love\u2014it\u2019s what happens after you fall in love!", "rating": "t", "vanityurl": "ima-koi", "copyright": "IMA, KOIWO SHITEIMASU. \u00a9 2019 by Ayuko Hatta/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707422143, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 32, "num_chapters_free": 3, "chapter_latest_pub_date": 1703181570, "chapter_latest_num": 32, "chapter_last_num": 32, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6313-Header_ImaKoi_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3120-Thumb_ImaKoi_400x320.jpg", "label": null, "recommended_series_ids": "562,606,436,600,776,316,190,806", "latest_author": "Ayuko Hatta", "title_sort": "ima koi: now i'm in love"}}, {"manga_series": {"id": 826, "updated_at": "2023-09-12T11:54:40.000-07:00", "manga_series_common_id": 826, "device_id": 4, "keyart": "img/manga_series_header/826-WSJ2022_issue12_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2473, "manga_imprint_id": null, "title": "Earthchild", "synopsis": "Kareri Hoshifuri is an Earthchild, a special human imbued with powers by the earth itself. As an Earthchild, she spends all her time on classified missions to keep the planet safe. But one day, she happens to save the life of high schooler Reisuke Sawada, a stubborn guy who falls helplessly in love with her!", "tagline": "An unlikely romance has planet-sized consequences!", "rating": "t", "vanityurl": "earthchild", "copyright": "CHIKYU NO KO \u00a9 2022 by Hideo Shinkai/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/826-WSJ2022_issue12_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/826-th-WSJ2022_issue12_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1698131324, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/826-WSJ2022_issue12_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/826-th-WSJ2022_issue12_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "318,470,718,399,739,632", "latest_author": "Hideo Shinkai", "title_sort": "earthchild"}}, {"manga_series": {"id": 787, "updated_at": "2023-09-07T16:37:13.000-07:00", "manga_series_common_id": 787, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2467, "manga_imprint_id": null, "title": "Orochi: The Perfect Edition", "synopsis": "A mysterious young woman slithers her way into the lives of unsuspecting people like the legendary multitailed serpent for which she is named\u2014Orochi.", "tagline": "Interconnected short stories by legendary horror manga creator Kazuo Umezz.", "rating": "tp", "vanityurl": "orochi-the-perfect-edition", "copyright": "OROCHI: UMEZZ PERFECTION! \u00a9 2005 Kazuo UMEZZ/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096083, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 9, "num_chapters_free": 1, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 9, "chapter_last_num": 9, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6314-Header_Orochi_2000x800_v3a.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3121-Thumb_Orochi_400x320_v3a.jpg", "label": null, "recommended_series_ids": "189,174,257,620,706,885,744", "latest_author": "Story and Art by Kazuo Umezz", "title_sort": "orochi: the perfect edition"}}, {"manga_series": {"id": 799, "updated_at": "2022-06-15T11:03:59.000-07:00", "manga_series_common_id": 799, "device_id": 4, "keyart": "img/manga_series_header/799-Header_TheComiq_2000x800_v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2332, "manga_imprint_id": null, "title": "The Comiq", "synopsis": "Three years ago, a murder took place on Halloween. Everyone believed the case was closed, but in truth, the real culprit is still at large! Get ready to unravel this exciting mystery by Yu-Gi-Oh! creator Kazuki Takahashi about a budding manga artist and his imprisoned assistant!", "tagline": "Only a manga artist can solve a puzzling murder in this mystery by the creator of Yu-Gi-Oh!", "rating": "t", "vanityurl": "the-comiq", "copyright": "THE COMIQ \u00a9 2018 by Kazuki Takahashi/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/799-Header_TheComiq_2000x800_v2.jpg", "link_img": "img/manga_series_link_img/799-th-Thumb_TheComiq_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1657039436, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/799-Header_TheComiq_2000x800_v2.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/799-th-Thumb_TheComiq_400x320.jpg", "label": null, "recommended_series_ids": "218,10,80,299,446,466,566,1,414,417,421,460,467,855,856,128,133,158,247,248,256,286,326,489", "latest_author": "Kazuki Takahashi", "title_sort": "comiq"}}, {"manga_series": {"id": 827, "updated_at": "2023-05-03T15:26:13.000-07:00", "manga_series_common_id": 827, "device_id": 4, "keyart": "img/manga_series_header/827-WSJ2022_GoodbyeEri_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2508, "manga_imprint_id": null, "title": "Goodbye, Eri", "synopsis": "Young filmmaker Yuta contemplates suicide after the death of his mother, but a chance meeting with a mysterious girl will alter his life in an explosive way.", "tagline": "An emotional tour de force that takes the manga medium to new heights! From Chainsaw Man creator Tatsuki Fujimoto!", "rating": "t", "vanityurl": "goodbye-eri", "copyright": "SAYONARA ERI \u00a9 2022 by Tatsuki Fujimoto/SHUEISHA Inc.", "show_chapter": false, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/827-WSJ2022_GoodbyeEri_2000x800.jpg", "link_img": "img/manga_series_link_img/827-th-WSJ2022_GoodbyeEri_1200x630_1.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1695017939, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/827-WSJ2022_GoodbyeEri_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/827-th-WSJ2022_GoodbyeEri_1200x630_1.jpg", "label": null, "recommended_series_ids": "580,763,540,840,791", "latest_author": "Tatsuki Fujimoto", "title_sort": "goodbye, eri"}}, {"manga_series": {"id": 801, "updated_at": "2022-12-15T11:48:57.000-08:00", "manga_series_common_id": 801, "device_id": 4, "keyart": "img/manga_series_header/801-Header_DeathNoteSS_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 617, "manga_imprint_id": null, "title": "Death Note Short Stories", "synopsis": "Is Kira\u2019s story truly over, or does his influence linger?\r\n\r\nIn this complete collection of Death Note short stories penned by the series\u2019 creators, discover tales of lives irrevocably changed by the sinister influence of the Death Note, with surprising and thrilling answers to the question of what it truly takes to use the Death Note\u2026or fight it.\r\n\r\nContains stories \u201cC-Kira,\u201d \u201ca-Kira,\u201d the Death Note pilot chapter, vignettes of L\u2019s life, and more.", "tagline": "Is Kira's story truly over, or does his influence linger? Death Note's story continues in this collection of short stories penned by the series' creators.", "rating": "tp", "vanityurl": "death-note-short-stories", "copyright": "DEATH NOTE TANPENSHU \u00a9 2003 by Tsugumi Ohba, Takeshi Obata/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/801-Header_DeathNoteSS_2000x800.jpg", "link_img": "img/manga_series_link_img/801-th-Thumb_DeathNoteSS_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671133737, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/801-Header_DeathNoteSS_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/801-th-Thumb_DeathNoteSS_400x320.jpg", "label": null, "recommended_series_ids": "549,9,700,339,730", "latest_author": "Story by Tsugumi Ohba, Art by Takeshi Obata", "title_sort": "death note short stories"}}, {"manga_series": {"id": 783, "updated_at": "2022-04-26T14:26:30.000-07:00", "manga_series_common_id": 783, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2468, "manga_imprint_id": null, "title": "Onigiri", "synopsis": "When a snack stands the test of time, you know it\u2019s good! Onigiri\u2014balls of rice that can be served plain or stuffed with tuna, mushrooms, sweet potatoes, and more\u2014are one of the most delectable and convenient foods in Japanese cuisine.\r\n\r\nAi Watanabe and Samuel Trifot, founders of the popular restaurant Gili-Gili, present thirty-six delicious recipes showcasing the irresistible and versatile onigiri\u2014the perfect food for life on the go!", "tagline": "Japanese rice balls made easy!", "rating": "a", "vanityurl": "onigiri", "copyright": "\u00a9 Editions First, an imprint of Edi8, 2021", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096065, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6334-Header_Onigiri_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3193-Thumb_Onigiri_400x320.jpg", "label": null, "recommended_series_ids": "567,584,772,96,708", "latest_author": "Created by Samuel Trifot and Ai Watanabe, Photography by Akiko Ida", "title_sort": "onigiri"}}, {"manga_series": {"id": 802, "updated_at": "2022-06-15T11:06:49.000-07:00", "manga_series_common_id": 802, "device_id": 4, "keyart": "img/manga_series_header/802-Header_Marvel_2000x800_v2.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2447, "manga_imprint_id": null, "title": "Secret Reverse", "synopsis": "In Yu-Gi-Oh! creator Kazuki Takahashi\u2019s epic team-up between Iron Man and Spider-Man, Tony Stark travels to Japan to attend a gaming convention. Awaiting his arrival is Reijiro Kaioh, the CEO of a world-famous card game company. Kaioh plans to unveil an amazing new gaming machine, but the inventor and his device are not at all what they appear to be\u2026", "tagline": "Explore the multiverse with all-new Marvel manga and books!", "rating": "t", "vanityurl": "marvel-secret-reverse", "copyright": "\u00a9 2022 MARVEL", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/802-Header_Marvel_2000x800_v2.jpg", "link_img": "img/manga_series_link_img/802-th-Thumb_Marvel_400x320_v2.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687330908, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/802-Header_Marvel_2000x800_v2.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/802-th-Thumb_Marvel_400x320_v2.jpg", "label": null, "recommended_series_ids": "735,741,764,767,852,874,877,399,520,571,591,611,748,868,249,391,686,740,775,800,865,927", "latest_author": "Kazuki Takahashi", "title_sort": "secret reverse"}}, {"manga_series": {"id": 806, "updated_at": "2023-08-24T13:44:53.000-07:00", "manga_series_common_id": 806, "device_id": 4, "keyart": "img/manga_series_header/806-Header_YashahimeManga_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2414, "manga_imprint_id": null, "title": "Yashahime: Princess Half-Demon", "synopsis": "Can the three teenage daughters of demon dog half-brothers Inuyasha and Sesshomaru save their parents, themselves, and both realms from the menace of the seven mystical Rainbow Pearls?", "tagline": "The daughters of Sesshomaru and Inuyasha set out on a journey transcending time!", "rating": "t", "vanityurl": "yashahime-princess-half-demon", "copyright": "-IDEN EHONZOSHI-HANYO NO YASHAHIME \u00a9\ufe0e 2022 Takashi SHIINA/SHOGAKUKAN   \u00a9\ufe0f Rumiko Takahashi/Shogakukan, Yomiuri TV, Sunrise 2020   Based on the original graphic novel \"Inuyasha\" by Rumiko TAKAHASHI, published by Shogakukan Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/806-Header_YashahimeManga_2000x800.jpg", "link_img": "img/manga_series_link_img/806-th-Thumb_YashahimeManga_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707434534, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 29, "num_chapters_free": 5, "chapter_latest_pub_date": 1706144310, "chapter_latest_num": 29, "chapter_last_num": 29, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/806-Header_YashahimeManga_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/806-th-Thumb_YashahimeManga_400x320.jpg", "label": null, "recommended_series_ids": "782,89,710,778,736,303,698,585", "latest_author": "Story and Art by Takashi Shiina, Main Character Design by Rumiko Takahashi, Script Cooperation by Katsuyuki Sumisawa", "title_sort": "yashahime: princess half-demon"}}, {"manga_series": {"id": 803, "updated_at": "2022-06-15T11:09:13.000-07:00", "manga_series_common_id": 803, "device_id": 4, "keyart": "img/manga_series_header/803-Header_ToStriptheFlesh_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2474, "manga_imprint_id": null, "title": "To Strip the Flesh", "synopsis": "Chiaki Ogawa has never doubted that he is a boy, although the rest of the world has not been as kind. Bound by his mother\u2019s dying wish, Chiaki tries to be a good daughter to his ailing father.", "tagline": "Stories that explore what must be stripped away to find the truth.", "rating": "tp", "vanityurl": "to-strip-the-flesh", "copyright": "TODA OTO TANPENSHU NIKU WO HAGU \u00a9 2020 by Oto Toda/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/803-Header_ToStriptheFlesh_2000x800.jpg", "link_img": "img/manga_series_link_img/803-th-Thumb_ToStriptheFlesh_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1656434525, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/803-Header_ToStriptheFlesh_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/803-th-Thumb_ToStriptheFlesh_400x320.jpg", "label": null, "recommended_series_ids": "702,709,506,550", "latest_author": "Oto Toda", "title_sort": "to strip the flesh"}}, {"manga_series": {"id": 829, "updated_at": "2023-12-01T18:22:49.000-08:00", "manga_series_common_id": 829, "device_id": 4, "keyart": "img/manga_series_header/829-WSJ2022_issue27_PageHeader_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2479, "manga_imprint_id": null, "title": "Aliens Area", "synopsis": "Within the vast emptiness of space, planets like Earth exist in a lawless zone known as Aliens Area. Without the means or the technology to defend themselves, the planet is left at the mercy of extraterrestrial threats. That\u2019s why it\u2019s up to the investigators of Foreign Affairs 5 to protect the citizens of Earth from the aliens who walk among them!", "tagline": "Aliens have infiltrated Earth and some of them are up to no good!", "rating": "t", "vanityurl": "aliens-area", "copyright": "ALIENS AREA \u00a9 2022 by Fusai Naba/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/829-WSJ2022_issue27_PageHeader_2000x800.jpg", "link_img": "img/manga_series_link_img/829-th-WSJ2022_issue27_Thumbnail_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705997327, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/829-WSJ2022_issue27_PageHeader_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/829-th-WSJ2022_issue27_Thumbnail_400x320.jpg", "label": null, "recommended_series_ids": "461,763,796,826,488,828", "latest_author": "Story and Art by Fusai Naba", "title_sort": "aliens area"}}, {"manga_series": {"id": 808, "updated_at": "2022-08-03T11:07:41.000-07:00", "manga_series_common_id": 808, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2476, "manga_imprint_id": null, "title": "Rooster Fighter", "synopsis": "In a world where terrifying monsters walk the earth, one heroic rooster is destined for greatness. When giant demons threaten the innocent, he\u2019s going to show them who\u2019s boss!", "tagline": "While giant monsters wreak havoc, one brave rooster must stand his ground!", "rating": "tp", "vanityurl": "rooster-fighter", "copyright": "Rooster Fighter \u00a9 Shu Sakuratani / HERO'S", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377754, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6355-Header_RoosterFighter_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3242-Thumb_RoosterFighter_400x320.jpg", "label": null, "recommended_series_ids": "608,749,527,249,391,317", "latest_author": "Shu Sakuratani", "title_sort": "rooster fighter"}}, {"manga_series": {"id": 820, "updated_at": "2023-01-30T13:04:03.000-08:00", "manga_series_common_id": 820, "device_id": 4, "keyart": "img/manga_series_header/820-Header_ThusSpokeRohanKishibe_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 627, "manga_imprint_id": null, "title": "Thus Spoke Rohan Kishibe", "synopsis": "JoJo\u2019s Bizarre Adventure is a groundbreaking manga famous for its outlandish characters, wild humor, and frenetic battles, and this spin-off featuring the popular Rohan Kishibe continues the tradition!", "tagline": "A spinoff of JoJo\u2019s Bizarre Adventure featuring everyone\u2019s favorite manga artist, Rohan Kishibe!", "rating": "tp", "vanityurl": "thus-spoke-rohan-kishibe", "copyright": "KISHIBE ROHAN WA UGOKANAI \u00a9 2013 by LUCKY LAND COMMUNICATIONS/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/820-Header_ThusSpokeRohanKishibe_2000x800.jpg", "link_img": "img/manga_series_link_img/820-th-Thumb_ThusSpokeRohanKishibe_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699998923, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/820-Header_ThusSpokeRohanKishibe_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/820-th-Thumb_ThusSpokeRohanKishibe_400x320.jpg", "label": null, "recommended_series_ids": "22,784,339,376,469,596,768,814", "latest_author": "Story and Art by Hirohiko Araki", "title_sort": "thus spoke rohan kishibe"}}, {"manga_series": {"id": 819, "updated_at": "2023-07-18T10:00:00.000-07:00", "manga_series_common_id": 819, "device_id": 4, "keyart": "img/manga_series_keyart/2749-RomanticKiller_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2481, "manga_imprint_id": null, "title": "Romantic Killer", "synopsis": "High schooler Anzu Hoshino has a great life. Every day she plays video games, pigs out on snacks, and pets her beloved cat. But this blissful existence is turned into a confusing mess when a magical creature transports her to an altered reality bereft of her favorite things. Now she\u2019s stuck with hot guys instead! How can she possibly survive in such an awful world?!", "tagline": "To save humanity, and her cat, Anzu must go\u2026on a date?", "rating": "t", "vanityurl": "romantic-killer", "copyright": "ROMANTIC KILLER \u00a9 2019 by Wataru Momose/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1690385450, "has_gns": true, "num_gns": 4, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6372-Header_RomanticKiller_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3314-Thumb_RomanticKiller_400x320.jpg", "label": null, "recommended_series_ids": "757,530,795,632,492,753", "latest_author": "Wataru Momose", "title_sort": "romantic killer"}}, {"manga_series": {"id": 816, "updated_at": "2022-10-18T13:46:37.000-07:00", "manga_series_common_id": 816, "device_id": 4, "keyart": "img/manga_series_keyart/2753-SJ_GuideMakingManga_SeriesBrick_940x332.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2483, "manga_imprint_id": null, "title": "The Shonen Jump Guide to Making Manga", "synopsis": "From Dragon Ball to Demon Slayer, from One Piece to My Hero Academia and beyond, Weekly Shonen Jump has published some of the finest manga to grace the earth. Now, the creators and editors behind several of the most popular manga in Shonen Jump sit down to discuss how to craft exciting stories, how to use your tools to the best of your abilities, and more. Whether you\u2019re getting started on your artistic path or a veteran looking for new tips, The Shonen Jump Guide to Making Manga is the perfect book to sharpen your skills.\u00a0\u00a0\r\n\r\n\r\n\r\nFeaturing commentary and advice from Eiichiro Oda (One Piece), Tite Kubo (Bleach), Shun Saeki (Food Wars), Kaiu Shirai &amp; Posuka Demizu (The Promised Neverland), Yusei Matsui (Assassination Classroom), Kohei Horikoshi (My Hero Academia), and more!", "tagline": " ", "rating": "tp", "vanityurl": "the-shonen-jump-guide-to-making-manga", "copyright": "KAKITAI!! WO SHINJIRU SHONEN JUMP GA DOSHITEMO TSUTAETAI MANGA NO KAKIKATA \u00a9 2021 by Weekly Shonen Jump/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1668409942, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6392-Header_SJGuideToMakingManga_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3381-Thumb_SJGuideToMakingManga_400x320.jpg", "label": null, "recommended_series_ids": "7,428,500,5,690,904,910,552", "latest_author": "Weekly Shonen Jump Editorial Department", "title_sort": "shonen jump guide to making manga"}}, {"manga_series": {"id": 818, "updated_at": "2022-11-02T08:46:33.000-07:00", "manga_series_common_id": 818, "device_id": 4, "keyart": "img/manga_series_header/818-Header_DemonSlayer_FlowerHappiness_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2267, "manga_imprint_id": null, "title": "Demon Slayer: Kimetsu no Yaiba Novels", "synopsis": "Revisit the Demon Slayer Corps with five tales of love, friendship, and courage!", "tagline": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "rating": "a", "vanityurl": "demon-slayer-novels", "copyright": "KIMETSU NO YAIBA SHIAWASE NO HANA \u00a9 2019 by Koyoharu Gotouge, Aya Yajima/SHUEISHA Inc.   KIMETSU NO YAIBA KATAHA NO CHOU \u00a9 2019 by Koyoharu Gotouge, Aya Yajima/SHUEISHA Inc.   KIMETSU NO YAIBA KAZE NO MICHISHIRUBE \u00a9 2020 by Koyoharu Gotouge, Aya Yajima/SHUEISHA Inc.      ", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/818-Header_DemonSlayer_FlowerHappiness_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/818-th-Thumb_DemonSlayer_FlowerHappiness_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699999174, "has_gns": true, "num_gns": 3, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/818-Header_DemonSlayer_FlowerHappiness_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/818-th-Thumb_DemonSlayer_FlowerHappiness_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,22,89,296,79,14,232,490,523,483,537,579,371,465,468,519", "latest_author": "Original Concept by Koyoharu Gotouge, Written by Aya Yajima", "title_sort": "demon slayer: kimetsu no yaiba novels"}}, {"manga_series": {"id": 821, "updated_at": "2022-12-19T15:59:35.000-08:00", "manga_series_common_id": 821, "device_id": 4, "keyart": "img/manga_series_header/821-Header_BeyondTPN_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2235, "manga_imprint_id": null, "title": "Kaiu Shirai x Posuka Demizu: Beyond The Promised Neverland", "synopsis": "From the creators of The Promised Neverland comes a collection of their best short stories. Features the pilot chapter of the series that would become their biggest hit and an epilogue chapter showing what Emma, Ray, and Norman did after the end of the main story!", "tagline": "A short story collection from the master storytellers behind The Promised Neverland!", "rating": "tp", "vanityurl": "kaiu-shirai-posuka-demizu-beyond-the-promised-neverland", "copyright": "SHIRAI KAIU\u00d7DEMIZU POSUKA TANPENSHU \u00a9 2021 by Kaiu Shirai, Posuka Demizu/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/821-Header_BeyondTPN_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/821-th-Thumb_BeyondTPN_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1671494375, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/821-Header_BeyondTPN_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/821-th-Thumb_BeyondTPN_400x320.jpg", "label": null, "recommended_series_ids": "356,8,293,691,105,580,851,9,801,581,399,520,571,591,611,748,868,483,537,579,371,465,468,519", "latest_author": "Story by Kaiu Shirai, Art by Posuka Demizu", "title_sort": "kaiu shirai x posuka demizu: beyond the promised neverland"}}, {"manga_series": {"id": 824, "updated_at": "2023-12-21T10:00:00.000-08:00", "manga_series_common_id": 824, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2484, "manga_imprint_id": null, "title": "Rainbow Days", "synopsis": "These four friends couldn\u2019t be more different: Natsuki Hashiba, a dreamer who longs for love, Tomoya Matsunaga, a self-centered playboy, Keiichi Katakura, a winsome guy with a hidden saucy streak, and Tsuyoshi Naoe, a socially awkward nerd who loves anime, manga, and games. Together their high school days are as vibrant as rainbows!", "tagline": "The colorful ups and downs of teenage love through the eyes of four male friends.", "rating": "tp", "vanityurl": "rainbow-days", "copyright": "NIJIIRO DAYS \u00a9 2011 by Minami Mizuno/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377824, "has_gns": true, "num_gns": 8, "has_chapters": true, "num_chapters": 28, "num_chapters_free": 3, "chapter_latest_pub_date": 1703181570, "chapter_latest_num": 26, "chapter_last_num": 26, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6400-Header_RainbowDays_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3418-Thumb_RainbowDays_400x320.jpg", "label": null, "recommended_series_ids": "84,436,135,600,695,153,834", "latest_author": "Minami Mizuno", "title_sort": "rainbow days"}}, {"manga_series": {"id": 823, "updated_at": "2023-01-05T12:59:07.000-08:00", "manga_series_common_id": 823, "device_id": 4, "keyart": "img/manga_series_header/823-Header_JJKNovels_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2331, "manga_imprint_id": null, "title": "Jujutsu Kaisen Novels", "synopsis": "Sorcery and demon curses abound in this collection of stories spun from the world of Jujutsu Kaisen.", "tagline": "To save\u00a0the world from demons,\u00a0Yuji Itadori may have to\u00a0become one himself!", "rating": "tp", "vanityurl": "jujutsu-kaisen-novels", "copyright": "JUJUTSU KAISEN YUKU NATSU TO KAERU AKI \u00a9 2019 by Gege Akutami, Ballad Kitaguni/SHUEISHA Inc.   JUJUTSU KAISEN YOAKE NO IBARAMICHI \u00a9 2020 by Gege Akutami, Ballad Kitaguni/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/823-Header_JJKNovels_2000x800.jpg", "link_img": "img/manga_series_link_img/823-th-Thumb_JJKNovels_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694024313, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/823-Header_JJKNovels_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/823-th-Thumb_JJKNovels_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,580,851,9,801,496,648,938,527,471,821,744", "latest_author": "Original Concept by Gege Akutami, Story by Ballad Kitaguni", "title_sort": "jujutsu kaisen novels"}}, {"manga_series": {"id": 832, "updated_at": "2023-05-03T09:53:49.000-07:00", "manga_series_common_id": 832, "device_id": 4, "keyart": "img/manga_series_header/832-Header_TatsukiFujimotoBeforeChainsawMan_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2492, "manga_imprint_id": null, "title": "Tatsuki Fujimoto Before Chainsaw Man", "synopsis": "See the origins of the mad genius who created Chainsaw Man! This short story manga collection features Tatsuki Fujimoto's earliest work. It\u2019s rough, it\u2019s raw, and it\u2019s pure Tatsuki Fujimoto!", "tagline": "See the origins of Chainsaw Man mastermind Tatsuki Fujimoto!", "rating": "tp", "vanityurl": "tatsuki-fujimoto-before-chainsaw-man", "copyright": "TATSUKI FUJIMOTO TANPENSHU 17-21 \u00a9 2021 by Tatsuki Fujimoto/SHUEISHA Inc.", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": false, "header_img": "img/manga_series_header/832-Header_TatsukiFujimotoBeforeChainsawMan_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/832-th-Thumb_TatsukiFujimotoBeforeChainsasMan_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1688418608, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/832-Header_TatsukiFujimotoBeforeChainsawMan_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/832-th-Thumb_TatsukiFujimotoBeforeChainsasMan_400x320.jpg", "label": null, "recommended_series_ids": "580,796,827,540,791", "latest_author": "Tatsuki Fujimoto", "title_sort": "tatsuki fujimoto before chainsaw man"}}, {"manga_series": {"id": 833, "updated_at": "2022-12-20T16:20:57.000-08:00", "manga_series_common_id": 833, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2491, "manga_imprint_id": null, "title": "Helck", "synopsis": "After the Demon Lord is slain at the hands of a lone human warrior, humans rejoice over the end of his reign of terror. But an intense tournament of powerful fighters hoping to be crowned the next Demon Lord has drawn in the unlikeliest of contestants\u2014Helck, who claims to hate humans but is one himself! How will Helck change the course of the war between demons and humankind?", "tagline": "A human-hating human hero aims to become the next Demon Lord!", "rating": "t", "vanityurl": "helck", "copyright": "HELCK SHINSOBAN \u00a9\ufe0e 2022 Nanaki NANAO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707466038, "has_gns": true, "num_gns": 7, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6439-Header_Helck_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3415-Thumb_Helck_400x320.jpg", "label": null, "recommended_series_ids": "546,815,818,862,875,784,724,941,769", "latest_author": "Story and Art by Nanaki Nanao", "title_sort": "helck"}}, {"manga_series": {"id": 835, "updated_at": "2023-11-23T10:00:00.000-08:00", "manga_series_common_id": 835, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2488, "manga_imprint_id": null, "title": "My Special One", "synopsis": "After a mortifying rejection, Sahoko Wakaume has sworn off beautiful boys. But a chance meeting puts her in the sights of gorgeous J-pop star Kouta Kirigaya of the group Like Legend. Sahoko will need all her cynicism to defend herself against Kouta\u2019s tenderhearted and affectionate attacks to win her heart!", "tagline": "A girl who has sworn off boys meets an idol determined to win her heart! ", "rating": "t", "vanityurl": "my-special-one", "copyright": "KIMI GA TOKUBETSU \u00a9 2019 by Momoko Koda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707466113, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 16, "num_chapters_free": 2, "chapter_latest_pub_date": 1700762370, "chapter_latest_num": 16, "chapter_last_num": 16, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6411-Header_MySpecialOne_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3474-Thumb_MySpecialOne_400x320.jpg", "label": null, "recommended_series_ids": "136,785,221,135,600,824", "latest_author": "Momoko Koda", "title_sort": "my special one"}}, {"manga_series": {"id": 834, "updated_at": "2023-09-07T17:43:51.000-07:00", "manga_series_common_id": 834, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2489, "manga_imprint_id": null, "title": "The Girl That Can't Get a Girlfriend", "synopsis": "The autobiographical manga about one woman\u2019s quest for the hot, short-haired girlfriend of her dreams!\u00a0", "tagline": "The autobiographical manga about one woman\u2019s quest for the hot short-haired girlfriend of her dreams!", "rating": "t", "vanityurl": "the-girl-that-cant-get-a-girlfriend", "copyright": "", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694133831, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 6, "chapter_last_num": 6, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6422-Header_GirlCantGetAGF_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3497-Thumb_GirlCantGetAGF_400x320.jpg", "label": null, "recommended_series_ids": "618,279,447,709,776,316,153,97", "latest_author": "Story and Art by Mieri Hiranishi", "title_sort": "girl that can't get a girlfriend"}}, {"manga_series": {"id": 822, "updated_at": "2023-09-07T17:43:26.000-07:00", "manga_series_common_id": 822, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2493, "manga_imprint_id": null, "title": "Mermaid Scales and the Town of Sand", "synopsis": "Everyone besides Tokiko denies the existence of merpeople, and yet the town holds a secret annual festival to honor them. Can she solve the mystery of what is real and what is fantasy\u2026?", "tagline": "Can Tokiko solve the mystery of what is real and what is fantasy? ", "rating": "t", "vanityurl": "mermaid-scales-and-the-town-of-sand", "copyright": "AOI UROKO TO SUNA NO MACHI \u00a9 2013 by Yoko Komori/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1694133806, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 12, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 11, "chapter_last_num": 11, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6410-Header_MermaidScales_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3473-Thumb_MermaidScales_400x320.jpg", "label": null, "recommended_series_ids": "218,613,836,736,94,97,228", "latest_author": "Story and Art by Yoko Komori", "title_sort": "mermaid scales and the town of sand"}}, {"manga_series": {"id": 836, "updated_at": "2024-01-04T10:00:00.000-08:00", "manga_series_common_id": 836, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2497, "manga_imprint_id": null, "title": "Insomniacs After School", "synopsis": "", "tagline": "Sleepless teens find kinship as they escape to their school\u2019s observatory.", "rating": "t", "vanityurl": "insomniacs-after-school", "copyright": "", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707290194, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 57, "num_chapters_free": 3, "chapter_latest_pub_date": 1704391170, "chapter_latest_num": 37, "chapter_last_num": 125.1, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6428-Header_Insomniacs_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3517-Thumb_Insomniacs_400x320.jpg", "label": null, "recommended_series_ids": "144,754,91,600,157,182", "latest_author": "Makoto Ojiro", "title_sort": "insomniacs after school"}}, {"manga_series": {"id": 837, "updated_at": "2023-07-18T10:00:00.000-07:00", "manga_series_common_id": 837, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2499, "manga_imprint_id": null, "title": "Tista", "synopsis": "In New York City, the NYPD struggles to track down a serial killer known as Sister Militia, who has been targeting mobsters and other criminals in the Big Apple. No one knows who Sister Militia really is except a few residents of a Catholic orphanage. Her name is Tista\u2026", "tagline": "What price will Tista pay to save the people she loves?", "rating": "tp", "vanityurl": "tista", "copyright": "TISTA \u00a9 2007 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1690563955, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6436-Header_Tista_v3_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3535-Thumb_Tista_400x320.jpg", "label": null, "recommended_series_ids": "356,180,78,86,632", "latest_author": "Tatsuya Endo", "title_sort": "tista"}}, {"manga_series": {"id": 839, "updated_at": "2023-03-29T15:19:09.000-07:00", "manga_series_common_id": 839, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2501, "manga_imprint_id": null, "title": "Love's in Sight!", "synopsis": "Morio Kurokawa is the toughest-looking tough guy around. Yukiko Akaza is a self-possessed girl with a vision impairment attending a school for the blind. The whole city fears Morio, but Yukiko sees the real him\u2014he\u2019s a soft sweetheart who\u2019s just searching for his place in the world!", "tagline": "Love blooms between a delinquent and a spunky girl with a vision impairment!", "rating": "t", "vanityurl": "loves-in-sight", "copyright": "\u00a9Uoyama 2019 / KADOKAWA CORPORATION", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707290208, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6431-Header_LoveInSight_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3524-Thumb_LoveInSight_400x320.jpg", "label": null, "recommended_series_ids": "757,600,13,492", "latest_author": "Uoyama", "title_sort": "love's in sight!"}}, {"manga_series": {"id": 877, "updated_at": "2023-04-11T09:00:57.000-07:00", "manga_series_common_id": 877, "device_id": 4, "keyart": "img/manga_series_header/877-Header_Disney_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2410, "manga_imprint_id": null, "title": "Disney Pixar Turning Red: 4*Town 4*Real", "synopsis": "Spend the day with the members of 4*Town in this manga companion to the hit Disney and Pixar film Turning Red!", "tagline": "Experience the magic with all-new Disney publishing titles!", "rating": "t", "vanityurl": "disney-pixar-turning-red-4-town-4-real", "copyright": "\u00a9 2023 Disney/Pixar. All rights reserved.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/877-Header_Disney_2000x800.jpg", "link_img": "img/manga_series_link_img/877-th-Disney_Thumbnail_AllFamilyBlue.jpeg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096089, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/877-Header_Disney_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/877-th-Disney_Thumbnail_AllFamilyBlue.jpeg", "label": null, "recommended_series_ids": "894,108,109,110,111,573,574,575,576,578,773,779,789,905,926,686,740,775,800,865,927", "latest_author": "Story by Dirchansky, Art by KAIfee", "title_sort": "disney pixar turning red: 4*town 4*real"}}, {"manga_series": {"id": 880, "updated_at": "2023-09-07T16:33:35.000-07:00", "manga_series_common_id": 880, "device_id": 4, "keyart": "img/manga_series_header/880-Header_BlackParadox_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2384, "manga_imprint_id": null, "title": "Black Paradox", "synopsis": "", "tagline": "Three-time Eisner Award winner Junji Ito\u2019s legendary sci-fi thriller about four strangers in search of the prefect death.", "rating": "tp", "vanityurl": "black-paradox", "copyright": "BLACK PARADOX \u00a9 2009 JI Inc./SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/880-Header_BlackParadox_2000x800.jpg", "link_img": "img/manga_series_link_img/880-th-Thumb_BlackParadox_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1697060275, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 6, "chapter_last_num": 6, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/880-Header_BlackParadox_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/880-th-Thumb_BlackParadox_400x320.jpg", "label": null, "recommended_series_ids": "218,189,881,787,620,884,885,744", "latest_author": "Story and Art by Junji Ito", "title_sort": "black paradox"}}, {"manga_series": {"id": 881, "updated_at": "2023-09-07T16:34:07.000-07:00", "manga_series_common_id": 881, "device_id": 4, "keyart": "img/manga_series_header/881-Header_Gyo_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2384, "manga_imprint_id": null, "title": "Gyo", "synopsis": "", "tagline": "The creepiest masterpiece from the master of horror manga, Junji Ito. Hold your breath until all is revealed\u2026", "rating": "tp", "vanityurl": "gyo", "copyright": "GYO \u00a9 2002 JI Inc./SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/881-Header_Gyo_2000x800.jpg", "link_img": "img/manga_series_link_img/881-th-Thumb_Gyo_v2_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1697060275, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 19, "chapter_last_num": 19, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/881-Header_Gyo_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/881-th-Thumb_Gyo_v2_400x320.jpg", "label": null, "recommended_series_ids": "218,189,787,883,620,884,885,744", "latest_author": "Junji Ito", "title_sort": "gyo"}}, {"manga_series": {"id": 883, "updated_at": "2023-09-07T16:34:35.000-07:00", "manga_series_common_id": 883, "device_id": 4, "keyart": "img/manga_series_header/883-Header_Remina_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2384, "manga_imprint_id": null, "title": "Remina", "synopsis": "", "tagline": "Eisner winner Junji Ito\u2019s sci-fi masterwork tells the chilling tale of a hell star.", "rating": "tp", "vanityurl": "remina", "copyright": "JIGOKUSEI REMINA \u00a9 2005 JI Inc./SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/883-Header_Remina_2000x800.jpg", "link_img": "img/manga_series_link_img/883-th-Thumb_Remina_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1697060275, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 6, "num_chapters_free": 2, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 6, "chapter_last_num": 6, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/883-Header_Remina_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/883-th-Thumb_Remina_400x320.jpg", "label": null, "recommended_series_ids": "218,189,881,787,620,884,885,744", "latest_author": "Junji Ito", "title_sort": "remina"}}, {"manga_series": {"id": 884, "updated_at": "2023-09-07T16:35:37.000-07:00", "manga_series_common_id": 884, "device_id": 4, "keyart": "img/manga_series_header/884-Header_Uzumaki_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2384, "manga_imprint_id": null, "title": "Uzumaki", "synopsis": "", "tagline": "Read Junji Ito\u2019s bizarre masterpiece horror manga that started it all. Fall into a whirlpool of terror!", "rating": "tp", "vanityurl": "uzumaki", "copyright": "UZUMAKI \u00a9 2010 JI Inc./SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/884-Header_Uzumaki_2000x800.jpg", "link_img": "img/manga_series_link_img/884-th-Thumb_Uzumaki_v2_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1697060275, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 19, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 19, "chapter_last_num": 19, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/884-Header_Uzumaki_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/884-th-Thumb_Uzumaki_v2_400x320.jpg", "label": null, "recommended_series_ids": "880,218,189,881,787,620,885,744", "latest_author": "Junji Ito", "title_sort": "uzumaki"}}, {"manga_series": {"id": 885, "updated_at": "2023-05-10T13:21:54.000-07:00", "manga_series_common_id": 885, "device_id": 4, "keyart": "img/manga_series_header/885-Header_VenusBlindSpot_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2384, "manga_imprint_id": null, "title": "Venus in the Blind Spot", "synopsis": "", "tagline": "A \u201cbest of\u201d collection of creepy tales from Eisner award winner and legendary horror master Junji Ito.", "rating": "tp", "vanityurl": "venus-in-the-blind-spot", "copyright": "ITO JUNJI TANPENSHU BEST OF BEST \u00a9 2019 JI Inc./SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/885-Header_VenusBlindSpot_2000x800.jpg", "link_img": "img/manga_series_link_img/885-th-Thumb_VenusBlindSpot_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1697060275, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 10, "num_chapters_free": 3, "chapter_latest_pub_date": 1677743970, "chapter_latest_num": 10, "chapter_last_num": 10, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/885-Header_VenusBlindSpot_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/885-th-Thumb_VenusBlindSpot_400x320.jpg", "label": null, "recommended_series_ids": "218,189,881,787,883,620,884,744", "latest_author": "Junji Ito", "title_sort": "venus in the blind spot"}}, {"manga_series": {"id": 844, "updated_at": "2024-01-30T10:00:00.000-08:00", "manga_series_common_id": 844, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2505, "manga_imprint_id": null, "title": "Dark Gathering", "synopsis": "After a dangerous encounter with a malevolent spirit, Keitaro Gentoga wants nothing to do with the supernatural. Unfortunately for this reluctant ghost magnet, he\u2019s stuck helping Yayoi Hozuki, a strange young girl who\u2019s intent on capturing Japan\u2019s most terrifying ghosts and ghouls.", "tagline": "An unwilling magnet for the supernatural and a ghost-hunting girl join forces.", "rating": "tp", "vanityurl": "dark-gathering", "copyright": "DARK GATHERING \u00a9 2019 by Kenichi Kondo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707466004, "has_gns": true, "num_gns": 5, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6437-Header_DarkGathering_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3536-Thumb_DarkGathering_400x320.jpg", "label": null, "recommended_series_ids": "105,754,18,312,393,744", "latest_author": "Story and Art by Kenichi Kondo", "title_sort": "dark gathering"}}, {"manga_series": {"id": 843, "updated_at": "2024-01-18T10:00:00.000-08:00", "manga_series_common_id": 843, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2504, "manga_imprint_id": null, "title": "Wolf Girl and Black Prince", "synopsis": "Fed up with her friends\u2019 constant bragging about their boyfriends, high school student Erika Shinohara decides to make up a relationship of her own. When her lie starts unraveling at the seams, her charming schoolmate Kyoya Sata agrees to be her pretend boyfriend, seemingly saving her reputation. She won\u2019t get off that easy, however, as she soon discovers her white knight is actually a blackhearted prince! Now Erika must be at his beck and call or risk her lie being exposed. But is Kyoya really as blackhearted as he seems?", "tagline": "When a trivial lie turns into a relationship!", "rating": "tp", "vanityurl": "wolf-girl-and-black-prince", "copyright": "OOKAMI SHOJO TO KURO OHJI \u00a9 2011 by Ayuko Hatta/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707466013, "has_gns": true, "num_gns": 5, "has_chapters": true, "num_chapters": 18, "num_chapters_free": 2, "chapter_latest_pub_date": 1705600770, "chapter_latest_num": 18, "chapter_last_num": 18, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6438-Header_WolfGirlBlackPrince_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3537-Thumb_WolfGirlBlackPrince_400x320.jpg", "label": null, "recommended_series_ids": "100,101,102,168,785,600,824", "latest_author": "Story and Art by Ayuko Hatta", "title_sort": "wolf girl and black prince"}}, {"manga_series": {"id": 846, "updated_at": "2023-05-03T15:19:31.000-07:00", "manga_series_common_id": 846, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2447, "manga_imprint_id": null, "title": "Spider-Man: Fake Red", "synopsis": "An awkward teenager puts on Spider-Man\u2019s suit, but quickly learns being a hero isn\u2019t all photo ops and social media likes.", "tagline": "Explore the multiverse with all-new Marvel manga and books!", "rating": "t", "vanityurl": "spider-man-fake-red", "copyright": "\u00a9 2023 Marvel", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687500662, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6278-Header_Marvel_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3043-Thumb_Marvel_400x320_v2.jpg", "label": null, "recommended_series_ids": "735,741,764,767,852,874,877,399,520,571,591,611,748,868,249,391,686,740,775,800,865,927", "latest_author": "Yusuke Osawa", "title_sort": "spider-man: fake red"}}, {"manga_series": {"id": 847, "updated_at": "2023-05-03T15:25:33.000-07:00", "manga_series_common_id": 847, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2507, "manga_imprint_id": null, "title": "Until I Love Myself", "synopsis": "Nonbinary manga artist Poppy Pesuyama is excited when forms offer the option to choose \u201cneither\u201d for gender and thrilled about their new job working as an assistant for mangaka X! But then he sexually harasses them, treating them first like a girl and then like something less than human. It only lasts a few months, but in some ways it never ends.", "tagline": "An autobiography about confronting the traumas of gender dysphoria and workplace harassment.", "rating": "tp", "vanityurl": "until-i-love-myself", "copyright": "JIBUN NO KARADA O YURUSU MADE \u00a9 2021 Poppy PESUYAMA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1695107326, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6440-Header_UntilILoveMyself_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3539-Thumb_UntilILoveMyself_400x320.jpg", "label": null, "recommended_series_ids": "497,702,709,803", "latest_author": "Story and Art by Poppy Pesuyama", "title_sort": "until i love myself"}}, {"manga_series": {"id": 845, "updated_at": "2023-05-03T15:32:35.000-07:00", "manga_series_common_id": 845, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2447, "manga_imprint_id": null, "title": "Wolverine: Snikt!", "synopsis": "Tsutomu Nihei's classic graphic novel Wolverine: Snikt! is back in a brand new deluxe edition, with behind the scenes material and a beautiful art gallery!", "tagline": "Explore the multiverse with all-new Marvel manga and books!", "rating": "t", "vanityurl": "wolverine-snikt", "copyright": "\u00a9 2023 MARVEL", "show_chapter": true, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096085, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6278-Header_Marvel_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3043-Thumb_Marvel_400x320_v2.jpg", "label": null, "recommended_series_ids": "735,741,764,767,852,874,877,399,520,571,591,611,748,868,249,391,686,740,775,800,865,927", "latest_author": "Tsutomu Nihei", "title_sort": "wolverine: snikt!"}}, {"manga_series": {"id": 848, "updated_at": "2024-01-18T10:00:00.000-08:00", "manga_series_common_id": 848, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2510, "manga_imprint_id": null, "title": "Like a Butterfly", "synopsis": "Suiren Shibazeki is often compared to a beautiful flower\u2014but one that grows on the tallest peak of a mountain, forever out of reach. When Suiren develops feelings for the quiet Taichi Kawasumi, however, she doesn\u2019t want to be a distant flower. She\u2019d rather leave her lofty perch and fly toward him like a butterfly.", "tagline": "Would you rather wait for love like a flower, or fly toward love like a butterfly?", "rating": "t", "vanityurl": "like-a-butterfly", "copyright": "HIBI CHOCHO \u00a9 2012 by Suu Morishita/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707465976, "has_gns": true, "num_gns": 4, "has_chapters": true, "num_chapters": 27, "num_chapters_free": 3, "chapter_latest_pub_date": 1705600770, "chapter_latest_num": 27, "chapter_last_num": 27, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6507-Header_LikeAButtefly_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3700-Thumb_LikeAButtefly_400x320.jpg", "label": null, "recommended_series_ids": "562,785,600,695,835,190", "latest_author": "Story and Art by suu Morishita", "title_sort": "like a butterfly"}}, {"manga_series": {"id": 874, "updated_at": "2023-06-16T16:31:11.000-07:00", "manga_series_common_id": 874, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2410, "manga_imprint_id": null, "title": "Disney Twisted-Wonderland", "synopsis": "Stranded in the world of Twisted Wonderland, Yu must brave a magical school filled with ghosts, monsters, and uncooperative students!", "tagline": "Experience the magic with all-new Disney publishing titles!", "rating": "t", "vanityurl": "disney-twisted-wonderland", "copyright": "\u00a9 Disney", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707465943, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6165-Disney_Logo.png", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2605-Disney_Thumbnail_AllFamilyBlue_400x320_1_.jpg", "label": null, "recommended_series_ids": "894,108,109,110,111,573,574,575,576,578,773,779,789,905,926,686,740,775,800,865,927", "latest_author": "Original Concept by Yana Toboso, Storyboards by Wakana Hazuki, Art by Sumire Kowono", "title_sort": "disney twisted-wonderland"}}, {"manga_series": {"id": 850, "updated_at": "2023-06-16T16:37:38.000-07:00", "manga_series_common_id": 850, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2447, "manga_imprint_id": null, "title": "Marvel Comics: A Manga Tribute", "synopsis": "", "tagline": "Explore the multiverse with all-new Marvel manga and books!", "rating": "t", "vanityurl": "marvel-comics-a-manga-tribute", "copyright": "\u00a9 2023 MARVEL.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096086, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6278-Header_Marvel_2000x800_v2.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3043-Thumb_Marvel_400x320_v2.jpg", "label": null, "recommended_series_ids": "735,741,764,767,852,874,877,399,520,571,591,611,748,868,249,391,686,740,775,800,865,927", "latest_author": "Marvel", "title_sort": "marvel comics: a manga tribute"}}, {"manga_series": {"id": 849, "updated_at": "2023-06-16T16:36:55.000-07:00", "manga_series_common_id": 849, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2325, "manga_imprint_id": null, "title": "The Way of the Househusband: The Gangster's Guide to Housekeeping", "synopsis": "", "tagline": "It\u2019s a day in the life of a househusband\u2014only this one is the legendary yakuza \u201cthe Immortal Dragon\u201d!", "rating": "tp", "vanityurl": "way-of-the-househusband-gangsters-guide-to-housekeeping", "copyright": "\u00a9 Kousuke Oono/SHINCHOSHA Publishing Co., Ltd.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096086, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6015-SeriesHeaders_WayoftheHouseHusband_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2198-SeriesThumbnails_WayoftheHouseHusband_400x320.jpg", "label": null, "recommended_series_ids": "179,498,249,391", "latest_author": "Text by Laurie Ulster, Recipes by Victoria Rosenthal, Based on the series by Kousuke Oono", "title_sort": "way of the househusband: the gangster's guide to housekeeping"}}, {"manga_series": {"id": 851, "updated_at": "2023-12-04T16:44:20.000-08:00", "manga_series_common_id": 851, "device_id": 4, "keyart": "img/manga_series_header/851-Header_CSMBuddyStories_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2326, "manga_imprint_id": null, "title": "Chainsaw Man: Buddy Stories", "synopsis": "", "tagline": "Broke young man + chainsaw demon = Chainsaw Man!", "rating": "tp", "vanityurl": "chainsaw-man-buddy-stories", "copyright": "CHAINSAW MAN BUDDY STORIES \u00a9 2021 by Tatsuki Fujimoto, Sakaku Hishikawa/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/851-Header_CSMBuddyStories_2000x800.jpg", "link_img": "img/manga_series_link_img/851-th-Thumb_CSMBuddyStories_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1701737060, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/851-Header_CSMBuddyStories_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/851-th-Thumb_CSMBuddyStories_400x320.jpg", "label": null, "recommended_series_ids": "448,527,827,323,339,376,469,596,768,814,820,791,832,371,465,468,519", "latest_author": "Original Concept by Tatsuki Fujimoto, Written by Sakaku Hishikawa", "title_sort": "chainsaw man: buddy stories"}}, {"manga_series": {"id": 892, "updated_at": "2023-06-22T14:04:01.000-07:00", "manga_series_common_id": 892, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2442, "manga_imprint_id": null, "title": "VIZ 2023 Manga Sampler", "synopsis": "VIZ presents an exciting selection of our best new manga of 2023. Within these pages, discover action-packed tales of Japanese monsters going gangster, zombies granting a working stiff a new lease on life, and the classic adventures of Cat-Eyed Boy. Then indulge in romance with thrilling tales featuring love between an idol and a girl who hates pretty boys, a girl who cries wolf and a devious school prince, and two insomniacs who need each other to sleep. Also representing the cutting edge of manga are the memoir of a nonbinary manga artist overcoming harassment and the story of a spunky girl taking on the stodgy world of traditional Japanese storytelling. No matter what you\u2019re looking for, you'll find it in this sampler of some of our favorite new series.\r\n\r\nRead now for free! Availability may vary by territory.", "tagline": "", "rating": "tp", "vanityurl": "viz-2023-manga-sampler", "copyright": "AKANE BANASHI \u00a9 2022 by Yuki Suenaga, Takamasa Moue/SHUEISHA Inc.  AYASHIMON \u00a9 2021 by Yuji Kaku/SHUEISHA Inc.  KIMI GA TOKUBETSU \u00a9 2019 by Momoko Koda/SHUEISHA Inc.  NEKOME KOZO \u00a9 2006 Kazuo UMEZZ/SHOGAKUKAN  KIMI WA HOKAGO INSOMNIA \u00a9 2019 Makoto OJIRO/SHOGAKUKAN  JIBUN NO KARADA O YURUSU MADE \u00a9 2021 Poppy PESUYAMA/SHOGAKUKAN  OOKAMI SHOJO TO KURO OHJI \u00a9 2011 by Ayuko Hatta/SHUEISHA Inc.  ZOM 100 \u00a9 2019 Haro ASO, Kotaro TAKATA/SHOGAKUKAN", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1687932463, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": null, "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2907-Thumb_VIZSampler_v2_400x320.jpg", "label": null, "recommended_series_ids": "825,811,189,853,836,835,847,843,744", "latest_author": "VIZ Media", "title_sort": "viz 2023 manga sampler"}}, {"manga_series": {"id": 854, "updated_at": "2023-12-05T10:00:00.000-08:00", "manga_series_common_id": 854, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2513, "manga_imprint_id": null, "title": "Heart Gear", "synopsis": "Nearly 200 years after the destruction of humanity in World War III, Roue lives a happy life exploring the ruins of civilization with her \u201cuncle,\u201d a robot named Zett. But when their peaceful life is threatened, Roue must trust the mysterious robot Chrome to bring her family together again.", "tagline": "In a postapocalyptic future, a girl and an android travel the world in search of utopia.", "rating": "tp", "vanityurl": "heart-gear", "copyright": "HEART GEAR \u00a9 2019 by Tsuyoshi Takaki/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705907230, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6483-Header_HeartGear_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3665-Thumb_HeartGear_400x320.jpg", "label": null, "recommended_series_ids": "549,614,623,615,599", "latest_author": "Story and Art by Tsuyoshi Takaki", "title_sort": "heart gear"}}, {"manga_series": {"id": 853, "updated_at": "2023-07-04T10:30:36.000-07:00", "manga_series_common_id": 853, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 784, "manga_imprint_id": null, "title": "Cat-Eyed Boy: The Perfect Edition", "synopsis": "Hated by humans and demons alike, Cat-Eyed Boy dwells in the shadows of the human world. Wherever he goes, disturbing situations involving both men and monsters begin to unfurl.", "tagline": "Kazuo Umezz\u2019s classic collection of horror stories featuring a strange cat-eyed boy, shunned by humans and demons alike.", "rating": "tp", "vanityurl": "cat-eyed-boy-the-perfect-edition", "copyright": "UMEZZ PERFECTION! 6 NEKOME KOZO \u00a9 2006 Kazuo UMEZZ/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096089, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6505-Header_CatEyedBoy_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3698-Thumb_CatEyedBoy_400x320.jpg", "label": null, "recommended_series_ids": "200,620,177,480,563,564,565,880,881,882,883,884,885,891,706,787", "latest_author": "Story and Art by Kazuo Umezz", "title_sort": "cat-eyed boy: the perfect edition"}}, {"manga_series": {"id": 894, "updated_at": "2023-08-30T13:38:19.000-07:00", "manga_series_common_id": 894, "device_id": 4, "keyart": "img/manga_series_header/894-Header_ZeldaTwilightPrincess_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 956, "manga_imprint_id": null, "title": "The Legend of Zelda: Twilight Princess", "synopsis": "Once upon a time, wizards tried to conquer the Sacred Realm of Hyrule. The Spirits of Light sealed the wizards\u2019 power within the Shadow Crystal and banished them to the Twilight Realm beyond the Mirror of Twilight. Now, an evil menace is trying to find Midna, Princess of the Twilight Realm, and the fragments of the Shadow Crystal to gain the power to rule over both the Twilight Realm and the World of Light.", "tagline": "Link must defeat evil at every turn in his perilous quest to help Princess Zelda!", "rating": "t", "vanityurl": "the-legend-of-zelda-twilight-princess", "copyright": "TM & \u00a9 2023 Nintendo.   ZELDA NO DENSETSU TWILIGHT PRINCESS \u00a9 2016 Akira HIMEKAWA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/894-Header_ZeldaTwilightPrincess_2000x800.jpg", "link_img": "img/manga_series_link_img/894-th-Thumb_ZeldaTwilightPrincess_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096090, "has_gns": true, "num_gns": 11, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/894-Header_ZeldaTwilightPrincess_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/894-th-Thumb_ZeldaTwilightPrincess_400x320.jpg", "label": null, "recommended_series_ids": "10,80,299,446,466,566,756,1,414,417,421,460,467,855,856", "latest_author": "Story and Art by Akira Himekawa", "title_sort": "legend of zelda: twilight princess"}}, {"manga_series": {"id": 866, "updated_at": "2023-12-19T16:27:39.000-08:00", "manga_series_common_id": 866, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2516, "manga_imprint_id": null, "title": "Blade of the Moon Princess", "synopsis": "Defiant and vulgar, Princess Kaguya Takenouchi is not the heir to the moon\u2019s Silver Court that her mother\u2019s retainers had hoped for. But when the empress falls ill during a wave of terrorist attacks, Kaguya resolves to do right by her people and rise to the occasion.", "tagline": "The Silver Court heir will rise to reclaim her throne. From the creator of Spy x Family!", "rating": "t", "vanityurl": "blade-of-the-moon-princess", "copyright": "GEKKABIJIN \u00a9 2010 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377708, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6525-Header_BladeMoonPrincess_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3676-Thumb_BladeMoonPrincess_400x320.jpg", "label": null, "recommended_series_ids": "470,461,138,1,599,632,750,837", "latest_author": "Tatsuya Endo", "title_sort": "blade of the moon princess"}}, {"manga_series": {"id": 865, "updated_at": "2023-08-02T11:38:25.000-07:00", "manga_series_common_id": 865, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2385, "manga_imprint_id": null, "title": "Star Wars: The Mandalorian: The Manga", "synopsis": "The Mandalorian and The Child are on the run, and nowhere is safe!", "tagline": "Jump into hyperspace with all-new Star Wars publishing!", "rating": "tp", "vanityurl": "star-wars-the-mandalorian-the-manga", "copyright": "\u00a9 & \u2122 2023 Lucasfilm, Ltd.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704096088, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6067-6061_CC305005_WHITE_png", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2341-SeriesThumbnails_StarWars_400x320_jpg", "label": null, "recommended_series_ids": "461,922,894,1,414,417,421,460,467,855,856,108,109,110,111,573,574,575,576,578,773,779,789,905,926,697", "latest_author": "Story and Art by Yusuke Osawa", "title_sort": "star wars: the mandalorian: the manga"}}, {"manga_series": {"id": 862, "updated_at": "2023-08-02T11:53:49.000-07:00", "manga_series_common_id": 862, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2267, "manga_imprint_id": null, "title": "Demon Slayer: Kimetsu no Yaiba\u2014Corps Records", "synopsis": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "tagline": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "rating": "t", "vanityurl": "demon-slayer-corps-records", "copyright": "KIMETSU NO YAIBA KOSHIKI FAN BOOK KISATSUTAI KENBUNROKU\u30fbNI \u00a9 2021 by Koyoharu Gotouge/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699999174, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5945-SeriesHeaders_DemonSlayer_2000x800_wm.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/1880-SeriesThumbnailsManga_DemonSlayer_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,22,89,296,79,14,232,490,523,483,537,579,371,465,468,519", "latest_author": "Koyoharu Gotouge", "title_sort": "demon slayer: kimetsu no yaiba\u2014corps records"}}, {"manga_series": {"id": 864, "updated_at": "2023-09-12T11:38:02.000-07:00", "manga_series_common_id": 864, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2331, "manga_imprint_id": null, "title": "Jujutsu Kaisen: The Official Guide: Anime Season 1", "synopsis": "The official companion to the first season of the hugely popular Jujutsu Kaisen anime.", "tagline": "To save\u00a0the world from demons,\u00a0Yuji Itadori may have to\u00a0become one himself!", "rating": "tp", "vanityurl": "jujutsu-kaisen-official-anime-guide-season-one", "copyright": "TV ANIME \"JUJUTSU KAISEN\" 1ST SEASON COMPLETE BOOK \u00a9 2021 by Gege Akutami/SHUEISHA Inc. \u00a9   Gege Akutami/Shueisha, JUJUTSU KAISEN Project", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1698905210, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6037-540_MangaHeaders_JuJutsuKaisen_2000x800_jpg_wm", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2258-540_th_WSJ_JuJutsuKaisen_400x320_jpg", "label": null, "recommended_series_ids": "8,293,691,580,851,9,801,496,648,938,527,471,821,744", "latest_author": "Original Story by Gege Akutami With the Jujutsu Kaisen Production Committee", "title_sort": "jujutsu kaisen: the official guide: anime season 1"}}, {"manga_series": {"id": 901, "updated_at": "2023-09-26T17:00:00.000-07:00", "manga_series_common_id": 901, "device_id": 4, "keyart": "img/manga_series_header/901-Header_IWantToEndLoveGame_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2527, "manga_imprint_id": null, "title": "I Want to End This Love Game", "synopsis": "", "tagline": "How do you lose the Love Game? By admitting you're in love!", "rating": "t", "vanityurl": "i-want-to-end-this-love-game", "copyright": "AISHITERU GAME O OWARASETAI \u00a9 2022 Yuuki DOUMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/901-Header_IWantToEndLoveGame_2000x800.jpg", "link_img": "img/manga_series_link_img/901-th-Thumb_IWantToEndThisLoveGame_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707465987, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 21, "num_chapters_free": 6, "chapter_latest_pub_date": 1706921910, "chapter_latest_num": 48, "chapter_last_num": 48, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/901-Header_IWantToEndLoveGame_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/901-th-Thumb_IWantToEndThisLoveGame_400x320.jpg", "label": null, "recommended_series_ids": "754,725,836,600,234,242,303,385", "latest_author": "Yuki Domoto", "title_sort": "i want to end this love game"}}, {"manga_series": {"id": 896, "updated_at": "2023-11-17T00:00:00.000-08:00", "manga_series_common_id": 896, "device_id": 4, "keyart": "img/manga_series_header/896-Header_StatusRoyale_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2528, "manga_imprint_id": null, "title": "Status Royale", "synopsis": "", "tagline": "Log in and go for the throne!", "rating": "t", "vanityurl": "status-royale", "copyright": "\u00a9 Ru Xu", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/896-Header_StatusRoyale_2000x800.jpg", "link_img": "img/manga_series_link_img/896-th-Thumb_StatusRoyale_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1706896810, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 9, "num_chapters_free": 6, "chapter_latest_pub_date": 1706896710, "chapter_latest_num": 9, "chapter_last_num": 9, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/896-Header_StatusRoyale_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/896-th-Thumb_StatusRoyale_400x320.jpg", "label": null, "recommended_series_ids": "765,777,901,614,685,541,713,760", "latest_author": "Ru Xu", "title_sort": "status royale"}}, {"manga_series": {"id": 902, "updated_at": "2023-09-12T11:44:26.000-07:00", "manga_series_common_id": 902, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2519, "manga_imprint_id": null, "title": "Betwixt: A Horror Manga Anthology", "synopsis": "All-new horror anthology featuring cover art by international bestseller, Junji Ito!", "tagline": "All-new horror anthology featuring cover art by international bestseller, Junji Ito!", "rating": "tp", "vanityurl": "betwixt", "copyright": "\u00a9 Viz Media, LLC.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1696921808, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6550-Header_Betwixt_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3765-Thumb_Betwixt_400x320.jpg", "label": null, "recommended_series_ids": "189,853,200,620,177,480,563,564,565,880,881,882,883,884,885,891,787", "latest_author": "Stories by Michael W. Conrad & Becky Cloonan, Sloane Leong & Leslie Hung, Huahua Zhu, Ryo Hanada, Aki Shimizu, and Shima Shinya. Forward and Cover Art by Junji Ito", "title_sort": "betwixt: a horror manga anthology"}}, {"manga_series": {"id": 869, "updated_at": "2023-09-12T11:47:54.000-07:00", "manga_series_common_id": 869, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2375, "manga_imprint_id": null, "title": "Spy x Family: The Official Guide\u2014Eyes Only", "synopsis": "The official guide to the hit manga Spy x Family!", "tagline": "An action-packed comedy about a fake family that includes a spy, an assassin and a telepath!", "rating": "tp", "vanityurl": "spy-family--the-official-guide-eyes-only", "copyright": "SPY\u00d7FAMILY KOUSHIKI FANBOOK EYES ONLY \u00a9 2022 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1699999224, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6087-632_SJ_SpyFamily_2000x800_jpg_jpeg_wm", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/2376-632_th_SJ_SpyFamily_400x320_jpg_jpeg", "label": null, "recommended_series_ids": "356,530,180,217,78,86,837", "latest_author": "Created by Tatsuya Endo", "title_sort": "spy x family: the official guide\u2014eyes only"}}, {"manga_series": {"id": 868, "updated_at": "2024-01-17T11:01:10.000-08:00", "manga_series_common_id": 868, "device_id": 4, "keyart": "img/manga_series_header/868-Header_MHAIllustrationGuide_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2042, "manga_imprint_id": null, "title": "My Hero Academia: The Official Easy Illustration Guide", "synopsis": "Midoriya inherits the superpower of the world\u2019s greatest hero, but greatness won\u2019t come easy.", "tagline": "Midoriya inherits the superpower of the world\u2019s greatest hero, but greatness won\u2019t come easy.", "rating": "a", "vanityurl": "my-hero-academia-official-easy-illustration-guide", "copyright": "BALL-PEN DE KAKERU! BOKU NO HERO ACADEMIA KANTAN ILLUST GUIDE \u00a9 2021 by Kohei Horikoshi, Mika Fujisawa/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/868-Header_MHAIllustrationGuide_2000x800.jpg", "link_img": "img/manga_series_link_img/868-th-Thumb_MHAIllustrationGuide_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1705518070, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/868-Header_MHAIllustrationGuide_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/868-th-Thumb_MHAIllustrationGuide_400x320.jpg", "label": null, "recommended_series_ids": "461,922,496,648,938,10,80,299,446,466,566,249,391,471,821,589", "latest_author": "Created by Kohei Horikoshi, Illustrations by Mika Fujisawa", "title_sort": "my hero academia: the official easy illustration guide"}}, {"manga_series": {"id": 870, "updated_at": "2023-09-12T11:54:52.000-07:00", "manga_series_common_id": 870, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2521, "manga_imprint_id": null, "title": "Tamon's B-Side", "synopsis": "High schooler Utage Kinoshita works part-time as a housekeeper so she can afford her fangirl obsession with Tamon Fukuhara, her favorite member of boy band F/ACE. When work serendipitously sends her to the home of her idol, she discovers that the real Tamon couldn\u2019t be more different from his wild and sexy onstage persona!", "tagline": "When an idol is a sad mess in real life, can his biggest fan help him stay upbeat?", "rating": "t", "vanityurl": "tamons-b-side", "copyright": "Tamon Kun Ima Docchi!? \u00a9 Yuki Shiwasu 2022/HAKUSENSHA, Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377740, "has_gns": true, "num_gns": 2, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6552-Header_TamonBSide_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3760-Thumb_TamonBSide_400x320.jpg", "label": null, "recommended_series_ids": "776,316,835,528", "latest_author": "Story and Art by Yuki Shiwasu", "title_sort": "tamon's b-side"}}, {"manga_series": {"id": 909, "updated_at": "2023-09-12T15:54:23.000-07:00", "manga_series_common_id": 909, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 820, "manga_imprint_id": null, "title": "Pluto: Urasawa x Tezuka", "synopsis": "In an ideal world where man and robots coexist, someone or something is after the seven great robots of the world. Interpol assigns robot detective Gesicht to this most strange and complex case--and he eventually discovers that he is one of the targets!", "tagline": "Naoki Urasawa\u2019s innovative, hard-boiled reworking of Osamu Tezuka\u2019s Astro Boy. ", "rating": "tp", "vanityurl": "pluto-urasawa-and-tezuka", "copyright": "PLUTO \u00a9 2004 Naoki URASAWA, Takashi NAGASAKI, Tezuka Productions", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1695767536, "has_gns": true, "num_gns": 8, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5436-Tier03_SeriesHeader_PLUTO_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/151-SeriesThumbnailsManga_PLU_v2_400x320.jpg", "label": null, "recommended_series_ids": "91,192,401", "latest_author": "Naoki Urasawa & Osamu Tezuka CO-AUTHORED WITH Takashi Nagasaki WITH THE COOPERATION OF Tezuka Productions", "title_sort": "pluto: urasawa x tezuka"}}, {"manga_series": {"id": 873, "updated_at": "2023-12-01T16:25:56.000-08:00", "manga_series_common_id": 873, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2523, "manga_imprint_id": null, "title": "Sakura, Saku", "synopsis": "A mysterious boy comes to Saku Fujigaya\u2019s rescue when she falls ill on a train, but he leaves before she can thank him. After this experience, Saku never ignores strangers in need of help to emulate the boy who helped her.", "tagline": "The bud of bittersweet first love takes bloom!", "rating": "t", "vanityurl": "sakura-saku", "copyright": "SAKURA, SAKU. \u00a9 2021 by Io Sakisaka/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707466017, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 4, "num_chapters_free": 2, "chapter_latest_pub_date": 1701367170, "chapter_latest_num": 3, "chapter_last_num": 3, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6553-Header_SakuraSaku_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3767-Thumb_SakuraSaku_400x320.jpg", "label": null, "recommended_series_ids": "562,785,848,695,234,835,153,190", "latest_author": "Io Sakisaka", "title_sort": "sakura, saku"}}, {"manga_series": {"id": 863, "updated_at": "2023-10-10T11:09:37.000-07:00", "manga_series_common_id": 863, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 609, "manga_imprint_id": null, "title": "Tekkonkinkreet: Black & White 30th Anniversary Edition", "synopsis": "This Tekkonkinkreet: Black &amp; White 30th Anniversary Edition, by acclaimed manga artist Taiyo Matsumoto, is restored to its original right-to-left orientation and features all the original color pages, a full-color foldout poster, and a brand new afterword by the author.", "tagline": "Punk rock meets fine art on the mean streets of Treasure Town.", "rating": "tp", "vanityurl": "tekkonkinkreet--30th-anniversary-edition", "copyright": "TEKKON KINKREET ALL IN ONE \u00a9 2007 Taiyo MATSUMOTO/SHOGAKUKAN", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1701158912, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/5596-Tier07_Headers_TekkonKinkreet_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/936-SeriesThumbnailsManga_TEK_400x320.jpg", "label": null, "recommended_series_ids": "613,194,766,726,228", "latest_author": "Story and Art by Taiyo Matsumoto", "title_sort": "tekkonkinkreet: black & white 30th anniversary edition"}}, {"manga_series": {"id": 876, "updated_at": "2024-01-08T16:44:38.000-08:00", "manga_series_common_id": 876, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2530, "manga_imprint_id": null, "title": "Neighborhood Story", "synopsis": "Welcome to Happy Berry! No, this isn\u2019t a fruit stand, but the label dreamed up by aspiring fashion designer Mikako Koda. In her quest to make a name for herself in the fashion world, Mikako enters Yazawa Arts Academy, a prestigious art school, alongside her strictly platonic childhood friend Tsutomu. But there\u2019s one problem\u2014Tsutomu\u2019s uncanny resemblance to a rock star skyrockets him to popularity and leads him to date the prettiest girl in school. Now Mikako can\u2019t help but wonder if what she feels is jealousy.", "tagline": "Mikako aims to take the world of fashion by storm! From the creator of Nana.", "rating": "tp", "vanityurl": "neighborhood-story", "copyright": "GOKINJO MONOGATARI -ULTIMATE EDITION- \u00a9 1994 by Yazawa Manga Seisakusho/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1704761078, "has_gns": true, "num_gns": 1, "has_chapters": true, "num_chapters": 8, "num_chapters_free": 3, "chapter_latest_pub_date": 1703181570, "chapter_latest_num": 8, "chapter_last_num": 8, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6594-Header_NeighborhoodStory_v2_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3868-Thumb_NeighborhoodStory_v2_400x320.jpg", "label": null, "recommended_series_ids": "497,135,169,873,157,97,182,98", "latest_author": "Story and Art by Ai Yazawa", "title_sort": "neighborhood story"}}, {"manga_series": {"id": 875, "updated_at": "2023-12-26T10:00:00.000-08:00", "manga_series_common_id": 875, "device_id": 4, "keyart": "img/manga_series_header/875-Header_DSKimetsuAcademy_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2267, "manga_imprint_id": null, "title": "Demon Slayer: Kimetsu Academy", "synopsis": "Welcome to Kimetsu Academy, a school attended by the most exceptional students you\u2019ve ever seen! This comedic spin-off of international smash hit Demon Slayer: Kimetsu no Yaiba pits Tanjiro, Nezuko, and all the rest of the Demon Slayer Corps against the trials and tribulations of student life.", "tagline": "Tanjiro sets out on the path of the Demon Slayer to save his sister and avenge his family!", "rating": "t", "vanityurl": "demon-slayer-kimetsu-academy", "copyright": "KIMETSU GAKUEN! \u00a9 2021 by Koyoharu Gotouge, Natsuki Hokami/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/875-Header_DSKimetsuAcademy_2000x800.jpg", "link_img": "img/manga_series_link_img/875-th-Thumb_DSKimetsuAcademy_400x320.jpg", "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1703613612, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/875-Header_DSKimetsuAcademy_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/875-th-Thumb_DSKimetsuAcademy_400x320.jpg", "label": null, "recommended_series_ids": "8,293,691,105,22,89,296,79,14,232,490,523,483,537,579,371,465,468,519", "latest_author": "Original Concept by Koyoharu Gotouge, Story and Art by Natsuki Hokami", "title_sort": "demon slayer: kimetsu academy"}}, {"manga_series": {"id": 871, "updated_at": "2023-12-04T16:55:19.000-08:00", "manga_series_common_id": 871, "device_id": 4, "keyart": "img/manga_series_header/871-Header_SFFamilyPortrait_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2375, "manga_imprint_id": null, "title": "Spy x Family Novels", "synopsis": "Join the beloved cast of the best-selling Spy x Family as they embark on five exciting adventures!", "tagline": "An action-packed comedy about a fake family that includes a spy, an assassin and a telepath!", "rating": "a", "vanityurl": "spy-family-novels", "copyright": "SPY x FAMILY \u00a9 2019 by Tatsuya Endo/SHUEISHA Inc.", "show_chapter": false, "show_volume": false, "can_subscribe": false, "rtl": false, "featured_section": null, "header_img": "img/manga_series_header/871-Header_SFFamilyPortrait_2000x800.jpg", "link_img": "img/manga_series_link_img/871-th-Thumb_SFFamilyPortrait_400x320.jpg", "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1703578107, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/871-Header_SFFamilyPortrait_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/871-th-Thumb_SFFamilyPortrait_400x320.jpg", "label": null, "recommended_series_ids": "356,530,180,217,78,86,837", "latest_author": "Original Concept by Tatsuya Endo, Written by Aya Yajima", "title_sort": "spy x family novels"}}, {"manga_series": {"id": 895, "updated_at": "2024-01-30T10:00:00.000-08:00", "manga_series_common_id": 895, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2534, "manga_imprint_id": null, "title": "Marriage Toxin", "synopsis": "Poison Master Hikaru Gero is about to take on his most challenging assignment yet\u2014getting married! But after training his entire life to become one of the world\u2019s deadliest assassins, Gero couldn\u2019t be more clueless when it comes to the art of dating. Thankfully, marriage swindler Mei Kinosaki knows everything there is to know about love, and together, this unlikely pair is going to do whatever it takes to get Gero hitched\u2014even if they have to take on the entire criminal underworld in the process!", "tagline": "Gero may be a master assassin, but he\u2019s not exactly killing it in the romance department!", "rating": "tp", "vanityurl": "marriage-toxin", "copyright": "MARRIAGETOXIN \u00a9 2022 by Joumyaku, Mizuki Yoda/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": "sj", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377725, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6610-Header_MarriageToxin_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3882-Thumb_MarriageToxin_400x320.jpg", "label": null, "recommended_series_ids": "356,627,739,616,849", "latest_author": "Story by Joumyaku, Art by Mizuki Yoda", "title_sort": "marriage toxin"}}, {"manga_series": {"id": 926, "updated_at": "2024-01-10T08:08:15.000-08:00", "manga_series_common_id": 926, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 590, "manga_imprint_id": null, "title": "Pok\u00e9mon Adventures: Omega Ruby and Alpha Sapphire", "synopsis": "Sapphire and Emerald need Ruby\u2019s help to stop a crisis of planetary proportions\u2014a meteor hurtling toward their home!", "tagline": "Explore the exciting world of Pok\u00e9mon!", "rating": "a", "vanityurl": "pokemon-adventures-omega-ruby-and-alpha-sapphire", "copyright": "\u00a9 2024 Pok\u00e9mon.   \u00a91995-2016 Nintendo / Creatures Inc. / GAME FREAK inc.   TM, \u00ae, and character names are trademarks of Nintendo.   \u00a9 2015 Hidenori KUSAKA, Satoshi YAMAMOTO/SHOGAKUKAN.  ", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707464358, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6300-Header_PokemonGeneral_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/64-SeriesThumbnailsManga_POK_400x320.jpg", "label": null, "latest_author": "Story by Hidenori Kusaka, Art by Satoshi Yamamoto", "title_sort": "pok\u00e9mon adventures: omega ruby and alpha sapphire"}}, {"manga_series": {"id": 900, "updated_at": "2023-12-01T18:09:33.000-08:00", "manga_series_common_id": 900, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2535, "manga_imprint_id": null, "title": "Steel of the Celestial Shadows", "synopsis": "A down-and-out samurai named Ryudo Konosuke struggles through his hardscrabble life in early 19th-century Japan. It is said that a samurai\u2019s spirit rests in their sword\u2014and Konosuke can\u2019t even pick one up thanks to a cruel curse that repels anything made of metal that gets near him. Destitute and hopeless, he decides to end it all. But when a beautiful and mysterious woman saves his life and his soul, it is the beginning of Konosuke\u2019s journey into a strange world of magic that exists a step away from his own.", "tagline": "A down-and-out samurai enters a strange world of magic searching for honor and redemption.", "rating": "tp", "vanityurl": "steel-of-the-celestial-shadows", "copyright": "TAIYO TO TSUKI NO HAGANE \u00a9 2020 Daruma MATSUURA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707377729, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6609-Header_SteelCelestialShadows_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3881-Thumb_SteelCelestialShadows_400x320.jpg", "label": null, "recommended_series_ids": "498,92,14,232,490,523", "latest_author": "Story and Art by Daruma Matsuura", "title_sort": "steel of the celestial shadows"}}, {"manga_series": {"id": 897, "updated_at": "2023-12-01T18:11:29.000-08:00", "manga_series_common_id": 897, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2536, "manga_imprint_id": null, "title": "Tokyo These Days", "synopsis": "After 30 years as a manga editor, Kazuo Shiozawa suddenly quits. Although he feels early retirement is the only way to atone for his failures as an editor, the manga world isn\u2019t done with him.", "tagline": "From Eisner winner Taiyo Matsumoto, creator of Tekkonkinkreet, Ping Pong, and Sunny.", "rating": "t", "vanityurl": "tokyo-these-days", "copyright": "TOKYO HIGORO \u00a9 2021 Taiyo MATSUMOTO/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707290160, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6612-Header_TokyoTheseDays_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3883-Thumb_TokyoTheseDays_v2_400x320.jpg", "label": null, "recommended_series_ids": "613,688,766,228", "latest_author": "Story and Art by Taiyo Matsumoto", "title_sort": "tokyo these days"}}, {"manga_series": {"id": 899, "updated_at": "2024-01-10T12:27:45.000-08:00", "manga_series_common_id": 899, "device_id": 4, "keyart": null, "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2539, "manga_imprint_id": null, "title": "In the Name of the Mermaid Princess", "synopsis": "In the classic fairy tale, a mermaid princess gives up her special abilities for love. What happens if she doesn\u2019t?", "tagline": "In a society hostile to diversity, can mermaid princess Mio be true to herself?", "rating": "t", "vanityurl": "in-the-name-of-the-mermaid-princess", "copyright": "MIONO NANO MOTONI \u00a9 2020 by Yoshino Fumikawa, Miya Tashiro/SHUEISHA Inc.", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": null, "link_img": null, "subscription_type": null, "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707464368, "has_gns": true, "num_gns": 1, "has_chapters": false, "num_chapters": 0, "num_chapters_free": 0, "chapter_latest_pub_date": 0, "chapter_latest_num": 0, "chapter_last_num": 0, "keyart_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6586-Header_InNameMermaidPrincess_2000x800.jpg", "link_img_url": "https://dw9to29mmj727.cloudfront.net/properties/2016/3899-Thumb_InNameMermaidPrincess_400x320.jpg", "label": null, "recommended_series_ids": "822,541,595", "latest_author": "Story by Yoshino Fumikawa, Art by Miya Tashiro", "title_sort": "in the name of the mermaid princess"}}, {"manga_series": {"id": 932, "updated_at": "2024-01-25T17:02:05.000-08:00", "manga_series_common_id": 932, "device_id": 4, "keyart": "img/manga_series_header/932-Header_FoolNight_v2_2000x800.jpg", "published": true, "subscription_promo_text": null, "subscription_itunes_product_id": null, "subscription_price": null, "subscription_android_product_id": null, "list_price": null, "pb_property_id": 2550, "manga_imprint_id": null, "title": "Fool Night", "synopsis": "", "tagline": "In a distant dystopian future, Kamiya must choose between saving his family and saving himself.", "rating": "tp", "vanityurl": "fool-night", "copyright": "FOOL NIGHT \u00a9\ufe0f 2021 Kasumi YASUDA/SHOGAKUKAN", "show_chapter": true, "show_volume": true, "can_subscribe": false, "rtl": true, "featured_section": null, "header_img": "img/manga_series_header/932-Header_FoolNight_v2_2000x800.jpg", "link_img": "img/manga_series_link_img/932-th-Thumb_FoolNight_400x320.jpg", "subscription_type": "vm", "imprint_id": null, "imprint_title": "(no imprint)", "mod_ts": 1707440408, "has_gns": true, "num_gns": 0, "has_chapters": true, "num_chapters": 42, "num_chapters_free": 6, "chapter_latest_pub_date": 1707440310, "chapter_latest_num": 70, "chapter_last_num": 70, "keyart_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_header/932-Header_FoolNight_v2_2000x800.jpg", "link_img_url": "https://dwgkfo5b3odmw.cloudfront.net/img/manga_series_link_img/932-th-Thumb_FoolNight_400x320.jpg", "label": "New Series!", "latest_author": "Kasumi Yasuda", "title_sort": "fool night"}}], "archive_info": {"ok": 1, "subscription_type": "vm", "archive_limit": 100, "archive_reset_seconds": 86400, "download_limit": 100, "download_expire_seconds": 604800}, "store_row_info": [{"type": "series_ids", "row_title": "Popular on VIZ Manga", "series_ids": [709, 82, 89, 901, 777, 884, 257, 744, 754, 600, 135]}, {"type": "series_ids", "row_title": "Love is in the air", "series_ids": [316, 148, 157, 242, 134, 606, 182, 834]}, {"type": "series_ids", "row_title": "Latest library chapters", "series_ids": [208, 843, 932, 836, 521, 876, 422, 835, 400, 873]}, {"type": "series_ids", "row_title": "Anime tie-ins", "series_ids": [585, 754, 600, 744, 836, 806, 777]}, {"type": "series_ids", "row_title": "Fan favorites", "series_ids": [713, 216, 443, 146, 689, 881, 169, 620, 303]}, {"type": "series_ids", "row_title": "Adventure starts here", "series_ids": [214, 698, 685, 207, 236, 218, 87, 725]}, {"type": "series_ids", "row_title": "Scene-stealing Shojo", "series_ids": [209, 776, 99, 84, 190, 497, 156, 742]}, {"type": "series_ids", "row_title": "Side-splitting comedies", "series_ids": [215, 98, 541, 585, 395, 478, 303, 237]}, {"type": "series_ids", "row_title": "Thought provoking thrillers ", "series_ids": [885, 932, 766, 883, 787, 95, 880, 19]}, {"type": "series_ids", "row_title": "Shonen Sunday ", "series_ids": [218, 710, 778, 698, 901, 82, 685]}, {"type": "series_ids", "row_title": " VIZ Originals", "series_ids": [765, 896, 834, 760]}], "announcement": {}, "header_promos": {"home_screen": [{"image_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6643-VIZManga_Carousel_Oishinbo_2000x800.jpg", "target_url": "vizmangaapp://?series_id=96"}, {"image_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6489-VIZManga_Carousel_FlyMeMoon_2000x800.jpg", "target_url": "vizmangaapp://?series_id=725"}, {"image_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6596-VIZManga_Carousel_Levius_2000x800.jpg", "target_url": "vizmangaapp://?series_id=614"}], "offer_screen": [{"image_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6456-VIZManga_SalesHeader_KomiUzuInu_2000x800.jpg", "target_url": null}, {"image_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6457-VIZManga_SalesHeader_AliceZomCallNight_v2_2000x800.jpg", "target_url": null}, {"image_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6458-VIZManga_SalesHeader_NanaKimiNiAoHaru_2000x800.jpg", "target_url": null}, {"image_url": "https://dw9to29mmj727.cloudfront.net/promo/2016/6459-VIZManga_SalesHeader_TekkonPunpunDrifting_v3_2000x800.jpg", "target_url": null}]}, "geo": "--"}