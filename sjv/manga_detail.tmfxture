{"ok": 1, "geo": "--", "chpt_msgs": [{"msg": "Chapters 88-97 are currently unavailable. We are working to backfill these chapters.", "offset": 88, "show_from": "2023-11-02T10:00:00.000-07:00"}], "data": [{"manga": {"id": 26216, "manga_common_id": 26216, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE100_R.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE100_R/thumb_android-VJbuxLkGEHaVji4lVbk_Hw.jpg", "featured": false, "created_at": "2023-01-24T11:14:06.000-08:00", "updated_at": "2023-01-24T11:43:43.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 26217, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "100.0", "parent_manga_common_id": null, "numpages": 20, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE100_R/thumb_android-VJbuxLkGEHaVji4lVbk_Hw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26217, "manga_common_id": 26217, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE101.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE101/thumb_android-yXDieNFL3_qYD5tRV4Tu9A.jpg", "featured": false, "created_at": "2023-01-24T11:14:14.000-08:00", "updated_at": "2023-01-24T11:44:59.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 26218, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "101.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE101/thumb_android-yXDieNFL3_qYD5tRV4Tu9A.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26218, "manga_common_id": 26218, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE102.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE102/thumb_android-lBkFY8r2kxYrHdFbo8FHEw.jpg", "featured": false, "created_at": "2023-01-24T11:14:21.000-08:00", "updated_at": "2023-01-24T11:46:07.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 26219, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "102.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE102/thumb_android-lBkFY8r2kxYrHdFbo8FHEw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26219, "manga_common_id": 26219, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE103.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE103/thumb_android-Z2tSeKr2ZldXv1aZlhFVkA.jpg", "featured": false, "created_at": "2023-01-24T11:14:26.000-08:00", "updated_at": "2023-01-24T11:47:14.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 26220, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "103.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE103/thumb_android-Z2tSeKr2ZldXv1aZlhFVkA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26220, "manga_common_id": 26220, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE104.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE104/thumb_android-8gW1NET1_vDsNZB2LSRC7w.jpg", "featured": false, "created_at": "2023-01-24T11:14:32.000-08:00", "updated_at": "2023-01-24T11:48:23.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 26221, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "104.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE104/thumb_android-8gW1NET1_vDsNZB2LSRC7w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26221, "manga_common_id": 26221, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE105.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE105/thumb_android-1vzDIzke3WoUIrtpgd5LPg.jpg", "featured": false, "created_at": "2023-01-24T11:14:39.000-08:00", "updated_at": "2023-01-24T11:49:32.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 26222, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "105.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE105/thumb_android-1vzDIzke3WoUIrtpgd5LPg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26222, "manga_common_id": 26222, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE106.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE106/thumb_android-Z8Vorr8qAZYhvn-ke_0Kig.jpg", "featured": false, "created_at": "2023-01-24T11:14:46.000-08:00", "updated_at": "2023-01-24T11:50:40.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 26223, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "106.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE106/thumb_android-Z8Vorr8qAZYhvn-ke_0Kig.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26223, "manga_common_id": 26223, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE107.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE107/thumb_android-4fWQofmLi1qMZXDY44_pZw.jpg", "featured": false, "created_at": "2023-01-24T11:14:57.000-08:00", "updated_at": "2023-01-24T11:51:49.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 29535, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "107.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE107/thumb_android-4fWQofmLi1qMZXDY44_pZw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26441, "manga_common_id": 26441, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE098.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE098/thumb_android-Y8L9Kmr1pDZmNYxLucu28w.jpg", "featured": false, "created_at": "2023-02-14T10:21:29.000-08:00", "updated_at": "2023-02-14T10:29:35.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 26442, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "98.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE098/thumb_android-Y8L9Kmr1pDZmNYxLucu28w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26442, "manga_common_id": 26442, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/FJE099.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE099/thumb_android-7WVhFUfxTqRujvTiVH8qYg.jpg", "featured": false, "created_at": "2023-02-14T10:21:34.000-08:00", "updated_at": "2023-02-14T10:30:45.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 26216, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "99.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE099/thumb_android-7WVhFUfxTqRujvTiVH8qYg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 29535, "manga_common_id": 29535, "device_id": 4, "published": true, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1693947600, "free": true, "url": "manga/shonensunday/frieren/FJE108.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE108/thumb_android-b4cPCSW94RT2ccngLqOJHA.jpg", "featured": false, "created_at": "2023-03-17T13:02:07.000-07:00", "updated_at": "2023-03-17T13:17:36.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 31956, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "108.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE108/thumb_android-b4cPCSW94RT2ccngLqOJHA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1693947600, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30291, "manga_common_id": 30291, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE01_1.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_1_android-w1FUeS3p7whNQbENlTFUcw.jpg", "featured": false, "created_at": "2023-03-19T18:51:33.000-07:00", "updated_at": "2023-03-19T18:51:29.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30292, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "1.0", "parent_manga_common_id": 22736, "numpages": 38, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_1_android-w1FUeS3p7whNQbENlTFUcw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30292, "manga_common_id": 30292, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonensunday/frieren/FJE01_Ch220231218_L.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE01_Ch220231218_L/thumb_android-MrX7di3R-KZEG6dZFWPbpg.jpg", "featured": false, "created_at": "2023-03-19T18:56:24.000-07:00", "updated_at": "2023-03-19T18:56:20.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30293, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "2.0", "parent_manga_common_id": 22736, "numpages": 36, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1703064702, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE01_Ch220231218_L/thumb_android-MrX7di3R-KZEG6dZFWPbpg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30293, "manga_common_id": 30293, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE01_3.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_3_android-jbmjHLNP95QYW8eYamlFoQ.jpg", "featured": false, "created_at": "2023-03-19T19:01:06.000-07:00", "updated_at": "2023-03-19T19:01:02.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30294, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "3.0", "parent_manga_common_id": 22736, "numpages": 34, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_3_android-jbmjHLNP95QYW8eYamlFoQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30294, "manga_common_id": 30294, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1697216400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE01_4.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_4_android-uokeyB5K8XKfBU3UN1EbLw.jpg", "featured": false, "created_at": "2023-03-19T19:03:55.000-07:00", "updated_at": "2023-03-19T19:03:51.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30295, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "4.0", "parent_manga_common_id": 22736, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_4_android-uokeyB5K8XKfBU3UN1EbLw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1697216400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30295, "manga_common_id": 30295, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1697216400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE01_5.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_5_android-7NElu5KIgLOyfZ7dEn369Q.jpg", "featured": false, "created_at": "2023-03-19T19:06:56.000-07:00", "updated_at": "2023-03-19T19:06:52.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30296, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "5.0", "parent_manga_common_id": 22736, "numpages": 20, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_5_android-7NElu5KIgLOyfZ7dEn369Q.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1697216400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30296, "manga_common_id": 30296, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1697216400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE01_6.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_6_android-NRRQw23RzFGtHL4te-1OrA.jpg", "featured": false, "created_at": "2023-03-19T19:09:42.000-07:00", "updated_at": "2023-03-19T19:09:38.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30297, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "6.0", "parent_manga_common_id": 22736, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_6_android-NRRQw23RzFGtHL4te-1OrA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1697216400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30297, "manga_common_id": 30297, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1697216400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE01_7.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_7_android-Eucl0Q2gHavYu1kmv_isfw.jpg", "featured": false, "created_at": "2023-03-19T19:13:34.000-07:00", "updated_at": "2023-03-19T19:13:30.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30298, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "7.0", "parent_manga_common_id": 22736, "numpages": 23, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22736_FJE01_7_android-Eucl0Q2gHavYu1kmv_isfw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1697216400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30298, "manga_common_id": 30298, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_8.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_8_android-svLGblTeLCVHIgYtV2buIw.jpg", "featured": false, "created_at": "2023-03-19T19:17:51.000-07:00", "updated_at": "2023-03-19T19:17:47.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30299, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "8.0", "parent_manga_common_id": 22928, "numpages": 19, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_8_android-svLGblTeLCVHIgYtV2buIw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30299, "manga_common_id": 30299, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_9.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_9_android-j83_aZokYfWoABkfvTUkoA.jpg", "featured": false, "created_at": "2023-03-19T19:20:43.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30300, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "9.0", "parent_manga_common_id": 22928, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_9_android-j83_aZokYfWoABkfvTUkoA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30300, "manga_common_id": 30300, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_10.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_10_android-QfPVEHIEOhtdTgmZ0S2iNA.jpg", "featured": false, "created_at": "2023-03-19T19:24:11.000-07:00", "updated_at": "2023-03-19T19:24:06.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30301, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "10.0", "parent_manga_common_id": 22928, "numpages": 22, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_10_android-QfPVEHIEOhtdTgmZ0S2iNA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30301, "manga_common_id": 30301, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_11.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_11_android-joNs8lfUliKWteRndkpVpw.jpg", "featured": false, "created_at": "2023-03-19T19:27:27.000-07:00", "updated_at": "2023-03-19T19:27:23.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30302, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "11.0", "parent_manga_common_id": 22928, "numpages": 20, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_11_android-joNs8lfUliKWteRndkpVpw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30302, "manga_common_id": 30302, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_12.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_12_android-cNU2ALFjNd2NxygqXx2_hw.jpg", "featured": false, "created_at": "2023-03-19T19:30:27.000-07:00", "updated_at": "2023-03-19T19:30:23.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30303, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "12.0", "parent_manga_common_id": 22928, "numpages": 20, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_12_android-cNU2ALFjNd2NxygqXx2_hw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30303, "manga_common_id": 30303, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_13.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_13_android-TDQhF4zBZ_LzaRtnWf7KPQ.jpg", "featured": false, "created_at": "2023-03-19T19:33:02.000-07:00", "updated_at": "2023-03-19T19:32:58.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30304, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "13.0", "parent_manga_common_id": 22928, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_13_android-TDQhF4zBZ_LzaRtnWf7KPQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30304, "manga_common_id": 30304, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_14.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_14_android-W7LcT9B-ijwoPVwRC9jUVg.jpg", "featured": false, "created_at": "2023-03-19T19:35:37.000-07:00", "updated_at": "2023-03-19T19:35:33.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30305, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "14.0", "parent_manga_common_id": 22928, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_14_android-W7LcT9B-ijwoPVwRC9jUVg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30305, "manga_common_id": 30305, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_15.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_15_android-FNKccFBd0uR8N2xa2dhGvQ.jpg", "featured": false, "created_at": "2023-03-19T19:38:22.000-07:00", "updated_at": "2023-03-19T19:38:17.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30306, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "15.0", "parent_manga_common_id": 22928, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_15_android-FNKccFBd0uR8N2xa2dhGvQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30306, "manga_common_id": 30306, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_16.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_16_android-mu85TTQdq4qXfRh8AUbOmA.jpg", "featured": false, "created_at": "2023-03-19T19:41:25.000-07:00", "updated_at": "2023-03-19T19:41:21.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30307, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "16.0", "parent_manga_common_id": 22928, "numpages": 19, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_16_android-mu85TTQdq4qXfRh8AUbOmA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30307, "manga_common_id": 30307, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE02_17.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_17_android-SgGYi8wTII6RSGpdQXdiMQ.jpg", "featured": false, "created_at": "2023-03-19T19:45:03.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30308, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "17.0", "parent_manga_common_id": 22928, "numpages": 21, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22928_FJE02_17_android-SgGYi8wTII6RSGpdQXdiMQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30308, "manga_common_id": 30308, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_18.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_18_android-389Pxsx5qVZM1vz7g8IwDw.jpg", "featured": false, "created_at": "2023-03-19T19:48:52.000-07:00", "updated_at": "2023-03-19T19:48:48.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30309, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "18.0", "parent_manga_common_id": 22971, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_18_android-389Pxsx5qVZM1vz7g8IwDw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30309, "manga_common_id": 30309, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_19.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_19_android-WKcyiFcgIgJLsyZFXVCuEQ.jpg", "featured": false, "created_at": "2023-03-19T19:51:53.000-07:00", "updated_at": "2023-03-19T19:51:49.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30310, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "19.0", "parent_manga_common_id": 22971, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_19_android-WKcyiFcgIgJLsyZFXVCuEQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30310, "manga_common_id": 30310, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_20.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_20_android-UycATk_BZSRSyxCN_V_a-w.jpg", "featured": false, "created_at": "2023-03-19T19:56:00.000-07:00", "updated_at": "2023-03-19T19:55:56.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30311, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "20.0", "parent_manga_common_id": 22971, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_20_android-UycATk_BZSRSyxCN_V_a-w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30311, "manga_common_id": 30311, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_21.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_21_android-n3NU5eJxFBehgqGPjS6lrQ.jpg", "featured": false, "created_at": "2023-03-19T19:59:41.000-07:00", "updated_at": "2023-03-19T19:59:36.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30312, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "21.0", "parent_manga_common_id": 22971, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_21_android-n3NU5eJxFBehgqGPjS6lrQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30312, "manga_common_id": 30312, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_22.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_22_android-JVrev1XmL6rv3U1IMtH16Q.jpg", "featured": false, "created_at": "2023-03-19T20:03:41.000-07:00", "updated_at": "2023-03-19T20:03:37.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30313, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "22.0", "parent_manga_common_id": 22971, "numpages": 22, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_22_android-JVrev1XmL6rv3U1IMtH16Q.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30313, "manga_common_id": 30313, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_23.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_23_android-m0yMfTMhD5kvA974Gkb1GQ.jpg", "featured": false, "created_at": "2023-03-19T20:07:07.000-07:00", "updated_at": "2023-03-19T20:07:02.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30314, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "23.0", "parent_manga_common_id": 22971, "numpages": 22, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_23_android-m0yMfTMhD5kvA974Gkb1GQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30314, "manga_common_id": 30314, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_24.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_24_android-IO10OpEJ25ReTTU1ayUCMQ.jpg", "featured": false, "created_at": "2023-03-19T20:11:54.000-07:00", "updated_at": "2023-03-19T20:11:48.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30315, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "24.0", "parent_manga_common_id": 22971, "numpages": 20, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_24_android-IO10OpEJ25ReTTU1ayUCMQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30315, "manga_common_id": 30315, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_25.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_25_android-w3To1fpxF7NpHJbsH6kgYg.jpg", "featured": false, "created_at": "2023-03-19T20:16:14.000-07:00", "updated_at": "2023-03-19T20:16:10.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30316, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "25.0", "parent_manga_common_id": 22971, "numpages": 20, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_25_android-w3To1fpxF7NpHJbsH6kgYg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30316, "manga_common_id": 30316, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_26.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_26_android-r2imKoeMUbVM7nG2Hw78ug.jpg", "featured": false, "created_at": "2023-03-19T20:19:51.000-07:00", "updated_at": "2023-03-19T20:19:47.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30317, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "26.0", "parent_manga_common_id": 22971, "numpages": 19, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_26_android-r2imKoeMUbVM7nG2Hw78ug.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30317, "manga_common_id": 30317, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE03_27.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_27_android-psTgLJQEUeOHYopGT9jJQg.jpg", "featured": false, "created_at": "2023-03-19T20:23:27.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30318, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "27.0", "parent_manga_common_id": 22971, "numpages": 19, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_22971_FJE03_27_android-psTgLJQEUeOHYopGT9jJQg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30318, "manga_common_id": 30318, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_28.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_28_android-sW59bRjovgA-nl1zY208fQ.jpg", "featured": false, "created_at": "2023-03-19T20:28:41.000-07:00", "updated_at": "2023-03-19T20:28:37.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30319, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "28.0", "parent_manga_common_id": 23327, "numpages": 20, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_28_android-sW59bRjovgA-nl1zY208fQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30319, "manga_common_id": 30319, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_29.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_29_android-9CwBxhMtfgLn5sxXp2I81A.jpg", "featured": false, "created_at": "2023-03-19T20:31:53.000-07:00", "updated_at": "2023-03-19T20:31:49.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30320, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "29.0", "parent_manga_common_id": 23327, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_29_android-9CwBxhMtfgLn5sxXp2I81A.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30320, "manga_common_id": 30320, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_30.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_30_android-8qf4jMlyF2yJNz7sFkfIAw.jpg", "featured": false, "created_at": "2023-03-19T20:35:09.000-07:00", "updated_at": "2023-03-19T20:35:05.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30321, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "30.0", "parent_manga_common_id": 23327, "numpages": 19, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_30_android-8qf4jMlyF2yJNz7sFkfIAw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30321, "manga_common_id": 30321, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_31.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_31_android-yzbwgRx9-sSNirqlSGbSrQ.jpg", "featured": false, "created_at": "2023-03-19T20:38:05.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30322, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "31.0", "parent_manga_common_id": 23327, "numpages": 17, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_31_android-yzbwgRx9-sSNirqlSGbSrQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30322, "manga_common_id": 30322, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_32.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_32_android-t3J5K9pfXCcOqUWGD2qGkA.jpg", "featured": false, "created_at": "2023-03-19T20:40:58.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30323, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "32.0", "parent_manga_common_id": 23327, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_32_android-t3J5K9pfXCcOqUWGD2qGkA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30323, "manga_common_id": 30323, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_33.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_33_android-LcdzdnGM9xhhSoHHmk_m5w.jpg", "featured": false, "created_at": "2023-03-19T20:43:39.000-07:00", "updated_at": "2023-03-19T20:43:35.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30324, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "33.0", "parent_manga_common_id": 23327, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_33_android-LcdzdnGM9xhhSoHHmk_m5w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30324, "manga_common_id": 30324, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_34.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_34_android-VLm2wS41V7i5b3jKOEvgJQ.jpg", "featured": false, "created_at": "2023-03-19T20:46:40.000-07:00", "updated_at": "2023-03-19T20:46:36.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30325, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "34.0", "parent_manga_common_id": 23327, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_34_android-VLm2wS41V7i5b3jKOEvgJQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30325, "manga_common_id": 30325, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_35.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_35_android-EodYQvSYUpHGYG1hsiWUkA.jpg", "featured": false, "created_at": "2023-03-19T20:49:33.000-07:00", "updated_at": "2023-03-19T20:49:29.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30326, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "35.0", "parent_manga_common_id": 23327, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_35_android-EodYQvSYUpHGYG1hsiWUkA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30326, "manga_common_id": 30326, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_36.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_36_android-CHfYiR7co4f6qjR0wmuv-g.jpg", "featured": false, "created_at": "2023-03-19T20:52:21.000-07:00", "updated_at": "2023-03-19T20:52:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30327, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "36.0", "parent_manga_common_id": 23327, "numpages": 17, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_36_android-CHfYiR7co4f6qjR0wmuv-g.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30327, "manga_common_id": 30327, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE04_37.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_37_android-R2VPcI6HLf1SLO80amtbfA.jpg", "featured": false, "created_at": "2023-03-19T20:56:16.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30328, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "37.0", "parent_manga_common_id": 23327, "numpages": 21, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23327_FJE04_37_android-R2VPcI6HLf1SLO80amtbfA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30328, "manga_common_id": 30328, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_38.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_38_android-7WcLayyrmXleqbDhsvAn5A.jpg", "featured": false, "created_at": "2023-03-19T21:00:40.000-07:00", "updated_at": "2023-03-19T21:00:36.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30329, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "38.0", "parent_manga_common_id": 23335, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_38_android-7WcLayyrmXleqbDhsvAn5A.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30329, "manga_common_id": 30329, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_39.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_39_android-K_KYzpgaw7YGI-qZhZyeXg.jpg", "featured": false, "created_at": "2023-03-19T21:03:28.000-07:00", "updated_at": "2023-03-19T21:03:23.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30330, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "39.0", "parent_manga_common_id": 23335, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_39_android-K_KYzpgaw7YGI-qZhZyeXg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30330, "manga_common_id": 30330, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_40.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_40_android-As0_D2CmywYV7re1FlasZQ.jpg", "featured": false, "created_at": "2023-03-19T21:06:27.000-07:00", "updated_at": "2023-03-19T21:06:22.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30331, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "40.0", "parent_manga_common_id": 23335, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_40_android-As0_D2CmywYV7re1FlasZQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30331, "manga_common_id": 30331, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_41.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_41_android-4nwIqYNn0asJtO3NjXZW-g.jpg", "featured": false, "created_at": "2023-03-19T21:10:31.000-07:00", "updated_at": "2023-03-19T21:10:26.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30332, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "41.0", "parent_manga_common_id": 23335, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_41_android-4nwIqYNn0asJtO3NjXZW-g.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30332, "manga_common_id": 30332, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_42.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_42_android-UtDgFX56nZI7FwRKNKYltg.jpg", "featured": false, "created_at": "2023-03-19T21:15:11.000-07:00", "updated_at": "2023-03-19T21:15:06.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30333, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "42.0", "parent_manga_common_id": 23335, "numpages": 19, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_42_android-UtDgFX56nZI7FwRKNKYltg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30333, "manga_common_id": 30333, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_43.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_43_android-JZ4pcJ4oLwBKWObDFePOiA.jpg", "featured": false, "created_at": "2023-03-19T21:18:44.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30334, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "43.0", "parent_manga_common_id": 23335, "numpages": 20, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_43_android-JZ4pcJ4oLwBKWObDFePOiA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30334, "manga_common_id": 30334, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_44.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_44_android-Bi3Q6h_GB15vQsclnA0umw.jpg", "featured": false, "created_at": "2023-03-19T21:22:23.000-07:00", "updated_at": "2023-03-19T21:22:19.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30335, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "44.0", "parent_manga_common_id": 23335, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_44_android-Bi3Q6h_GB15vQsclnA0umw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30335, "manga_common_id": 30335, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_45.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_45_android-wAYfV1AIWgB4laGLsiGBLA.jpg", "featured": false, "created_at": "2023-03-19T21:26:19.000-07:00", "updated_at": "2023-03-19T21:26:14.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30336, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "45.0", "parent_manga_common_id": 23335, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_45_android-wAYfV1AIWgB4laGLsiGBLA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30336, "manga_common_id": 30336, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_46.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_46_android-YfZSTKQvGCuMaQYH-m1kWA.jpg", "featured": false, "created_at": "2023-03-19T21:29:56.000-07:00", "updated_at": "2023-03-19T21:29:51.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30337, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "46.0", "parent_manga_common_id": 23335, "numpages": 20, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_46_android-YfZSTKQvGCuMaQYH-m1kWA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30337, "manga_common_id": 30337, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE05_47.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_47_android-Rbo3pKmPQYehEDWjpGXYDg.jpg", "featured": false, "created_at": "2023-03-19T21:33:22.000-07:00", "updated_at": "2023-03-19T21:33:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30338, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "47.0", "parent_manga_common_id": 23335, "numpages": 19, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23335_FJE05_47_android-Rbo3pKmPQYehEDWjpGXYDg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30338, "manga_common_id": 30338, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_48.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_48_android-velCXmqKa17gGbGH-xX3KQ.jpg", "featured": false, "created_at": "2023-03-19T21:37:23.000-07:00", "updated_at": "2023-03-19T21:37:19.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30339, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "48.0", "parent_manga_common_id": 23896, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_48_android-velCXmqKa17gGbGH-xX3KQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30339, "manga_common_id": 30339, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_49.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_49_android-CmXzHart7X4g9AvccQySJQ.jpg", "featured": false, "created_at": "2023-03-19T21:40:16.000-07:00", "updated_at": "2023-03-19T21:40:12.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30340, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "49.0", "parent_manga_common_id": 23896, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_49_android-CmXzHart7X4g9AvccQySJQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30340, "manga_common_id": 30340, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_50.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_50_android-kZFhoOZO9pbyAFNymMAHuQ.jpg", "featured": false, "created_at": "2023-03-19T21:43:13.000-07:00", "updated_at": "2023-03-19T21:43:09.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30341, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "50.0", "parent_manga_common_id": 23896, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_50_android-kZFhoOZO9pbyAFNymMAHuQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30341, "manga_common_id": 30341, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_51.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_51_android-jbsqA4ugLu1HkiA8j5hp9g.jpg", "featured": false, "created_at": "2023-03-19T21:46:12.000-07:00", "updated_at": "2023-03-19T21:46:07.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30342, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "51.0", "parent_manga_common_id": 23896, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_51_android-jbsqA4ugLu1HkiA8j5hp9g.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30342, "manga_common_id": 30342, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_52.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_52_android-y7fJTqeQnOzaQBAosQC8rg.jpg", "featured": false, "created_at": "2023-03-19T21:49:24.000-07:00", "updated_at": "2023-03-19T21:49:20.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30343, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "52.0", "parent_manga_common_id": 23896, "numpages": 20, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_52_android-y7fJTqeQnOzaQBAosQC8rg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30343, "manga_common_id": 30343, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_53.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_53_android-c7M3PGRU-jpopjcBbe1ZwA.jpg", "featured": false, "created_at": "2023-03-19T21:52:09.000-07:00", "updated_at": "2023-03-19T21:52:05.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30344, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "53.0", "parent_manga_common_id": 23896, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_53_android-c7M3PGRU-jpopjcBbe1ZwA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30344, "manga_common_id": 30344, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_54.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_54_android-3rd9Xq4P3lVRLh05RYqJSw.jpg", "featured": false, "created_at": "2023-03-19T21:54:55.000-07:00", "updated_at": "2023-03-19T21:54:52.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30345, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "54.0", "parent_manga_common_id": 23896, "numpages": 19, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_54_android-3rd9Xq4P3lVRLh05RYqJSw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30345, "manga_common_id": 30345, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_55.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_55_android-hEW42_i5G9ixADDFnafK7Q.jpg", "featured": false, "created_at": "2023-03-19T21:57:49.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30346, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "55.0", "parent_manga_common_id": 23896, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_55_android-hEW42_i5G9ixADDFnafK7Q.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30346, "manga_common_id": 30346, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_56.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_56_android-MnWte42IEQaGQCkvZ8C1bA.jpg", "featured": false, "created_at": "2023-03-19T22:01:31.000-07:00", "updated_at": "2023-03-19T22:01:25.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30347, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "56.0", "parent_manga_common_id": 23896, "numpages": 20, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_56_android-MnWte42IEQaGQCkvZ8C1bA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30347, "manga_common_id": 30347, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE06_57.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_57_android-dnPYa4QrpK7RoBKir20p9w.jpg", "featured": false, "created_at": "2023-03-19T22:05:27.000-07:00", "updated_at": "2023-03-19T22:05:23.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30348, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "57.0", "parent_manga_common_id": 23896, "numpages": 19, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_23896_FJE06_57_android-dnPYa4QrpK7RoBKir20p9w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30348, "manga_common_id": 30348, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_58.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_58_android-W92yUoFJ5gHA9LFToeVGFA.jpg", "featured": false, "created_at": "2023-03-19T22:09:10.000-07:00", "updated_at": "2023-03-19T22:09:06.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30349, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "58.0", "parent_manga_common_id": 24824, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_58_android-W92yUoFJ5gHA9LFToeVGFA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30349, "manga_common_id": 30349, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_59.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_59_android-PpSanlJv6WSNLWVj6YT-Ww.jpg", "featured": false, "created_at": "2023-03-19T22:11:35.000-07:00", "updated_at": "2023-03-19T22:11:31.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30350, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "59.0", "parent_manga_common_id": 24824, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_59_android-PpSanlJv6WSNLWVj6YT-Ww.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30350, "manga_common_id": 30350, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_60.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_60_android-Y13JIp62N8FDxCYmfDmlCw.jpg", "featured": false, "created_at": "2023-03-19T22:14:28.000-07:00", "updated_at": "2023-03-19T22:14:24.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30351, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "60.0", "parent_manga_common_id": 24824, "numpages": 19, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_60_android-Y13JIp62N8FDxCYmfDmlCw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30351, "manga_common_id": 30351, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_61.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_61_android-ki2u9mqm_nl2tlIgYSXWew.jpg", "featured": false, "created_at": "2023-03-19T22:17:57.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30352, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "61.0", "parent_manga_common_id": 24824, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_61_android-ki2u9mqm_nl2tlIgYSXWew.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30352, "manga_common_id": 30352, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_62.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_62_android-YQ-Doot4cR0qh68Zn1Ydpg.jpg", "featured": false, "created_at": "2023-03-19T22:21:32.000-07:00", "updated_at": "2023-03-19T22:21:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30353, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "62.0", "parent_manga_common_id": 24824, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_62_android-YQ-Doot4cR0qh68Zn1Ydpg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30353, "manga_common_id": 30353, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_63.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_63_android-RKD82UeE3s2eaSvZEjrkyw.jpg", "featured": false, "created_at": "2023-03-19T22:24:50.000-07:00", "updated_at": "2023-03-19T22:24:45.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30354, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "63.0", "parent_manga_common_id": 24824, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_63_android-RKD82UeE3s2eaSvZEjrkyw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30354, "manga_common_id": 30354, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_64.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_64_android-uBi6cEH9_C0z3D2O6Uwl7w.jpg", "featured": false, "created_at": "2023-03-19T22:27:37.000-07:00", "updated_at": "2023-03-19T22:27:33.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30355, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "64.0", "parent_manga_common_id": 24824, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_64_android-uBi6cEH9_C0z3D2O6Uwl7w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30355, "manga_common_id": 30355, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_65.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_65_android-1ldLoX7ND8aOhIup4Jpufg.jpg", "featured": false, "created_at": "2023-03-19T22:30:31.000-07:00", "updated_at": "2023-03-19T22:30:27.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30356, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "65.0", "parent_manga_common_id": 24824, "numpages": 18, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_65_android-1ldLoX7ND8aOhIup4Jpufg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30356, "manga_common_id": 30356, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_66.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_66_android-sdNO8OuKMilX6Xtuv1DBkQ.jpg", "featured": false, "created_at": "2023-03-19T22:33:36.000-07:00", "updated_at": "2023-03-19T22:33:31.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 30357, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "66.0", "parent_manga_common_id": 24824, "numpages": 19, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_66_android-sdNO8OuKMilX6Xtuv1DBkQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 30357, "manga_common_id": 30357, "device_id": 4, "published": false, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1677744000, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE07_67.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_67_android-pMco_xgiUinwFIp_68jYfA.jpg", "featured": false, "created_at": "2023-03-19T22:36:27.000-07:00", "updated_at": "2023-04-05T03:27:18.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39572, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "67.0", "parent_manga_common_id": 24824, "numpages": 17, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 0, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_24824_FJE07_67_android-pMco_xgiUinwFIp_68jYfA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1677744000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 31956, "manga_common_id": 31956, "device_id": 4, "published": true, "publication_date": "2023-03-02T00:00:00.000-08:00", "expiration_date": 1694552400, "free": true, "url": "manga/shonensunday/frieren/FJE109.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE109/thumb_android-JdePBJ9B99NebtuhCks2ag.jpg", "featured": false, "created_at": "2023-03-24T16:23:06.000-07:00", "updated_at": "2023-03-24T16:47:47.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 35149, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "109.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE109/thumb_android-JdePBJ9B99NebtuhCks2ag.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1677744000, "epoch_exp_date": 1694552400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 35149, "manga_common_id": 35149, "device_id": 4, "published": true, "publication_date": "2023-04-04T14:59:00.000-07:00", "expiration_date": 1695762000, "free": true, "url": "manga/shonensunday/frieren/FJE110.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE110/thumb_android-j5m9if5Lp_CY_S3dndl_kQ.jpg", "featured": false, "created_at": "2023-03-31T15:39:11.000-07:00", "updated_at": "2023-04-03T10:13:02.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39084, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "110.0", "parent_manga_common_id": null, "numpages": 16, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE110/thumb_android-j5m9if5Lp_CY_S3dndl_kQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1680645540, "epoch_exp_date": 1695762000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39084, "manga_common_id": 39084, "device_id": 4, "published": true, "publication_date": "2023-09-05T14:59:00.000-07:00", "expiration_date": 1696366800, "free": true, "url": "manga/shonensunday/frieren/FJE111.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE111/thumb_android-8vmJm29b6Fxm2smBTsqIdg.jpg", "featured": false, "created_at": "2023-05-16T11:52:55.000-07:00", "updated_at": "2023-09-05T11:31:05.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39530, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "111.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE111/thumb_android-8vmJm29b6Fxm2smBTsqIdg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1693951140, "epoch_exp_date": 1696366800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39530, "manga_common_id": 39530, "device_id": 4, "published": true, "publication_date": "2023-09-12T14:59:00.000-07:00", "expiration_date": 1697576400, "free": true, "url": "manga/shonensunday/frieren/FJE112.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE112/thumb_android-kDtcGRQYBQF83v9iy8QDPA.jpg", "featured": false, "created_at": "2023-06-16T12:58:48.000-07:00", "updated_at": "2023-09-11T09:07:34.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40241, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "112.0", "parent_manga_common_id": null, "numpages": 16, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE112/thumb_android-kDtcGRQYBQF83v9iy8QDPA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1694555940, "epoch_exp_date": 1697576400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39572, "manga_common_id": 39572, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_68.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_68_android-dcK4GUOiwweKz_J3kXAypA.jpg", "featured": false, "created_at": "2023-06-20T16:31:44.000-07:00", "updated_at": "2023-06-20T16:31:37.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39573, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "68.0", "parent_manga_common_id": 25617, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_68_android-dcK4GUOiwweKz_J3kXAypA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39573, "manga_common_id": 39573, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_69.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_69_android-55u3QOUIrGxYYA3CvLfzUQ.jpg", "featured": false, "created_at": "2023-06-20T16:34:31.000-07:00", "updated_at": "2023-06-20T16:34:24.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39574, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "69.0", "parent_manga_common_id": 25617, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_69_android-55u3QOUIrGxYYA3CvLfzUQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39574, "manga_common_id": 39574, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_70.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_70_android-zcvcbFesTQRvQBn8DhLl8A.jpg", "featured": false, "created_at": "2023-06-20T16:37:33.000-07:00", "updated_at": "2023-06-30T14:53:35.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39575, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "70.0", "parent_manga_common_id": 25617, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_70_android-zcvcbFesTQRvQBn8DhLl8A.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39575, "manga_common_id": 39575, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_71.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_71_android-x1vWUdVGHxorzGx4x1BtCQ.jpg", "featured": false, "created_at": "2023-06-20T16:40:31.000-07:00", "updated_at": "2023-06-20T16:40:25.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39576, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "71.0", "parent_manga_common_id": 25617, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_71_android-x1vWUdVGHxorzGx4x1BtCQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39576, "manga_common_id": 39576, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_72.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_72_android-1BjxbfFCj412ElDwDLuApw.jpg", "featured": false, "created_at": "2023-06-20T16:43:28.000-07:00", "updated_at": "2023-06-20T16:43:21.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39577, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "72.0", "parent_manga_common_id": 25617, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_72_android-1BjxbfFCj412ElDwDLuApw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39577, "manga_common_id": 39577, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_73.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_73_android-tBVFDw6NCaeXgsvXyVDdqw.jpg", "featured": false, "created_at": "2023-06-20T16:46:37.000-07:00", "updated_at": "2023-06-30T14:54:11.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39578, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "73.0", "parent_manga_common_id": 25617, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_73_android-tBVFDw6NCaeXgsvXyVDdqw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39578, "manga_common_id": 39578, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_74.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_74_android-uJI25m4DdAxz1MDqYqqU8g.jpg", "featured": false, "created_at": "2023-06-20T16:49:39.000-07:00", "updated_at": "2023-06-20T16:49:31.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39579, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "74.0", "parent_manga_common_id": 25617, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_74_android-uJI25m4DdAxz1MDqYqqU8g.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39579, "manga_common_id": 39579, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_75.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_75_android-1EJdV3gts0u7kf9zAOh-rQ.jpg", "featured": false, "created_at": "2023-06-20T16:52:41.000-07:00", "updated_at": "2023-06-20T16:52:35.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39580, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "75.0", "parent_manga_common_id": 25617, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_75_android-1EJdV3gts0u7kf9zAOh-rQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39580, "manga_common_id": 39580, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_76.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_76_android-pDxXEO8AgsXPF_XF0xYXyQ.jpg", "featured": false, "created_at": "2023-06-20T16:56:01.000-07:00", "updated_at": "2023-06-20T16:55:54.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 39581, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "76.0", "parent_manga_common_id": 25617, "numpages": 20, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_76_android-pDxXEO8AgsXPF_XF0xYXyQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 39581, "manga_common_id": 39581, "device_id": 4, "published": true, "publication_date": "2023-07-06T10:00:00.000-07:00", "expiration_date": 1688662800, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE08_77.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_77_android-119qKNjJ632FNzdzzC2MYw.jpg", "featured": false, "created_at": "2023-06-20T16:59:11.000-07:00", "updated_at": "2023-06-20T16:59:04.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40769, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "77.0", "parent_manga_common_id": 25617, "numpages": 19, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_25617_FJE08_77_android-119qKNjJ632FNzdzzC2MYw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1688662800, "epoch_exp_date": 1688662800, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40241, "manga_common_id": 40241, "device_id": 4, "published": true, "publication_date": "2023-09-26T14:59:00.000-07:00", "expiration_date": 1698786000, "free": true, "url": "manga/shonensunday/frieren/FJE113.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE113/thumb_android-nJSokf677Flkr-ydlEdOjQ.jpg", "featured": false, "created_at": "2023-09-15T12:56:53.000-07:00", "updated_at": "2023-09-22T15:32:05.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40302, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "113.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE113/thumb_android-nJSokf677Flkr-ydlEdOjQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1695765540, "epoch_exp_date": 1698786000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40302, "manga_common_id": 40302, "device_id": 4, "published": true, "publication_date": "2023-10-03T14:59:00.000-07:00", "expiration_date": 1699999200, "free": true, "url": "manga/shonensunday/frieren/FJE114.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE114/thumb_android-bsGqQrOfj7yZo5U4EGSSfA.jpg", "featured": false, "created_at": "2023-09-22T15:48:14.000-07:00", "updated_at": "2023-10-02T15:04:53.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40533, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "114.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE114/thumb_android-bsGqQrOfj7yZo5U4EGSSfA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1696370340, "epoch_exp_date": 1699999200, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40533, "manga_common_id": 40533, "device_id": 4, "published": true, "publication_date": "2023-10-17T14:59:00.000-07:00", "expiration_date": 1701813600, "free": true, "url": "manga/shonensunday/frieren/FJE115.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE115/thumb_android-DDWmTabV3PKT64BK42xuMA.jpg", "featured": false, "created_at": "2023-10-06T15:20:30.000-07:00", "updated_at": "2023-10-16T10:27:47.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40741, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "115.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1701210819, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE115/thumb_android-DDWmTabV3PKT64BK42xuMA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1697579940, "epoch_exp_date": 1701813600, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40741, "manga_common_id": 40741, "device_id": 4, "published": true, "publication_date": "2023-10-31T14:59:00.000-07:00", "expiration_date": 1702418400, "free": true, "url": "manga/shonensunday/frieren/FJE116-revlm.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE116-revlm/thumb_android-5oxRZcqcDS_k8z2nspK3LA.jpg", "featured": false, "created_at": "2023-10-19T15:39:43.000-07:00", "updated_at": "2023-10-27T14:40:25.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40919, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "116.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1701454203, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE116-revlm/thumb_android-5oxRZcqcDS_k8z2nspK3LA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698789540, "epoch_exp_date": 1702418400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40769, "manga_common_id": 40769, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_78.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_78_android-ecB3IUIFZ0seKCuHGRcIuA.jpg", "featured": false, "created_at": "2023-10-23T09:40:13.000-07:00", "updated_at": "2023-10-26T15:14:46.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40770, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "78.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_78_android-ecB3IUIFZ0seKCuHGRcIuA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40770, "manga_common_id": 40770, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_79.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_79_android--bIwRjr1u5ETrU-cSbGEVA.jpg", "featured": false, "created_at": "2023-10-23T09:42:38.000-07:00", "updated_at": "2023-10-23T09:42:32.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40771, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "79.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_79_android--bIwRjr1u5ETrU-cSbGEVA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40771, "manga_common_id": 40771, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_80.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_80_android-j0Qhve-S_BkX3SDpdKaL2w.jpg", "featured": false, "created_at": "2023-10-23T09:45:02.000-07:00", "updated_at": "2023-10-23T09:44:56.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40772, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "80.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_80_android-j0Qhve-S_BkX3SDpdKaL2w.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40772, "manga_common_id": 40772, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_81.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_81_android-MLx6TSUJnvmN0vCYPNAxLw.jpg", "featured": false, "created_at": "2023-10-23T09:47:48.000-07:00", "updated_at": "2023-10-23T09:47:42.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40773, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "81.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_81_android-MLx6TSUJnvmN0vCYPNAxLw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40773, "manga_common_id": 40773, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_82.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_82_android-plgJejeo06o4opF1rSzKtQ.jpg", "featured": false, "created_at": "2023-10-23T09:50:27.000-07:00", "updated_at": "2023-10-23T09:50:21.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40774, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "82.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_82_android-plgJejeo06o4opF1rSzKtQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40774, "manga_common_id": 40774, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_83.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_83_android-eyDqd9FBThvOQpYpWjlclQ.jpg", "featured": false, "created_at": "2023-10-23T09:53:19.000-07:00", "updated_at": "2023-10-26T15:15:27.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40775, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "83.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_83_android-eyDqd9FBThvOQpYpWjlclQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40775, "manga_common_id": 40775, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_84.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_84_android-aaS9YViwg_XHOkC3JT3W3Q.jpg", "featured": false, "created_at": "2023-10-23T09:55:57.000-07:00", "updated_at": "2023-10-23T09:55:51.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40776, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "84.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_84_android-aaS9YViwg_XHOkC3JT3W3Q.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40776, "manga_common_id": 40776, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_85.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_85_android-DrWwtQkd_-WsU4pFEknIkA.jpg", "featured": false, "created_at": "2023-10-23T09:58:33.000-07:00", "updated_at": "2023-10-23T09:58:27.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40777, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "85.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_85_android-DrWwtQkd_-WsU4pFEknIkA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40777, "manga_common_id": 40777, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_86.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_86_android-8SzG20K9AQjmuFqopowPiQ.jpg", "featured": false, "created_at": "2023-10-23T10:01:22.000-07:00", "updated_at": "2023-10-26T15:15:47.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 40778, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "86.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_86_android-8SzG20K9AQjmuFqopowPiQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40778, "manga_common_id": 40778, "device_id": 4, "published": true, "publication_date": "2023-11-02T10:00:00.000-07:00", "expiration_date": 1698944400, "free": true, "url": "manga/shonensunday/frieren/chapters/FJE09_87.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_87_android-8U53b3224mrV9_YIS1ufxQ.jpg", "featured": false, "created_at": "2023-10-23T10:04:01.000-07:00", "updated_at": "2023-10-23T10:03:53.000-07:00", "price": null, "list_price": null, "next_manga_common_id": 26441, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "87.0", "parent_manga_common_id": 26304, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/thumb_26304_FJE09_87_android-8U53b3224mrV9_YIS1ufxQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1698944400, "epoch_exp_date": 1698944400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40919, "manga_common_id": 40919, "device_id": 4, "published": true, "publication_date": "2023-11-14T14:59:00.000-08:00", "expiration_date": 1704492000, "free": true, "url": "manga/shonensunday/frieren/FJE117-revlm.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE117-revlm/thumb_android-rnx6a2cx5LCtTpYXkgAXlA.jpg", "featured": false, "created_at": "2023-11-03T11:22:28.000-07:00", "updated_at": "2023-11-10T15:35:31.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 40964, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "117.0", "parent_manga_common_id": null, "numpages": 20, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1701973854, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE117-revlm/thumb_android-rnx6a2cx5LCtTpYXkgAXlA.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1700002740, "epoch_exp_date": 1704492000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 40964, "manga_common_id": 40964, "device_id": 4, "published": true, "publication_date": "2023-12-05T14:59:00.000-08:00", "expiration_date": 1704837600, "free": true, "url": "manga/shonensunday/frieren/FJE118.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE118/thumb_android-MnZ1E6L6KH0V9b-xdGB86g.jpg", "featured": false, "created_at": "2023-11-10T10:10:49.000-08:00", "updated_at": "2023-12-04T15:53:50.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41147, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "118.0", "parent_manga_common_id": null, "numpages": 22, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704311801, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE118/thumb_android-MnZ1E6L6KH0V9b-xdGB86g.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1701817140, "epoch_exp_date": 1704837600, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 41147, "manga_common_id": 41147, "device_id": 4, "published": true, "publication_date": "2023-12-12T14:59:00.000-08:00", "expiration_date": 1705442400, "free": true, "url": "manga/shonensunday/frieren/FJE119.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE119/thumb_android-65QQgRf75LQt6BMnoHaABQ.jpg", "featured": false, "created_at": "2023-12-01T10:09:57.000-08:00", "updated_at": "2023-12-11T15:56:29.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41165, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "119.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705019402, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE119/thumb_android-65QQgRf75LQt6BMnoHaABQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1702421940, "epoch_exp_date": 1705442400, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 41165, "manga_common_id": 41165, "device_id": 4, "published": true, "publication_date": "2024-01-05T14:59:00.000-08:00", "expiration_date": 1706652000, "free": true, "url": "manga/shonensunday/frieren/FJE120.zip", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE120/thumb_android--g5-NWxg9aw7BrwvfNJpHQ.jpg", "featured": false, "created_at": "2023-12-07T10:30:47.000-08:00", "updated_at": "2024-01-04T11:55:37.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41313, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "120.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1705962481, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE120/thumb_android--g5-NWxg9aw7BrwvfNJpHQ.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1704495540, "epoch_exp_date": 1706652000, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 41313, "manga_common_id": 41313, "device_id": 4, "published": true, "publication_date": "2024-01-09T14:59:00.000-08:00", "expiration_date": 1707260340, "free": true, "url": "manga/shonensunday/frieren/FJE121", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE121/thumb_android-3A5hYLEuJPUYj2lMvH0FLg.jpg", "featured": false, "created_at": "2024-01-03T11:56:34.000-08:00", "updated_at": "2024-01-08T16:13:14.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41460, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "121.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1706662014, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE121/thumb_android-3A5hYLEuJPUYj2lMvH0FLg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1704841140, "epoch_exp_date": 1707260340, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 41460, "manga_common_id": 41460, "device_id": 4, "published": true, "publication_date": "2024-01-16T14:59:00.000-08:00", "expiration_date": 1708469940, "free": true, "url": "manga/shonensunday/frieren/FJE122", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE122/thumb_android-JknNZujrZErjUvlfF8jcqg.jpg", "featured": false, "created_at": "2024-01-11T16:29:57.000-08:00", "updated_at": "2024-01-16T14:04:16.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41591, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "122.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707434326, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE122/thumb_android-JknNZujrZErjUvlfF8jcqg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1705445940, "epoch_exp_date": 1708469940, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 41591, "manga_common_id": 41591, "device_id": 4, "published": true, "publication_date": "2024-01-30T14:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonensunday/frieren/FJE123", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE123/_android-zIWvmLdNIr8YaGUysHlNPg.jpg", "featured": false, "created_at": "2024-01-22T14:27:55.000-08:00", "updated_at": "2024-01-30T12:05:10.000-08:00", "price": null, "list_price": null, "next_manga_common_id": 41634, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "123.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707260434, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE123/_android-zIWvmLdNIr8YaGUysHlNPg.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1706655540, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 41634, "manga_common_id": 41634, "device_id": 4, "published": true, "publication_date": "2024-02-06T14:59:00.000-08:00", "expiration_date": 0, "free": true, "url": "manga/shonensunday/frieren/FJE124", "description": "", "thumb": "manga/thumbs/shonensunday/frieren/FJE124/_android-sNy-zswSl_ASIkT7i6QqKw.jpg", "featured": false, "created_at": "2024-01-30T16:45:01.000-08:00", "updated_at": "2024-02-02T13:18:37.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 777, "title": null, "volume": null, "chapter": "124.0", "parent_manga_common_id": null, "numpages": 18, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707260409, "web_price": null, "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/shonensunday/frieren/FJE124/_android-sNy-zswSl_ASIkT7i6QqKw.jpg", "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1707260340, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 22736, "manga_common_id": 22736, "device_id": 4, "published": true, "publication_date": "2021-11-09T00:10:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/frieren/FJE01_reprint4.zip", "description": "Decades after their victory, the funeral of one her friends confronts Frieren with her own near immortality. Frieren sets out to fulfill the last wishes of her comrades and finds herself beginning a new adventure\u2026", "thumb": "manga/thumbs/thumb-90913-FrierenBeyondJourneysEnd_GN01_C1_Web-4-GPlKcUWbKtWtQ3Kgc1WDgQ.jpg", "featured": false, "created_at": "2021-06-16T23:17:27.000-07:00", "updated_at": "2021-10-27T11:41:08.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 22928, "new": false, "manga_series_common_id": 777, "title": "Frieren: Beyond Journey\u2019s End, Vol. 1", "volume": 1, "chapter": null, "parent_manga_common_id": null, "numpages": 192, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": "978-1-9747-2954-8", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": "a", "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "a", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704096064, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.frieren01", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-90913-FrierenBeyondJourneysEnd_GN01_C1_Web-4-GPlKcUWbKtWtQ3Kgc1WDgQ.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1636445400, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 22928, "manga_common_id": 22928, "device_id": 4, "published": true, "publication_date": "2022-01-11T00:10:46.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/frieren/FJE02.zip", "description": "At Eisen\u2019s urging, Frieren and her apprentice Fern head north seeking the land where heroes\u2019 souls are said to rest, which also happens to be the location of the Demon King\u2019s castle. Along the way, they meet Eisen\u2019s apprentice, whose fighting skills may come in handy\u2014though the Demon King is long gone, his surviving minions have unfinished business with Frieren!", "thumb": "manga/thumbs/thumb-91681-FrierenBeyondJourneysEnd_GN02_C1_Web-4-0fgPZoN6GhftOescNAPjqA.jpg", "featured": false, "created_at": "2021-07-13T23:28:39.000-07:00", "updated_at": "2021-12-21T10:20:22.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 22971, "new": false, "manga_series_common_id": 777, "title": "Frieren: Beyond Journey\u2019s End, Vol. 2", "volume": 2, "chapter": null, "parent_manga_common_id": null, "numpages": 198, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": "978-1-9747-3121-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704096069, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.frieren02", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-91681-FrierenBeyondJourneysEnd_GN02_C1_Web-4-0fgPZoN6GhftOescNAPjqA.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1641888646, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 22971, "manga_common_id": 22971, "device_id": 4, "published": true, "publication_date": "2022-03-08T00:10:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/frieren/FJE03.zip", "description": "An old enemy returns as Frieren continues her journey north. Decades ago, Frieren and her party defeated a servant of the Demon King called Aura the Guillotine, one of the powerful demons known as the Seven Sages of Destruction. Now Aura is back with a score to settle. But what price did Frieren pay for victory in the past, and how will the choices she made then affect the present?", "thumb": "manga/thumbs/thumb-91853-FrierenBeyondJourneysEnd_GN03_C1_Web-4-ePyIA9sEQ4HCRM8FnTMYrA.jpg", "featured": false, "created_at": "2021-07-15T00:59:15.000-07:00", "updated_at": "2022-02-22T15:31:05.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 23327, "new": false, "manga_series_common_id": 777, "title": "Frieren: Beyond Journey\u2019s End, Vol. 3", "volume": 3, "chapter": null, "parent_manga_common_id": null, "numpages": 198, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": "978-1-9747-3163-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 20, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1704096071, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.frieren03", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-91853-FrierenBeyondJourneysEnd_GN03_C1_Web-4-ePyIA9sEQ4HCRM8FnTMYrA.jpg", "entitled": null, "new_following": null, "preview_pages": 20, "epoch_pub_date": 1646727000, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 23327, "manga_common_id": 23327, "device_id": 4, "published": true, "publication_date": "2022-05-17T00:10:31.000-07:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/frieren/FJE04.zip", "description": "The village priest Sein has no intention of becoming an adventurer, but his desire to find a long-lost friend may lead him to join Frieren\u2019s party on their journey north. They are headed for the magical city of \u00c4u\u00dferst, where Frieren can obtain the first-class mage certification needed to enter the Northern Plateau region. At Frieren\u2019s urging, Fern decides to take the certification exam as well, and faces some unexpected competition\u2026", "thumb": "manga/thumbs/thumb-93277-FrierenBeyondJourneysEnd_GN04_C1_Web-4-z5SKRXGhU-AdfOED3hga3w.jpg", "featured": false, "created_at": "2021-09-28T23:18:50.000-07:00", "updated_at": "2022-05-03T09:54:42.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 23335, "new": false, "manga_series_common_id": 777, "title": "Frieren: Beyond Journey\u2019s End, Vol. 4", "volume": 4, "chapter": null, "parent_manga_common_id": null, "numpages": 190, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": "978-1-9747-3288-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.frieren04", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-93277-FrierenBeyondJourneysEnd_GN04_C1_Web-4-z5SKRXGhU-AdfOED3hga3w.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1652771431, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 23335, "manga_common_id": 23335, "device_id": 4, "published": true, "publication_date": "2022-07-19T00:10:00.000-07:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/frieren/FJE05.zip", "description": "Frieren and Fern have ended up on different teams in the highly competitive first-class mage exam. Capturing a rare bird is required to pass, but personality clashes among teammates are making things difficult. Everyone soon realizes there is more at stake than mere success or failure\u2014for some of them, the exam could be a matter of life and death.", "thumb": "manga/thumbs/thumb-93309-FrierenBeyondJourneysEnd_GN05_C1_Web-4-_jBnaX_eLu_zSqbuazAKAA.jpg", "featured": false, "created_at": "2021-09-28T23:20:41.000-07:00", "updated_at": "2022-07-06T10:04:06.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 23896, "new": false, "manga_series_common_id": 777, "title": "Frieren: Beyond Journey\u2019s End, Vol. 5", "volume": 5, "chapter": null, "parent_manga_common_id": null, "numpages": 190, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": "978-1-9747-3344-6", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.frieren05", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-93309-FrierenBeyondJourneysEnd_GN05_C1_Web-4-_jBnaX_eLu_zSqbuazAKAA.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1658214600, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 23896, "manga_common_id": 23896, "device_id": 4, "published": true, "publication_date": "2022-10-18T00:10:32.000-07:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/frieren/FJE06.zip", "description": "The mages begin the second stage of their certification exam: a dangerous expedition into the innermost depths of the ruins of the king\u2019s tomb. This time, there are no teams and it\u2019s every mage for themselves. Whether they want to team up or not, the challenge they will face\u2014their own clones\u2014will push their skills to the limit.", "thumb": "manga/thumbs/thumb-95553-FrierenBeyondJourneysEnd_GN06_C1_Web-4-QsgsBMuUebyhyuaFZtAwfg.jpg", "featured": false, "created_at": "2022-01-22T00:03:46.000-08:00", "updated_at": "2022-10-04T15:53:42.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 24824, "new": false, "manga_series_common_id": 777, "title": "Frieren: Beyond Journey\u2019s End, Vol. 6", "volume": 6, "chapter": null, "parent_manga_common_id": null, "numpages": 190, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": "978-1-9747-3541-9", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.frieren06", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-95553-FrierenBeyondJourneysEnd_GN06_C1_Web-4-QsgsBMuUebyhyuaFZtAwfg.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1666077032, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 24824, "manga_common_id": 24824, "device_id": 4, "published": true, "publication_date": "2023-01-17T00:11:00.000-08:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/frieren/FJE07.zip", "description": "After all the dangers the examinees have faced, passing the first-class mage exam will come down to a simple interview with Serie, whose intuition will determine success or failure. Then, Frieren, Fern, and Stark set out again on the road to Aureole, the land where souls rest. The journey provides new challenges\u2014though the most challenging thing Stark and Fern may have to face is a date with each other!", "thumb": "manga/thumbs/thumb-99265-FrierenBeyondJourneysEnd_GN07_C1_Web-4-yrJkZWhlh8A-U-t3WO9M-Q.jpg", "featured": false, "created_at": "2022-06-15T23:11:20.000-07:00", "updated_at": "2022-12-27T10:35:49.000-08:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 25617, "new": false, "manga_series_common_id": 777, "title": "Frieren: Beyond Journey\u2019s End, Vol. 7", "volume": 7, "chapter": null, "parent_manga_common_id": null, "numpages": 188, "author": "Story by Kanehito Yamada    Art by Tsukasa Abe", "issue_date": 0, "isbn13": "978-1-9747-3738-3", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 18, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.frieren07", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-99265-FrierenBeyondJourneysEnd_GN07_C1_Web-4-yrJkZWhlh8A-U-t3WO9M-Q.jpg", "entitled": null, "new_following": null, "preview_pages": 18, "epoch_pub_date": 1673943060, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 25617, "manga_common_id": 25617, "device_id": 4, "published": true, "publication_date": "2023-06-20T00:09:39.000-07:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/frieren/FJE08.zip", "description": "The Northern Plateau is a wild place, teeming with monsters and other dangers\u2014a place Frieren once traveled with her legendary companions now long passed. Now, she finds herself once again following old familiar paths, this time with new friends. But powerful enemies still stand in their way, and a demon lord of exceptional ability may be more than a match for this party of heroes.", "thumb": "manga/thumbs/thumb-102437-FrierenBeyondJourneysEnd_GN08_C1_Web-4-N-2xO6OSvF7wIfENEMLKPA.jpg", "featured": false, "created_at": "2022-09-29T23:13:37.000-07:00", "updated_at": "2023-05-08T16:36:03.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 26304, "new": false, "manga_series_common_id": 777, "title": "Frieren: Beyond Journey\u2019s End, Vol. 8", "volume": 8, "chapter": null, "parent_manga_common_id": null, "numpages": 190, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": "978-1-9747-3962-2", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.frieren08", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-102437-FrierenBeyondJourneysEnd_GN08_C1_Web-4-N-2xO6OSvF7wIfENEMLKPA.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1687244979, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 26304, "manga_common_id": 26304, "device_id": 4, "published": true, "publication_date": "2023-10-17T00:08:24.000-07:00", "expiration_date": 0, "free": false, "url": "manga/shonensunday/frieren/FJE09.zip", "description": "As Frieren, Fern, and Stark continue their journey in the Northern Plateau, they face many obstacles, both natural and supernatural, including the Great Tor Canyon. But once across the canyon, they receive a plea for help that will take them to a cursed city and a confrontation with Macht of the Golden Land, the last and most powerful of the Seven Sages of Destruction. Macht also has a surprising connection to Denken that may provide an edge in the struggle\u2026", "thumb": "manga/thumbs/thumb-105185-FrierenBeyondJourneysEnd_GN09_C1_Web-4-pX5QCSP3GNz-XPnlgmPJLw.jpg", "featured": false, "created_at": "2023-02-03T00:29:13.000-08:00", "updated_at": "2023-09-07T10:37:59.000-07:00", "price": "6.99", "list_price": "6.99", "next_manga_common_id": 39442, "new": false, "manga_series_common_id": 777, "title": "Frieren: Beyond Journey\u2019s End, Vol. 9", "volume": 9, "chapter": null, "parent_manga_common_id": null, "numpages": 189, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": "978-1-9747-4203-5", "contents_start_page": 1, "contents_year": null, "prerelease_preview": true, "free_pages": 19, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1699552800, "itunes_product_id": null, "android_product_id": "com.vizmedia.android.frieren09", "web_price": "6.99", "thumburl": "https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105185-FrierenBeyondJourneysEnd_GN09_C1_Web-4-pX5QCSP3GNz-XPnlgmPJLw.jpg", "entitled": null, "new_following": null, "preview_pages": 19, "epoch_pub_date": 1697526504, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}, {"manga": {"id": 41766, "manga_common_id": 41766, "device_id": 4, "published": false, "publication_date": "2024-02-20T14:59:00.000-08:00", "expiration_date": 0, "free": true, "url": null, "description": "", "thumb": null, "featured": false, "created_at": "2024-02-08T15:18:42.000-08:00", "updated_at": "2024-02-08T15:18:42.000-08:00", "price": null, "list_price": null, "next_manga_common_id": null, "new": false, "manga_series_common_id": 777, "title": "Chapter 125", "volume": null, "chapter": "125.0", "parent_manga_common_id": null, "numpages": 0, "author": "Story by Kanehito Yamada, Art by Tsukasa Abe", "issue_date": 0, "isbn13": null, "contents_start_page": 1, "contents_year": null, "prerelease_preview": false, "free_pages": 0, "midroll_page": null, "next_issue_date": 0, "rating_override": null, "override_show_volume": 0, "override_rtl": 0, "share_img": null, "series_title": "Frieren: Beyond Journey\u2019s End", "series_vanityurl": "frieren-the-journeys-end", "subscription_type": "vm", "rating": "tp", "show_chapter": true, "show_volume": true, "rtl": true, "subscription_issue": false, "imprint_id": null, "imprint_title": null, "mod_ts": 1707434322, "web_price": null, "thumburl": null, "entitled": null, "new_following": null, "preview_pages": 0, "epoch_pub_date": 1708469940, "epoch_exp_date": null, "series_title_sort": "frieren: beyond journey\u2019s end", "new_pokemon": false}}]}